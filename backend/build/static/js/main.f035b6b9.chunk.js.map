{"version":3,"sources":["components/bullet-graph/BulletGraph.module.css","components/associate-info/AssociateInfo.module.css","components/breadcrumbs/Breadcrumbs.module.css","components/radar-graph/RadarGraph.module.css","components/cycle-info/CycleInfo.module.css","components/calendar/Calendar.module.css","components/nav-bar/NavBar.module.css","components/upload/Upload.module.css","App.module.css","components/legend/Legend.module.css","containers/associate/Associate.module.css","containers/cycle/Cycle.module.css","components/toggle/Toggle.module.css","components/spinner/Spinner.module.css","containers/associates/Associates.module.css","containers/cycles/Cycles.module.css","redux/actionTypes.js","redux/reducers/cyclesReducer.js","redux/reducers/rootReducer.js","redux/actions.js","shared/metadata.js","shared/constants.js","shared/dataService.js","redux/sagas/cyclesSagas.js","redux/sagas/rootSaga.js","components/associate-info/AssociateInfo.js","components/breadcrumbs/Breadcrumbs.js","components/legend/Legend.js","components/basic-table/BasicTable.js","components/expansion-panel/ExpansionPanel.js","components/calendar/Calendar.js","components/radar-graph/RadarGraph.js","components/toggle/Toggle.js","components/bullet-graph/BulletGraph.js","components/spinner/Spinner.js","containers/associate/Associate.js","containers/associates/Associates.js","components/cycle-info/CycleInfo.js","containers/cycle/Cycle.js","containers/cycles/Cycles.js","containers/overview/Overview.js","components/nav-bar/NavBar.js","components/upload/Upload.js","App.js","index.js","redux/store.js"],"names":["module","exports","Divider","Graph","Graph2","Graph3","Header","Paper","Body","BodyOnly","BreadcrumbsLong","BreadcrumbsShort","Link","TallGraph","Card","Container","Error","Select","Button","Main","Modal","Label","Legend","Wrapper","Switch","loader","load1","FETCH_ALL_CYCLES_METRICS","FETCH_CYCLE_METRICS","POST_CYCLE_METRICS","initialState","allCycleAggr","associateMetadata","cycleAggr","cycleMetadata","cycleMetrics","error","loading","newAssociateMetadata","state","action","_i","_Object$entries","Object","entries","length","_ref5","_ref2","slicedToArray","key","value","_i2","_Object$entries2","_ref6","_ref4","newCycleAggr","_i3","_Object$entries3","_ref9","_ref8","cycleName","newCycleMetadata","_i4","_Object$entries4","_ref12","_ref11","newCycleMetrics","_i5","_Object$entries5","_ref15","_ref14","combineReducers","cycles","arguments","undefined","type","objectSpread","fetchAllCyclesMetrics","fetchAllCyclesMetricsSuccess","fetchCycleMetrics","fetchCycleMetricsSuccess","fetchCycleMetricsFail","postCycleMetricsSuccess","postCycleMetricsFail","shared_metadata","attendance","Excused Absence","Unexcused Absence","Excused Late Arrival","Unexcused Late Arrival","Optional Attendance","Interaction Type","quiz","projectScore","softSkills","cycleMetadate","modules","Project (Score)","HTML_CSS_Page_Match_Project_v2","Max Score","Module","JavaScript_Form_Validation_Project_v2","MongoDB_Database_Project_v3","PostgreSQL_Database_Project_v3","Garden_Center_API_Project_v4","Catalyte_Pet_Emporium_API_Project_v2","Garden_Center_Front_End_Project_v2","Redux_Garden_Center_Front_End_Project_v2","E_Commerce_Group_Project_v1","Final_Health_Project_v3","Garden_Center_API_Project_v5","Quiz","Quiz_Introductory_v1","Quiz_HTML_and_CSS_v1","Quiz_JavaScript_v1","Quiz_Intro_to_Java_v1","Quiz_Relational_Databases_v1","Quiz_Document_Databases_v1","Quiz_Java_Unit_Testing_And_OOP_v1","Quiz_React_js_v1","Quiz_React_js_v2","Quiz_Redux_v1","Quiz_Redux_v2","Quiz_Spring_With_Java_v2","Quiz_Document_Databases_v2","Quiz_Relational_Databases_v2","Quiz_Intro_to_Java_v2","Quiz_Java_Unit_Testing_And_OOP_v2","Quiz_JavaScript_v2","Quiz_Introductory_v2","Soft Skill Assessment","Problem Solving","Self Awareness and Self Improvement","Project Execution","Professionalism","Communication","staff","constants","attendanceColors","Mastery Learning Portland 2019","mlPortland2019","moduleColors","moduleLengthColors","percentiles","tradChicagoApril2019","Traditional Cycle Chicago April 2019","tradDenverJune2019","Traditional Cycle Denver June 2019","tradBostonJune2019","Traditional Cycle Boston June 2019","tradBaltimoreJuly2019","Traditional Cycle Baltimore July 2019","calcDaysSince","startDate","endDate","startDateSplit","split","startDateObj","Date","endDateSplit","cycleLength","Math","round","daysSinceStart","now","calcDateMarkers","metadata","Metadata","map","start","calcMetricAvg","associate","metric","maxScores","metrics","filter","event","metricAvg","reduce","acc","curr","Number","Score","Interaction","calcAttemptPassRatio","attempt","pass","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","trim","err","return","calcPercentiles","scores","avg","index","indexOf","formatPercentile","percentile","getAssessmentTableData","name","values","projectAvg","concat","projectScores","quizAvg","quizScores","softSkillsAvg","softSkillsScores","attemptPass","getUrlParams","urlHistory","url","location","pathname","join","cycle","watchCycle","postCycleMetrics","regenerator_default","a","wrap","_context","prev","all","takeEvery","stop","_marked","res","_res$data","data","_context2","axios","get","sent","put","apply","toConsumableArray","formatAllCycleData","t0","_marked2","_ref","_res","_context3","formatCycleData","_marked3","formData","history","_res2","_context4","post","push","_marked4","sortedMetrics","associates","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","item","includes","Person","sortMetircsByAssociate","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","person","Development Basics and Front End","end","Databases","Logic Layer (Java)","Front End Frameworks (React)","Group Project","Final Project","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","RegExp","test","getAssociateMetadata","associateAggr","avgs","forEach","CONSTS","calcAssociateAggr","attemptAvg","attemptMax","attemptMin","projectMax","projectMin","quizMax","quizMin","softSkillsMax","softSkillsMin","numAttempts","keys","numProjects","numQuizzes","numSoftSkills","calcCycleAggr","field","date","getCycleMetadata","i","_formatCycleData","_formatCycleData2","associateMeta","sort","b","projectPercentiles","perc","quizPercentiles","softSkillsPercentiles","calcAllCyclesPercentiles","rootSage","cyclesSagas","rootSaga_marked","AssociateInfo","props","_props$associate$find","find","exitRegex","bodyOnly","react_default","createElement","className","styles","Typography","variant","Fragment","display","color","breadcrumbs","path","Breadcrumbs","separator","aria-label","react_router_dom","to","items","colors","style","background","height","width","margin","splice","BasicTable","headers","rows","Table","TableHead","TableRow","header","TableCell","align","TableBody","row","ExpansionPanels","children","panelTitle","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","id","ExpansionPanelDetails","Calendar","events","newDateFormat","dateSplit","formatCalendarDate","day","toISOString","sortAttendanceEvents","countOfEvents","nivo_calendar_esm","from","emptyColor","top","right","bottom","left","yearSpacing","monthBorderColor","dayBorderWidth","dayBorderColor","minValue","maxValue","tooltip","legend_Legend","expansion_panel_ExpansionPanel","basic_table_BasicTable","RadarGraph","tall","title","subtitle","nivo_radar_esm","indexBy","curve","borderWidth","borderColor","gridLevels","gridShape","gridLabelOffset","enableDots","dotSize","dotColor","theme","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabel","dotLabelYOffset","scheme","fillOpacity","blendMode","legends","anchor","direction","translateX","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","effects","on","Toggle","checked","onChange","leftLabel","rightLabel","component","Grid","container","alignItems","spacing","BulletGraph","showModules","toggleHandler","_this","setState","prevState","prevTotal","moduleLengths","ranges","days","range","calcModuleLength","nivo_bullet_esm","measures","markers","titleAlign","titleOffsetX","measureSize","rangeColors","measureColors","markerColors","markerSize","_this$props","this","traditional","toggle_Toggle","createTradCycleGraph","createMLCycleGraphs","Component","Spinner","Associate","fetchCycle","_ref3","_getUrlParams2","tradCycle","breadcrumbs_Breadcrumbs","associate_info_AssociateInfo","radar_graph_RadarGraph","defineProperty","bullet_graph_BulletGraph","calendar_Calendar","dist_default","columns","options","sorting","pageSize","pageSizeOptions","spinner_Spinner","connect","dispatch","Associates","showInactive","fetchAllCycles","associateScores","_loop","leftCycle","_this2","table","createTableData","detailPanel","render","rowData","components","Toolbar","dist","actions","icon","onClick","CycleInfo","nameSplit","cycleType","formattedName","trainers","slice","TAs","startDates","currentNumAssociates","Cycle","tableData","handleChange","evt","target","cycle_info_CycleInfo","Max","Min","Average","Cycles","Overview","graph","10th","25th","50th","75th","90th","NavBar","sideDrawerOpen","clickHandler","AppBar","position","flexDirection","IconButton","edge","Menu","paddingTop","Drawer","open","onClose","role","onKeyDown","List","ListItem","button","ListItemIcon","Home","ListItemText","primary","Autorenew","esm_Person","ArrowUpward","Upload","selectedCycle","uploadFileHandler","FormData","append","uploadInput","files","postCycle","selectHandler","cycleList","MenuItem","CardHeader","FormControl","InputLabel","htmlFor","inputProps","CardContent","accept","ref","CardActions","disabled","App","toggleModal","resetError","nav_bar_NavBar","react_router","exact","aria-labelledby","aria-describedby","message","response","store","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","applyMiddleware","runSagas","run","configureStore","rootSaga","ReactDOM","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f035b6b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Divider\":\"BulletGraph_Divider__1Lt9q\",\"Graph\":\"BulletGraph_Graph__2twxI\",\"Graph2\":\"BulletGraph_Graph2__1KGx1\",\"Graph3\":\"BulletGraph_Graph3__2juOi\",\"Header\":\"BulletGraph_Header__1-AvP\",\"Paper\":\"BulletGraph_Paper__3RQJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Body\":\"AssociateInfo_Body__1Amn5\",\"BodyOnly\":\"AssociateInfo_BodyOnly__1hnG8\",\"Divider\":\"AssociateInfo_Divider__2giC_\",\"Header\":\"AssociateInfo_Header__fDohW\",\"Paper\":\"AssociateInfo_Paper__7kmRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadcrumbsLong\":\"Breadcrumbs_BreadcrumbsLong__8s6Lb\",\"BreadcrumbsShort\":\"Breadcrumbs_BreadcrumbsShort__2aE41\",\"Link\":\"Breadcrumbs_Link__3XnHM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Divider\":\"RadarGraph_Divider__su1au\",\"Graph\":\"RadarGraph_Graph__1Fujf\",\"Header\":\"RadarGraph_Header__2A8Wj\",\"Paper\":\"RadarGraph_Paper__EtRk4\",\"TallGraph\":\"RadarGraph_TallGraph__2Coj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Body\":\"CycleInfo_Body__1-DjS\",\"BodyOnly\":\"CycleInfo_BodyOnly__-nksY\",\"Divider\":\"CycleInfo_Divider__mU5EQ\",\"Header\":\"CycleInfo_Header__3nFYB\",\"Paper\":\"CycleInfo_Paper__lCS0H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Divider\":\"Calendar_Divider__oUUth\",\"Graph\":\"Calendar_Graph__2giCu\",\"Header\":\"Calendar_Header__2chVD\",\"Paper\":\"Calendar_Paper__1tvj2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Link\":\"NavBar_Link__9NP2W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Upload_Card__1DIyV\",\"Container\":\"Upload_Container__3WUYy\",\"Error\":\"Upload_Error__3Qcgp\",\"Select\":\"Upload_Select__sqkGM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"App_Button__1gK1e\",\"Main\":\"App_Main__lg996\",\"Modal\":\"App_Modal__2SRWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Legend_Label__v6ai1\",\"Legend\":\"Legend_Legend__20kP-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paper\":\"Associate_Paper__Sy8Hq\",\"Wrapper\":\"Associate_Wrapper__2osse\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paper\":\"Cycle_Paper__2Zs-R\",\"Wrapper\":\"Cycle_Wrapper__wq_xU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Switch\":\"Toggle_Switch__3vSQT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__2r4Ff\",\"load1\":\"Spinner_load1__-A6Rw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paper\":\"Associates_Paper__1ROWZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Cycles_Container__-2FDk\",\"Link\":\"Cycles_Link__SpMVp\",\"Paper\":\"Cycles_Paper__1fbk2\"};","export const FETCH_ALL_CYCLES_METRICS = 'FETCH_ALL_CYCLES_METRICS';\r\nexport const FETCH_ALL_CYCLES_METRICS_SUCCESS = 'FETCH_ALL_CYCLES_METRICS_SUCCESS';\r\nexport const FETCH_ALL_CYCLES_METRICS_FAIL = 'FETCH_ALL_CYCLES_METRICS_FAIL';\r\n\r\nexport const FETCH_CYCLE_METRICS = 'FETCH_CYCLE_METRICS';\r\nexport const FETCH_CYCLE_METRICS_SUCCESS = 'FETCH_CYCLE_METRICS_SUCCESS';\r\nexport const FETCH_CYCLE_METRICS_FAIL = 'FETCH_CYCLE_METRICS_FAIL';\r\n\r\nexport const POST_CYCLE_METRICS = 'POST_CYCLE_METRICS';\r\nexport const POST_CYCLE_METRICS_SUCCESS = 'POST_CYCLE_METRICS_SUCCESS';\r\nexport const POST_CYCLE_METRICS_FAIL = 'POST_CYCLE_METRICS_FAIL';\r\n\r\nexport const RESET_ERROR = 'RESET_ERROR;'","import { FETCH_ALL_CYCLES_METRICS, FETCH_ALL_CYCLES_METRICS_SUCCESS, FETCH_ALL_CYCLES_METRICS_FAIL, FETCH_CYCLE_METRICS, FETCH_CYCLE_METRICS_SUCCESS, FETCH_CYCLE_METRICS_FAIL, POST_CYCLE_METRICS, POST_CYCLE_METRICS_SUCCESS, POST_CYCLE_METRICS_FAIL, RESET_ERROR } from '../actionTypes';\r\n\r\nconst initialState = {\r\n  allCycleAggr: {},\r\n  associateMetadata: {},\r\n  cycleAggr: {},\r\n  cycleMetadata: [],\r\n  cycleMetrics: [],\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_ALL_CYCLES_METRICS: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: true\r\n      };\r\n    }\r\n    case FETCH_ALL_CYCLES_METRICS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        allCycleAggr: action.allCycleAggr,\r\n        associateMetadata: action.associateMetadata,\r\n        cycleAggr: action.cycleAggr,\r\n        cycleMetadata: action.cycleMetadata,\r\n        cycleMetrics: action.cycleMetrics,\r\n        loading: false,\r\n      };\r\n    }\r\n    case FETCH_ALL_CYCLES_METRICS_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false\r\n      }\r\n    }\r\n    case FETCH_CYCLE_METRICS: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: true\r\n      };\r\n    }\r\n    case FETCH_CYCLE_METRICS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        associateMetadata: newAssociateMetadata(state, action),\r\n        cycleAggr: newCycleAggr(state, action),\r\n        cycleMetadata: newCycleMetadata(state, action),\r\n        cycleMetrics: newCycleMetrics(state, action),\r\n        loading: false,\r\n      };\r\n    }\r\n    case FETCH_CYCLE_METRICS_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false\r\n      }\r\n    }\r\n    case POST_CYCLE_METRICS: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: true\r\n      };\r\n    }\r\n    case POST_CYCLE_METRICS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        associateMetadata: newAssociateMetadata(state, action),\r\n        cycleAggr: newCycleAggr(state, action),\r\n        cycleMetadata: newCycleMetadata(state, action),\r\n        cycleMetrics: newCycleMetrics(state, action),\r\n        loading: false,\r\n      };\r\n    }\r\n    case POST_CYCLE_METRICS_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false\r\n      }\r\n    }\r\n    case RESET_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst newAssociateMetadata = (state, action) => {\r\n  const newAssociateMetadata = {};\r\n  for (let [key, value] of Object.entries(state.associateMetadata)) {\r\n    newAssociateMetadata[key] = value;\r\n  }\r\n  for (let [key, value] of Object.entries(action.associateMetadata)) {\r\n    newAssociateMetadata[key] = value;\r\n  }\r\n  return newAssociateMetadata;\r\n}\r\n\r\nconst newCycleAggr = (state, action) => {\r\n  const newCycleAggr = {};\r\n  for (let [key, value] of Object.entries(state.cycleAggr)) {\r\n    newCycleAggr[key] = value;\r\n  }\r\n  newCycleAggr[action.cycleName] = action.cycleAggr\r\n  return newCycleAggr;\r\n}\r\n\r\nconst newCycleMetadata = (state, action) => {\r\n  const newCycleMetadata = {};\r\n  for (let [key, value] of Object.entries(state.cycleMetadata)) {\r\n    newCycleMetadata[key] = value;\r\n  }\r\n  newCycleMetadata[action.cycleName] = action.cycleMetadata\r\n  return newCycleMetadata;\r\n}\r\n\r\nconst newCycleMetrics = (state, action) => {\r\n  const newCycleMetrics = {};\r\n  for (let [key, value] of Object.entries(state.cycleMetrics)) {\r\n    newCycleMetrics[key] = value;\r\n  }\r\n  newCycleMetrics[action.cycleName] = action.cycleMetrics\r\n  return newCycleMetrics;\r\n}","import { combineReducers } from 'redux';\r\nimport cyclesReducer from './cyclesReducer';\r\n\r\nexport default combineReducers({ cycles: cyclesReducer });","import { FETCH_ALL_CYCLES_METRICS, FETCH_ALL_CYCLES_METRICS_SUCCESS, FETCH_ALL_CYCLES_METRICS_FAIL, FETCH_CYCLE_METRICS, FETCH_CYCLE_METRICS_SUCCESS, FETCH_CYCLE_METRICS_FAIL, POST_CYCLE_METRICS, POST_CYCLE_METRICS_SUCCESS, POST_CYCLE_METRICS_FAIL, RESET_ERROR } from './actionTypes';\r\n\r\nexport const fetchAllCyclesMetrics = () => ({\r\n    type: FETCH_ALL_CYCLES_METRICS,\r\n});\r\n\r\nexport const fetchAllCyclesMetricsSuccess = (cycleAggr, cycleMetadata, associateMetadata, cycleMetrics, allCycleAggr) => ({\r\n    type: FETCH_ALL_CYCLES_METRICS_SUCCESS,\r\n    cycleAggr,\r\n    cycleMetadata,\r\n    associateMetadata,\r\n    cycleMetrics,\r\n    allCycleAggr\r\n});\r\n\r\nexport const fetchAllCyclesMetricsFail = error => ({\r\n    type: FETCH_ALL_CYCLES_METRICS_FAIL,\r\n    error\r\n});\r\n\r\nexport const fetchCycleMetrics = cycleName => ({\r\n    type: FETCH_CYCLE_METRICS,\r\n    cycleName\r\n});\r\n\r\nexport const fetchCycleMetricsSuccess = (cycleAggr, cycleMetadata, associateMetadata, cycleMetrics, cycleName) => ({\r\n    type: FETCH_CYCLE_METRICS_SUCCESS,\r\n    cycleAggr,\r\n    cycleMetadata,\r\n    associateMetadata,\r\n    cycleMetrics,\r\n    cycleName\r\n});\r\n\r\nexport const fetchCycleMetricsFail = error => ({\r\n    type: FETCH_CYCLE_METRICS_FAIL,\r\n    error\r\n});\r\n\r\nexport const postCycleMetrics = (formData, cycleName, history) => ({\r\n    type: POST_CYCLE_METRICS,\r\n    formData,\r\n    cycleName,\r\n    history\r\n});\r\n\r\nexport const postCycleMetricsSuccess = (cycleAggr, cycleMetadata, associateMetadata, cycleMetrics, cycleName) => ({\r\n    type: POST_CYCLE_METRICS_SUCCESS,\r\n    cycleAggr,\r\n    cycleMetadata,\r\n    associateMetadata,\r\n    cycleMetrics,\r\n    cycleName\r\n});\r\n\r\nexport const postCycleMetricsFail = error => ({\r\n    type: POST_CYCLE_METRICS_FAIL,\r\n    error\r\n});\r\n\r\nexport const resetError = () => ({\r\n    type: RESET_ERROR\r\n});","// eventually to be moved to config file/DB\r\n\r\nexport default {\r\n  attendance: {\r\n    'Excused Absence': 0,\r\n    'Unexcused Absence': 1,\r\n    'Excused Late Arrival': 2,\r\n    'Unexcused Late Arrival': 3,\r\n    'Optional Attendance': 4\r\n  },\r\n  cycles: [\r\n    'mlPortland2019',\r\n    'tradChicagoApril2019',\r\n    'tradDenverJune2019',\r\n    'tradBostonJune2019',\r\n    'tradBaltimoreJuly2019'\r\n  ],\r\n  'Interaction Type': {\r\n    quiz: 'Quiz',\r\n    projectScore: 'Project (Score)',\r\n    softSkills: 'Soft Skill Assesment'\r\n  },\r\n  cycleMetadate: [\r\n    'Staff change',\r\n    'Cycle End Date',\r\n    'Cycle Start Date',\r\n    'Associate Start'\r\n  ],\r\n  modules: [\r\n    'Development Basics and Front End',\r\n    'Databases',\r\n    'Logic Layer (Java)',\r\n    'Front End Frameworks (React)',\r\n    'Group Project',\r\n    'Final Project'\r\n  ],\r\n  'Project (Score)': {\r\n    HTML_CSS_Page_Match_Project_v2: {\r\n      'Max Score': 30,\r\n      Module: 'Development Basics & Frontend'\r\n    },\r\n    JavaScript_Form_Validation_Project_v2: {\r\n      'Max Score': 30,\r\n      Module: 'Development Basics & Frontend'\r\n    },\r\n    MongoDB_Database_Project_v3: {\r\n      'Max Score': 30,\r\n      Module: 'Databases'\r\n    },\r\n    PostgreSQL_Database_Project_v3: {\r\n      'Max Score': 30,\r\n      Module: 'Databases'\r\n    },\r\n    Garden_Center_API_Project_v4: {\r\n      'Max Score': 30,\r\n      Module: 'Logic Layer (Java)'\r\n    },\r\n    Catalyte_Pet_Emporium_API_Project_v2: {\r\n      'Max Score': 30,\r\n      Module: 'Logic Layer (Java)'\r\n    },\r\n    Garden_Center_Front_End_Project_v2: {\r\n      'Max Score': 30,\r\n      Module: 'Frontend Frameworks (React)'\r\n    },\r\n    Redux_Garden_Center_Front_End_Project_v2: {\r\n      'Max Score': 30,\r\n      Module: 'Frontend Frameworks (React)'\r\n    },\r\n    E_Commerce_Group_Project_v1: {\r\n      'Max Score': 81,\r\n      Module: 'Group Project'\r\n    },\r\n    Final_Health_Project_v3: {\r\n      'Max Score': 30,\r\n      Module: 'Final Project'\r\n    },\r\n    Garden_Center_API_Project_v5: {\r\n      'Max Score': 30,\r\n      Module: 'Logic Layer (Java)'\r\n    }\r\n  },\r\n  'Quiz': {\r\n    Quiz_Introductory_v1: {\r\n      'Max Score': 17,\r\n      Module: 'Development Basics & Frontend',\r\n    },\r\n    Quiz_HTML_and_CSS_v1: {\r\n      'Max Score': 12,\r\n      Module: 'Development Basics & Frontend',\r\n    },\r\n    Quiz_JavaScript_v1: {\r\n      'Max Score': 49,\r\n      Module: 'Development Basics & Frontend',\r\n    },\r\n    Quiz_Intro_to_Java_v1: {\r\n      'Max Score': 19,\r\n      Module: 'Logic Layer (Java)',\r\n    },\r\n    Quiz_Relational_Databases_v1: {\r\n      'Max Score': 30,\r\n      Module: 'Databases',\r\n    },\r\n    Quiz_Document_Databases_v1: {\r\n      'Max Score': 16,\r\n      Module: 'Databases',\r\n    },\r\n    Quiz_Java_Unit_Testing_And_OOP_v1: {\r\n      'Max Score': 37,\r\n      Module: 'Logic Layer (Java)',\r\n    },\r\n    Quiz_React_js_v1: {\r\n      'Max Score': 34,\r\n      Module: 'Frontend Frameworks (React)',\r\n    },\r\n    Quiz_React_js_v2: {\r\n      'Max Score': 14,\r\n      Module: 'Frontend Frameworks (React)',\r\n    },\r\n    Quiz_Redux_v1: {\r\n      'Max Score': 27,\r\n      Module: 'Frontend Frameworks (React)',\r\n    },\r\n    Quiz_Redux_v2: {\r\n      'Max Score': 10,\r\n      Module: 'Frontend Frameworks (React)',\r\n    },\r\n    Quiz_Spring_With_Java_v2: {\r\n      'Max Score': 14,\r\n      Module: 'Logic Layer (Java)',\r\n    },\r\n    Quiz_Document_Databases_v2: {\r\n      'Max Score': 10,\r\n      Module: 'Databases',\r\n    },\r\n    Quiz_Relational_Databases_v2: {\r\n      'Max Score': 16,\r\n      Module: 'Databases',\r\n    },\r\n    Quiz_Intro_to_Java_v2: {\r\n      'Max Score': 14,\r\n      Module: 'Logic Layer (Java)',\r\n    },\r\n    Quiz_Java_Unit_Testing_And_OOP_v2: {\r\n      'Max Score': 22,\r\n      Module: 'Logic Layer (Java)',\r\n    },\r\n    Quiz_JavaScript_v2: {\r\n      'Max Score': 26,\r\n      Module: 'Development Basics & Frontend',\r\n    },\r\n    Quiz_Introductory_v2: {\r\n      'Max Score': 14,\r\n      Module: 'Development Basics & Frontend',\r\n    }\r\n  },\r\n  'Soft Skill Assessment': {\r\n    'Problem Solving': { 'Max Score': 5 },\r\n    'Self Awareness and Self Improvement': { 'Max Score': 5 },\r\n    'Project Execution': { 'Max Score': 5 },\r\n    'Professionalism': { 'Max Score': 5 },\r\n    'Communication': { 'Max Score': 5 },\r\n  },\r\n  staff: ['Eric Queen', 'Corbin Koukoutchos', 'Dan Reuther', 'Katlyn Beck', 'Greg Fisher', 'Taylor Elam', 'Tony Richards', 'Dan Lawless', 'William Newman', 'Hayes McCardell', 'Josh Tucker', 'Kyle Pike', 'James Jowers']\r\n}","export default {\r\n  attendance: [\r\n    'Excused Absence',\r\n    'Unexcused Absence',\r\n    'Excused Late Arrival',\r\n    'Unexcused Late Arrival',\r\n    'Optional Attendance'\r\n  ],\r\n  attendanceColors: ['gold', 'darkred', 'yellow', 'red', 'green'],\r\n  'Mastery Learning Portland 2019': 'mlPortland2019',\r\n  mlPortland2019: 'Mastery Learning Portland 2019',\r\n  moduleColors: [\r\n    '#a50026',\r\n    '#d73027',\r\n    '#f46d43',\r\n    '#fdae61',\r\n    '#fee090',\r\n    '#ffffbf'\r\n  ],\r\n  moduleLengthColors: ['#a50026', '#e6e6e6'],\r\n  modules: [\r\n    'Development Basics and Front End',\r\n    'Databases',\r\n    'Logic Layer (Java)',\r\n    'Front End Frameworks (React)',\r\n    'Group Project',\r\n    'Final Project'\r\n  ],\r\n  quiz: 'Quiz',\r\n  percentiles: [0.1, 0.25, 0.5, 0.75, 0.9],\r\n  projectScore: 'Project (Score)',\r\n  softSkills: 'Soft Skill Assessment',\r\n  tradChicagoApril2019: 'Traditional Cycle Chicago April 2019',\r\n  'Traditional Cycle Chicago April 2019': 'tradChicagoApril2019',\r\n  tradDenverJune2019: 'Traditional Cycle Denver June 2019',\r\n  'Traditional Cycle Denver June 2019': 'tradDenverJune2019',\r\n  tradBostonJune2019: 'Traditional Cycle Boston June 2019',\r\n  'Traditional Cycle Boston June 2019': 'tradBostonJune2019',\r\n  tradBaltimoreJuly2019: 'Traditional Cycle Baltimore July 2019',\r\n  'Traditional Cycle Baltimore July 2019': 'tradBaltimoreJuly2019'\r\n}","import Metadata from './metadata';\r\nimport CONSTS from './constants';\r\n\r\nexport const calcAllCyclesPercentiles = cycleAggr => {\r\n  const projectScores = [];\r\n  const quizScores = [];\r\n  const softSkillsScores = [];\r\n  for (const cycle in cycleAggr) {\r\n    for (const associate in cycleAggr[cycle]) {\r\n      projectScores.push(cycleAggr[cycle][associate].projectAvg);\r\n      quizScores.push(cycleAggr[cycle][associate].quizAvg);\r\n      softSkillsScores.push(cycleAggr[cycle][associate].softSkillsAvg);\r\n    }\r\n  }\r\n  // sort in ascending order\r\n  projectScores.sort((a, b) => a - b);\r\n  quizScores.sort((a, b) => a - b);\r\n  softSkillsScores.sort((a, b) => a - b);\r\n  // calc percentiles for each\r\n  const projectPercentiles = CONSTS.percentiles.map(perc =>\r\n    projectScores[Math.round(projectScores.length * perc)]\r\n  );\r\n  const quizPercentiles = CONSTS.percentiles.map(perc =>\r\n    quizScores[Math.round(quizScores.length * perc)]\r\n  );\r\n  const softSkillsPercentiles = CONSTS.percentiles.map(perc =>\r\n    softSkillsScores[Math.round(softSkillsScores.length * perc)]\r\n  );\r\n  return { projectPercentiles, projectScores, quizPercentiles, quizScores, softSkillsPercentiles, softSkillsScores };\r\n}\r\n\r\nexport const calcAssociateAggr = associates => {\r\n  const avgs = {};\r\n  associates.forEach(associate => {\r\n    avgs[associate[0].Person] = {\r\n      attemptPass: calcAttemptPassRatio(associate),\r\n      projectAvg: calcMetricAvg(associate, CONSTS.projectScore, Metadata['Project (Score)']),\r\n      quizAvg: calcMetricAvg(associate, CONSTS.quiz, Metadata.Quiz),\r\n      softSkillsAvg: calcMetricAvg(associate, CONSTS.softSkills, Metadata['Soft Skill Assessment'])\r\n    };\r\n  });\r\n  return avgs;\r\n}\r\n\r\nexport const calcCycleAggr = associates => {\r\n  let attemptAvg = 0;\r\n  let attemptMax = 0;\r\n  let attemptMin = 100;\r\n  let projectAvg = 0;\r\n  let projectMax = 0;\r\n  let projectMin = 100;\r\n  let quizAvg = 0;\r\n  let quizMax = 0;\r\n  let quizMin = 100;\r\n  let softSkillsAvg = 0;\r\n  let softSkillsMax = 0;\r\n  let softSkillsMin = 100;\r\n  let numAttempts = Object.keys(associates).length;\r\n  let numProjects = Object.keys(associates).length;\r\n  let numQuizzes = Object.keys(associates).length;\r\n  let numSoftSkills = Object.keys(associates).length;\r\n\r\n  for (const associate in associates) {\r\n    // attempts/pass avg\r\n    attemptAvg += associates[associate].attemptPass;\r\n    if (associates[associate].attemptPass === 0) {\r\n      numAttempts--;\r\n    }\r\n    // project avg\r\n    projectAvg += associates[associate].projectAvg;\r\n    if (associates[associate].projectAvg === 0) {\r\n      numProjects--;\r\n    }\r\n    // quiz avg\r\n    quizAvg += associates[associate].quizAvg;\r\n    if (associates[associate].quizAvg === 0) {\r\n      numQuizzes--;\r\n    }\r\n    // soft skills avg\r\n    softSkillsAvg += associates[associate].softSkillsAvg;\r\n    if (associates[associate].softSkillsAvg === 0) {\r\n      numSoftSkills--;\r\n    }\r\n    // attempt/pass max/min\r\n    if (associates[associate].attemptPass > attemptMax) {\r\n      attemptMax = associates[associate].attemptPass;\r\n    }\r\n    if (associates[associate].attemptPass < attemptMin && associates[associate].attemptPass !== 0) {\r\n      attemptMin = associates[associate].attemptPass;\r\n    }\r\n    //project max/min\r\n    if (associates[associate].projectAvg > projectMax) {\r\n      projectMax = associates[associate].projectAvg;\r\n    }\r\n    if (associates[associate].projectAvg < projectMin && associates[associate].projectAvg !== 0) {\r\n      projectMin = associates[associate].projectAvg;\r\n    }\r\n    // quiz max/min\r\n    if (associates[associate].quizAvg > quizMax) {\r\n      quizMax = associates[associate].quizAvg;\r\n    }\r\n    if (associates[associate].quizAvg < quizMin && associates[associate].quizAvg !== 0) {\r\n      quizMin = associates[associate].quizAvg;\r\n    }\r\n    // soft skills max/min\r\n    if (associates[associate].softSkillsAvg > softSkillsMax) {\r\n      softSkillsMax = associates[associate].softSkillsAvg;\r\n    }\r\n    if (associates[associate].softSkillsAvg < softSkillsMin && associates[associate].softSkillsAvg !== 0) {\r\n      softSkillsMin = associates[associate].softSkillsAvg;\r\n    }\r\n  };\r\n\r\n  return {\r\n    attemptAvg: numAttempts === 0 ? 0 : Math.round(attemptAvg / numAttempts),\r\n    attemptMax,\r\n    attemptMin,\r\n    projectAvg: numProjects === 0 ? 0 : Math.round(projectAvg / numProjects),\r\n    projectMax,\r\n    projectMin,\r\n    quizAvg: numQuizzes === 0 ? 0 : Math.round(quizAvg / numQuizzes),\r\n    quizMax,\r\n    quizMin,\r\n    softSkillsMax,\r\n    softSkillsMin,\r\n    softSkillsAvg: numSoftSkills === 0 ? 0 : Math.round(softSkillsAvg / numSoftSkills)\r\n  }\r\n}\r\n\r\nexport const calcDaysSince = (startDate, endDate) => {\r\n  // format as Date object\r\n  const startDateSplit = startDate.split('/');\r\n  const startDateObj = new Date('20' + startDateSplit[2], startDateSplit[0] - 1, startDateSplit[1]);\r\n\r\n  if (endDate) {\r\n    // if end date provided, format as Date object and calc time btw start and end\r\n    const endDateSplit = endDate.split('/');\r\n    const endDateObj = new Date('20' + endDateSplit[2], endDateSplit[0] - 1, endDateSplit[1]);\r\n    const cycleLength = (endDateObj - startDateObj) / 86400000;\r\n    return Math.round(cycleLength);\r\n  } else {\r\n    // if no end date, calc time btw now and start\r\n    const daysSinceStart = (Date.now() - startDateObj) / 86400000;\r\n    return Math.round(daysSinceStart);\r\n  }\r\n}\r\n\r\nexport const calcDateMarkers = metadata => {\r\n  const startDate = metadata['Associate Start'];\r\n  return Metadata.modules.map(modules => {\r\n    if (metadata[modules].start) {\r\n      return Math.round(calcDaysSince(startDate, metadata[modules].start));\r\n    }\r\n    return 0;\r\n  });\r\n}\r\n\r\nexport const calcModuleLength = metadata => {\r\n  let prevTotal = 0;\r\n  const moduleLengths = [];\r\n  const ranges = Metadata.modules.map(modules => {\r\n    if (metadata[modules].start && metadata[modules].end) {\r\n      const days = Math.round(calcDaysSince(metadata[modules].start, metadata[modules].end));\r\n      moduleLengths.push(days);\r\n      const range = days + prevTotal;\r\n      prevTotal = range;\r\n      return range;\r\n    } else if (metadata[modules].start) {\r\n      if (metadata['Cycle Exit']) {\r\n        const days = Math.round(calcDaysSince(metadata[modules].start, metadata['Cycle Exit']));\r\n        moduleLengths.push(days);\r\n        const range = days + prevTotal;\r\n        return range;\r\n      } else {\r\n        const days = Math.round(calcDaysSince(metadata[modules].start));\r\n        moduleLengths.push(days);\r\n        const range = days + prevTotal;\r\n        return range;\r\n      }\r\n    } else {\r\n      moduleLengths.push(0);\r\n      return 0;\r\n    }\r\n  });\r\n  return { moduleLengths, ranges };\r\n}\r\n\r\nexport const calcMetricAvg = (associate, metric, maxScores) => {\r\n  const metrics = associate.filter(event => event['Interaction Type'] === metric);\r\n\r\n  // return 0 if no metrics were taken\r\n  if (!metrics.length) {\r\n    return 0;\r\n  }\r\n\r\n  // adds up scores of all associate metrics and Max Scores for those metrics\r\n  const metricAvg = metrics.reduce((acc, curr) => {\r\n    return [acc[0] + Number(curr.Score), acc[1] + maxScores[curr.Interaction]['Max Score']];\r\n  }, [0, 0]);\r\n\r\n  // convert to percent and round to nearest int\r\n  return Math.round((metricAvg[0] / metricAvg[1]) * 100);\r\n}\r\n\r\nexport const calcAttemptPassRatio = metrics => {\r\n  let attempt = 0;\r\n  let pass = 0;\r\n  for (const metric of metrics) {\r\n    if (metric['Interaction Type'] === 'Exercise') {\r\n      attempt++;\r\n      if (metric.Score === 'Completed' || metric.Score === 'Pass') {\r\n        pass++;\r\n      }\r\n    } else if (metric['Interaction Type'] === 'Project (Score)') {\r\n      attempt++;\r\n      // because some peeps don't enter scores right\r\n      if (metric.Score.trim() !== '') {\r\n        if ((metric.Score / 30) >= 0.9) {\r\n          pass++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (!(Math.round((pass / attempt) * 100))) {\r\n    return 0\r\n  } else {\r\n    return Math.round((pass / attempt) * 100);\r\n  }\r\n}\r\n\r\nexport const calcPercentiles = (scores, avg) => {\r\n  const index = scores.indexOf(avg);\r\n  return Math.round((index + 1) / scores.length * 100);\r\n}\r\n\r\nconst formatCalendarDate = date => {\r\n  const dateSplit = date.split('/');\r\n  if (dateSplit[0].length === 1) {\r\n    dateSplit[0] = '0' + dateSplit[0];\r\n  }\r\n  if (dateSplit[1].length === 1) {\r\n    dateSplit[1] = '0' + dateSplit[1];\r\n  }\r\n  return ['20' + dateSplit[2], dateSplit[0], dateSplit[1]].join('-');\r\n}\r\n\r\nexport const sortAttendanceEvents = metrics => {\r\n  const attendance = {\r\n    events: []\r\n  };\r\n  metrics.forEach(event => {\r\n    // convert to correct date format\r\n    const newDateFormat = formatCalendarDate(event.Date);\r\n\r\n    // set start date\r\n    if (event['Interaction Type'] === 'Associate Start') {\r\n      attendance[event['Interaction Type']] = newDateFormat;\r\n\r\n      // set cycle exit date\r\n    } else if (RegExp('Cycle Exit').test(event['Interaction Type'])) {\r\n      attendance['Cycle Exit'] = newDateFormat;\r\n\r\n      // set other attendace evts\r\n    } else if (event['Interaction Type'] === 'Attendance Event') {\r\n      attendance.events.push({\r\n        day: newDateFormat,\r\n        value: Metadata.attendance[event.Interaction]\r\n      })\r\n    }\r\n  });\r\n\r\n  // if no cycle exit date, use current\r\n  if (!attendance['Cycle Exit']) {\r\n    const date = new Date(Date.now());\r\n    attendance['Cycle Exit'] = date.toISOString();\r\n  }\r\n  return attendance;\r\n}\r\n\r\nexport const sortMetircsByAssociate = data => {\r\n  const associates = {};\r\n\r\n  for (const item of data) {\r\n    // ignore training staff and empty Person\r\n    if (!Metadata.staff.includes(item.Person) && item.Person !== '') {\r\n\r\n      // if associate already added, push item\r\n      if (associates[item.Person]) {\r\n        associates[item.Person].push(item);\r\n      } else {\r\n        // if field doesn't exist, add one\r\n        associates[item.Person] = [item];\r\n      }\r\n    }\r\n  }\r\n  return Object.values(associates);\r\n}\r\n\r\nexport const getAssociateMetadata = data => {\r\n  const metadata = {};\r\n  for (const associate of data) {\r\n    let person = {\r\n      'Development Basics and Front End': {\r\n        start: null,\r\n        end: null\r\n      },\r\n      Databases: {\r\n        start: null,\r\n        end: null\r\n      },\r\n      'Logic Layer (Java)': {\r\n        start: null,\r\n        end: null\r\n      },\r\n      'Front End Frameworks (React)': {\r\n        start: null,\r\n        end: null\r\n      },\r\n      'Group Project': {\r\n        start: null,\r\n        end: null\r\n      },\r\n      'Final Project': {\r\n        start: null,\r\n        end: null\r\n      }\r\n    };\r\n    for (const event of associate) {\r\n      if (event['Interaction Type'] === 'Module Completed') {\r\n        person[event.Interaction].end = event.Date;\r\n      } else if (event['Interaction Type'] === 'Module Started') {\r\n        person[event.Interaction].start = event.Date;\r\n      } else if (event['Interaction Type'] === 'Associate Start') {\r\n        person[event['Interaction Type']] = event.Date;\r\n      } else if (RegExp('Cycle Exit').test(event['Interaction Type'])) {\r\n        person['Cycle Exit'] = event.Date;\r\n      }\r\n    }\r\n    metadata[associate[0].Person] = person;\r\n  }\r\n  return metadata;\r\n}\r\n\r\nexport const getCycleMetadata = data => {\r\n  const metadata = {};\r\n  data.forEach(event => {\r\n    // check for interaction type\r\n    if (Metadata.cycleMetadate.includes(event['Interaction Type']) || RegExp('Cycle Exit').test(event['Interaction Type'])) {\r\n      // because our data entry is wonky\r\n      let field;\r\n      if (event.Interaction === '') {\r\n        field = event['Interaction Type'];\r\n      } else if (RegExp('Cycle Exit').test(event['Interaction Type'])) {\r\n        field = 'Associate Leave';\r\n      } else {\r\n        field = event.Interaction\r\n      }\r\n      // if not already a field, create one\r\n      if (!metadata[field]) {\r\n        // staff change need name and date\r\n        if (field !== 'Cycle Start Date' && field !== 'Cycle End Date') {\r\n          metadata[field] = [{ name: event.Person, date: event.Date }];\r\n        } else {\r\n          metadata[field] = [event.Date];\r\n        }\r\n        // otherwise, add to list\r\n      } else {\r\n        if (field !== 'Cycle Start Date' && field !== 'Cycle End Date') {\r\n          metadata[field].push({ name: event.Person, date: event.Date });\r\n        } else {\r\n          metadata[field].push(event.Date);\r\n        }\r\n      }\r\n    }\r\n  });\r\n  return metadata;\r\n}\r\n\r\nexport const formatPercentile = percentile => {\r\n  if (percentile % 10 === 1) {\r\n    return percentile + 'st';\r\n  } else if (percentile % 10 === 2) {\r\n    return percentile + 'nd';\r\n  } else if (percentile % 10 === 3) {\r\n    return percentile + 'rd';\r\n  } else {\r\n    return percentile + 'th';\r\n  }\r\n}\r\n\r\nexport const getAssessmentTableData = (name, values, allCycleAggr) => ({\r\n  name,\r\n  projectAvg: `${values.projectAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.projectScores, values.projectAvg))}`,\r\n  quizAvg: `${values.quizAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.quizScores, values.quizAvg))}`,\r\n  softSkillsAvg: `${values.softSkillsAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.softSkillsScores, values.softSkillsAvg))}`,\r\n  attemptPass: values.attemptPass + '%'\r\n});\r\n\r\nexport const getUrlParams = urlHistory => {\r\n  const url = urlHistory.location.pathname.split('/');\r\n  // get associate name from url and format to use ' ' instead of '-'\r\n  const associate = url[url.length - 1].split('-').join(' ');\r\n  // get cycle name\r\n  const cycle = url[2];\r\n\r\n  return { url, cycle, associate };\r\n}","import { put, all, takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { FETCH_ALL_CYCLES_METRICS, FETCH_CYCLE_METRICS, POST_CYCLE_METRICS } from \"../actionTypes\";\r\nimport { fetchAllCyclesMetricsSuccess, fetchCycleMetricsSuccess, fetchCycleMetricsFail, postCycleMetricsSuccess, postCycleMetricsFail } from \"../actions\";\r\nimport { calcAllCyclesPercentiles, calcAssociateAggr, calcCycleAggr, getCycleMetadata, sortMetircsByAssociate, getAssociateMetadata } from '../../shared/dataService';\r\n\r\nexport default function* watchCycle() {\r\n  yield all([\r\n    takeEvery(FETCH_ALL_CYCLES_METRICS, fetchAllCyclesMetrics),\r\n    takeEvery(FETCH_CYCLE_METRICS, fetchCycleMetrics),\r\n    takeEvery(POST_CYCLE_METRICS, postCycleMetrics)\r\n  ])\r\n}\r\n\r\nfunction* fetchAllCyclesMetrics() {\r\n  try {\r\n    const res = yield axios.get('/api');\r\n    const { cycles, data } = res.data;\r\n    yield put(fetchAllCyclesMetricsSuccess(...formatAllCycleData(data, cycles)));\r\n  } catch (err) {\r\n    yield put(fetchCycleMetricsFail(err));\r\n  }\r\n}\r\n\r\nfunction* fetchCycleMetrics({ cycleName }) {\r\n  try {\r\n    const res = yield axios.get('/api/' + cycleName);\r\n    yield put(fetchCycleMetricsSuccess(...formatCycleData(res.data, cycleName)));\r\n  } catch (err) {\r\n    yield put(fetchCycleMetricsFail(err));\r\n  }\r\n}\r\n\r\nfunction* postCycleMetrics({ formData, cycleName, history }) {\r\n  try {\r\n    const res = yield axios.post('/api/' + cycleName, formData);\r\n    yield put(postCycleMetricsSuccess(...formatCycleData(res.data, cycleName)));\r\n    history.push('/cycle')\r\n  } catch (err) {\r\n    yield put(postCycleMetricsFail(err));\r\n  }\r\n}\r\n\r\nconst formatCycleData = (data, cycleName) => {\r\n  // sort by associate\r\n  const sortedMetrics = sortMetircsByAssociate(data);\r\n  // collect associate module metadata\r\n  const associateMetadata = getAssociateMetadata(sortedMetrics);\r\n  // calculate avg for projects, quizzes, soft skills\r\n  const associateAggr = calcAssociateAggr(sortedMetrics);\r\n  // calculate avgs for whole cycle\r\n  const cycleAggr = calcCycleAggr(associateAggr);\r\n  // combine into one object\r\n  associateAggr[cycleName] = cycleAggr;\r\n  // collect cycle metadata\r\n  const metadata = getCycleMetadata(data);\r\n\r\n  return [associateAggr, metadata, associateMetadata, sortedMetrics, cycleName];\r\n}\r\n\r\nconst formatAllCycleData = (data, cycles) => {\r\n  const associateMetadata = {};\r\n  const cycleAggr = {};\r\n  const cycleMetadata = {};\r\n  const cycleMetrics = {};\r\n  // for each cycle, collect data\r\n  for (let i = 0; i < data.length; i++) {\r\n    let [associateAggr, metadata, associateMeta, sortedMetrics, cycleName] = formatCycleData(data[i], cycles[i]);\r\n\r\n    for (let [key, value] of Object.entries(associateMeta)) {\r\n      associateMetadata[key] = value;\r\n    }\r\n    cycleAggr[cycleName] = associateAggr;\r\n    cycleMetadata[cycleName] = metadata;\r\n    cycleMetrics[cycleName] = sortedMetrics;\r\n  }\r\n  // all cycle aggregations\r\n  const allCycleAggr = calcAllCyclesPercentiles(cycleAggr);\r\n\r\n  return [cycleAggr, cycleMetadata, associateMetadata, cycleMetrics, allCycleAggr];\r\n}","import { all } from 'redux-saga/effects';\r\nimport cyclesSagas from './cyclesSagas';\r\n\r\nexport default function* rootSage() {\r\n  yield all([\r\n    cyclesSagas()\r\n  ]);\r\n}\r\n\r\n","import React from 'react';\r\nimport { Divider, Paper, Typography } from '@material-ui/core';\r\nimport styles from './AssociateInfo.module.css';\r\nimport { calcDaysSince } from '../../shared/dataService';\r\nimport CONSTS from '../../shared/constants';\r\n\r\nconst AssociateInfo = (props) => {\r\n  const { Date: startDate, Person } = props.associate.find(item => item['Interaction Type'] === 'Associate Start');\r\n  const exitRegex = RegExp('Cycle Exit');\r\n  const endDate = props.associate.find(item => exitRegex.test(item['Interaction Type']));\r\n\r\n  return (\r\n    !props.bodyOnly ? <Paper className={styles.Paper}>\r\n      <div className={styles.Header}>\r\n        <Typography variant='h3'>\r\n          {Person}\r\n        </Typography>\r\n        <Typography variant='h6' color='textSecondary'>\r\n          {CONSTS[props.cycle]}\r\n        </Typography>\r\n      </div>\r\n\r\n      <div className={styles.Divider}>\r\n        <Divider />\r\n      </div>\r\n\r\n      <div className={styles.Body}>\r\n        <div>\r\n          <Typography variant='body2'>\r\n            <strong>Start Date:</strong> {startDate}\r\n          </Typography>\r\n          {endDate ?\r\n            <>\r\n              <Typography variant='body2'>\r\n                <strong>End Date: </strong>{endDate.Date}\r\n              </Typography>\r\n            </>\r\n            : null}\r\n        </div>\r\n\r\n        <div>\r\n          <Typography variant='body2'>\r\n            <strong>Days in Cycle:</strong> {endDate ? calcDaysSince(startDate, endDate.Date) : calcDaysSince(startDate)}\r\n          </Typography>\r\n          {endDate ?\r\n            <Typography variant=\"button\" display=\"block\">\r\n              {endDate['Interaction Type']}\r\n            </Typography> : null}\r\n        </div>\r\n      </div>\r\n    </Paper >\r\n      : <div className={styles.BodyOnly}>\r\n        <div>\r\n          <Typography variant='body2'>\r\n            <strong>Start Date:</strong> {startDate}\r\n          </Typography>\r\n          {endDate ?\r\n            <>\r\n              <Typography variant='body2'>\r\n                <strong>End Date: </strong>{endDate.Date}\r\n              </Typography>\r\n            </>\r\n            : null}\r\n        </div>\r\n\r\n        <div>\r\n          <Typography variant='body2'>\r\n            <strong>Days in Cycle:</strong> {endDate ? calcDaysSince(startDate, endDate.Date) : calcDaysSince(startDate)}\r\n          </Typography>\r\n          {endDate ?\r\n            <Typography variant=\"button\" display=\"block\">\r\n              {endDate['Interaction Type']}\r\n            </Typography> : null}\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default AssociateInfo;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumbs, Paper, Typography } from '@material-ui/core';\r\nimport CONSTS from '../../shared/constants';\r\nimport styles from './Breadcrumbs.module.css';\r\n\r\nconst breadcrumbs = props => {\r\n  const { path } = props;\r\n\r\n  return (\r\n    <Paper className={path.length === 5 ? styles.BreadcrumbsLong : styles.BreadcrumbsShort}>\r\n      {path.length === 5 ?\r\n        <Breadcrumbs separator='›' aria-label='Breadcrumb'>\r\n          <Link to='/cycle' className={styles.Link}>\r\n            Cycles\r\n          </Link>\r\n          <Link to={'/cycle/' + path[2]} className={styles.Link}>\r\n            {CONSTS[path[2]]}\r\n          </Link>\r\n          <Typography color='textPrimary'>{path[4]}</Typography>\r\n        </Breadcrumbs>\r\n        : <Breadcrumbs separator='›' aria-label='Breadcrumb'>\r\n          <Link to='/cycle' className={styles.Link}>\r\n            Cycles\r\n            </Link>\r\n          <Typography color='textPrimary'>{CONSTS[path[2]]}</Typography>\r\n        </Breadcrumbs>}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default breadcrumbs;","import React from 'react';\r\nimport CONSTS from '../../shared/constants';\r\nimport styles from './Legend.module.css';\r\n\r\nconst Legend = props => {\r\n  const { items, colors } = props;\r\n\r\n  return (\r\n    <div className={styles.Legend}>\r\n      {items.map((item, index) => (\r\n        <div key={index} className={styles.Legend}>\r\n          <div style={{ background: CONSTS[colors][index], height: '15px', width: '15px', margin: '0 4px' }}></div>\r\n          <p className={styles.Label}>{item.split(' ').splice(0, 2).join(' ')}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Legend;","import React from 'react';\r\nimport { Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\n\r\nconst BasicTable = props => {\r\n  const { headers, rows } = props;\r\n\r\n  return (\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          {headers.map((header, index) => <TableCell key={index} align=\"left\">{header}</TableCell>)}\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        <TableRow>\r\n          {rows.map((row, index) => <TableCell key={index} align=\"left\">{row}</TableCell>)}\r\n        </TableRow>\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default BasicTable;","import React from 'react';\r\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Typography } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst ExpansionPanels = props => {\r\n  const { children, panelTitle } = props;\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1a-content\"\r\n        id=\"panel1a-header\"\r\n      >\r\n        <Typography>{panelTitle}</Typography>\r\n      </ExpansionPanelSummary>\r\n\r\n      <ExpansionPanelDetails>\r\n        {children}\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n\r\nexport default ExpansionPanels;","import React from 'react';\r\nimport { ResponsiveCalendar } from '@nivo/calendar';\r\nimport { Divider, Paper, Typography } from '@material-ui/core';\r\nimport Legend from '../legend/Legend';\r\nimport BasicTable from '../../components/basic-table/BasicTable';\r\nimport ExpansionPanel from '../../components/expansion-panel/ExpansionPanel';\r\nimport { sortAttendanceEvents } from '../../shared/dataService';\r\nimport CONSTS from '../../shared/constants';\r\nimport styles from './Calendar.module.css';\r\n\r\nconst Calendar = props => {\r\n  const attendance = sortAttendanceEvents(props.metrics);\r\n  const countOfEvents = {\r\n    'Excused Absence': 0,\r\n    'Unexcused Absence': 0,\r\n    'Excused Late Arrival': 0,\r\n    'Unexcused Late Arrival': 0,\r\n    'Optional Attendance': 0\r\n  };\r\n  attendance.events.forEach(event => countOfEvents[CONSTS.attendance[event.value]] += 1);\r\n\r\n  return (\r\n    <Paper className={styles.Paper}>\r\n      <div className={styles.Header}>\r\n        <Typography variant='h4'>\r\n          Attendance\r\n        </Typography>\r\n        {true ? <Typography variant='subtitle1' color='textSecondary'>\r\n          Absences & Late Arrivals\r\n        </Typography> : null}\r\n      </div>\r\n\r\n      <div className={styles.Divider}>\r\n        <Divider />\r\n      </div>\r\n\r\n      <div className={styles.Graph}>\r\n        <ResponsiveCalendar\r\n          data={attendance.events}\r\n          from={attendance['Associate Start']}\r\n          to={attendance['Cycle Exit']}\r\n          emptyColor=\"#eeeeee\"\r\n          colors={CONSTS.attendanceColors}\r\n          margin={{ top: 40, right: 40, bottom: 40, left: 40 }}\r\n          yearSpacing={40}\r\n          monthBorderColor=\"#0c0314\"\r\n          dayBorderWidth={2}\r\n          dayBorderColor=\"#ffffff\"\r\n          minValue={0}\r\n          maxValue={4}\r\n          tooltip={({ day, value }) => (\r\n            <strong>\r\n              {day}: {CONSTS.attendance[value]}\r\n            </strong>\r\n          )}\r\n        />\r\n      </div>\r\n      <Legend items={CONSTS.attendance} colors={'attendanceColors'} />\r\n\r\n      <ExpansionPanel panelTitle='Show Details'>\r\n        <BasicTable headers={CONSTS.attendance} rows={Object.values(countOfEvents)} />\r\n      </ExpansionPanel>\r\n    </Paper >\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import React from 'react';\r\nimport { Divider, Paper, Typography } from '@material-ui/core';\r\nimport { ResponsiveRadar } from '@nivo/radar'\r\nimport styles from './RadarGraph.module.css';\r\n\r\nconst RadarGraph = props => {\r\n  const { data, index, keys, tall, title, subtitle } = props;\r\n\r\n  return (\r\n    <Paper className={styles.Paper}>\r\n      <div className={styles.Header}>\r\n        <Typography variant='h4'>\r\n          {title}\r\n        </Typography>\r\n        {subtitle ? <Typography variant='subtitle1' color='textSecondary'>\r\n          {subtitle}\r\n        </Typography> : null}\r\n      </div>\r\n\r\n      <div className={styles.Divider}>\r\n        <Divider />\r\n      </div>\r\n\r\n      <div className={tall ? styles.TallGraph : styles.Graph}>\r\n        <ResponsiveRadar\r\n          data={data}\r\n          keys={keys}\r\n          indexBy={index}\r\n          maxValue={100}\r\n          margin={{ top: 35, right: 20, bottom: 35, left: 20 }}\r\n          curve='catmullRomClosed'\r\n          borderWidth={2}\r\n          borderColor={{ from: 'color' }}\r\n          gridLevels={3}\r\n          gridShape='circular'\r\n          gridLabelOffset={20}\r\n          enableDots={true}\r\n          dotSize={10}\r\n          dotColor={{ theme: 'background' }}\r\n          dotBorderWidth={3}\r\n          dotBorderColor={{ from: 'color' }}\r\n          enableDotLabel={false}\r\n          dotLabel='value'\r\n          dotLabelYOffset={-12}\r\n          colors={{ scheme: 'category10' }}\r\n          fillOpacity={0.1}\r\n          blendMode='multiply'\r\n          legends={[\r\n            {\r\n              anchor: 'top-left',\r\n              direction: 'column',\r\n              translateX: 120,\r\n              translateY: 0,\r\n              itemWidth: 60,\r\n              itemHeight: 20,\r\n              itemTextColor: '#555',\r\n              symbolSize: 12,\r\n              symbolShape: 'circle',\r\n              effects: [\r\n                {\r\n                  on: 'hover',\r\n                  style: {\r\n                    itemTextColor: '#000'\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          ]}\r\n        />\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default RadarGraph;","import React from 'react';\r\nimport { Grid, Switch, Typography } from '@material-ui/core';\r\nimport styles from './Toggle.module.css';\r\n\r\nconst Toggle = props => {\r\n  const { checked, onChange, leftLabel, rightLabel } = props;\r\n\r\n  return (\r\n    <div className={styles.Switch}>\r\n      <Typography component=\"div\">\r\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n          <Grid item>{leftLabel}</Grid>\r\n          <Grid item>\r\n            <Switch\r\n              color='primary'\r\n              checked={checked}\r\n              onChange={onChange}\r\n              value=\"checkedC\"\r\n            />\r\n          </Grid>\r\n          <Grid item>{rightLabel}</Grid>\r\n        </Grid>\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Toggle;","import React, { Component } from 'react';\r\nimport { Divider, Paper, Typography } from '@material-ui/core';\r\nimport { ResponsiveBullet } from '@nivo/bullet'\r\nimport Legend from '../legend/Legend';\r\nimport Toggle from '../toggle/Toggle';\r\nimport { calcDateMarkers, calcDaysSince, calcModuleLength } from '../../shared/dataService';\r\nimport Metadata from '../../shared/metadata';\r\nimport styles from './BulletGraph.module.css';\r\n\r\nclass BulletGraph extends Component {\r\n  state = {\r\n    showModules: false\r\n  };\r\n\r\n  createMLCycleGraphs(showModules, metadata) {\r\n    const modules = calcModuleLength(metadata);\r\n\r\n    if (showModules) {\r\n      return (\r\n        <div className={styles.Graph}>\r\n          <ResponsiveBullet\r\n            data={[\r\n              {\r\n                id: 'Basics',\r\n                ranges: [42, 98],\r\n                measures: [modules.moduleLengths[0]],\r\n                markers: []\r\n              },\r\n              {\r\n                id: 'Databases',\r\n                ranges: [28, 98],\r\n                measures: [modules.moduleLengths[1]],\r\n                markers: []\r\n              },\r\n              {\r\n                id: 'Java',\r\n                ranges: [70, 98],\r\n                measures: [modules.moduleLengths[2]],\r\n                markers: []\r\n              },\r\n              {\r\n                id: 'React',\r\n                ranges: [56, 98],\r\n                measures: [modules.moduleLengths[3]],\r\n                markers: []\r\n              }\r\n            ]}\r\n            margin={{ top: 50, right: 90, bottom: 50, left: 90 }}\r\n            spacing={46}\r\n            titleAlign='start'\r\n            titleOffsetX={-70}\r\n            measureSize={0.4}\r\n            rangeColors={['#a50026', '#ffffff']}\r\n            measureColors='#e6e6e6'\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className={styles.Graph2}>\r\n          <ResponsiveBullet\r\n            data={[\r\n              {\r\n                id: 'Associate',\r\n                ranges: modules.ranges,\r\n                measures: [],\r\n                markers: [...calcDateMarkers(metadata), 238]\r\n              },\r\n              {\r\n                id: 'Max Time',\r\n                ranges: [42, 70, 140, 196, 224, 238],\r\n                measures: [],\r\n                markers: []\r\n              }\r\n            ]}\r\n            margin={{ top: 50, right: 90, bottom: 50, left: 90 }}\r\n            spacing={46}\r\n            titleAlign='start'\r\n            titleOffsetX={-70}\r\n            measureSize={0.4}\r\n            rangeColors='red_yellow_blue'\r\n            measureColors='#e6e6e6'\r\n            markerColors='black'\r\n            markerSize={1}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  createTradCycleGraph(metadata) {\r\n    let daysSinceStart = 0;\r\n    if (metadata['Cycle Exit']) {\r\n      daysSinceStart = Math.round(calcDaysSince(metadata['Associate Start'], metadata['Cycle Exit']));\r\n    } else {\r\n      daysSinceStart = Math.round(calcDaysSince(metadata['Associate Start']));\r\n    }\r\n\r\n    return (\r\n      <div className={styles.Graph3}>\r\n        <ResponsiveBullet\r\n          data={[\r\n            {\r\n              id: 'Associate',\r\n              ranges: [21, 28, 70, 105, 126, 140],\r\n              measures: [daysSinceStart],\r\n              markers: []\r\n            }\r\n          ]}\r\n          margin={{ top: 50, right: 90, bottom: 50, left: 90 }}\r\n          spacing={46}\r\n          titleAlign='start'\r\n          titleOffsetX={-70}\r\n          measureSize={0.4}\r\n          rangeColors='red_yellow_blue'\r\n          measureColors='#e6e6e6'\r\n          markerColors='black'\r\n          markerSize={1}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toggleHandler = () => {\r\n    this.setState(prevState => ({ showModules: !prevState.showModules }));\r\n  }\r\n\r\n  render() {\r\n    const { metadata, title, subtitle, traditional } = this.props;\r\n    const { showModules } = this.state;\r\n\r\n    return (\r\n      <Paper className={styles.Paper}>\r\n        <div className={styles.Header}>\r\n          <Typography variant='h4'>\r\n            {title}\r\n          </Typography>\r\n          {subtitle ? <Typography variant='subtitle1' color='textSecondary'>\r\n            {subtitle}\r\n          </Typography> : null}\r\n        </div>\r\n\r\n        <div className={styles.Divider}>\r\n          <Divider />\r\n        </div>\r\n\r\n        {!traditional ? <Toggle\r\n          checked={showModules}\r\n          onChange={this.toggleHandler}\r\n          leftLabel='Overview'\r\n          rightLabel='Per Module'\r\n        /> : null}\r\n\r\n        {traditional ? this.createTradCycleGraph(metadata) : this.createMLCycleGraphs(showModules, metadata)}\r\n\r\n        {showModules ? <Legend items={['Max Time', 'Associate']} colors={'moduleLengthColors'} /> : <Legend items={Metadata.modules} colors={'moduleColors'} />}\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BulletGraph;","import React from 'react';\r\nimport styles from './Spinner.module.css';\r\n\r\nconst Spinner = props => {\r\n    return <div className={styles.loader}>Loading...</div>;\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCycleMetrics } from '../../redux/actions';\r\nimport MaterialTable from 'material-table';\r\nimport styles from './Associate.module.css';\r\nimport AssociateInfo from '../../components/associate-info/AssociateInfo';\r\nimport Breadcrumbs from '../../components/breadcrumbs/Breadcrumbs';\r\nimport Calendar from '../../components/calendar/Calendar';\r\nimport RadarGraph from '../../components/radar-graph/RadarGraph';\r\nimport { getUrlParams } from '../../shared/dataService';\r\nimport BulletGraph from '../../components/bullet-graph/BulletGraph';\r\nimport Spinner from '../../components/spinner/Spinner';\r\n\r\nclass Associate extends Component {\r\n  componentDidMount() {\r\n    const { cycle } = getUrlParams(this.props.history);\r\n    // only fetches if not already in memory\r\n    if (!Object.keys(this.props.cycleAggr).includes(cycle)) {\r\n      this.props.fetchCycle(cycle);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { associateMetadata, cycleAggr, cycleMetrics, history } = this.props;\r\n    const { url, cycle, associate } = getUrlParams(history);\r\n    const tradCycle = RegExp('trad').test(cycle);\r\n\r\n    return (\r\n      !this.props.loading && cycleMetrics[cycle] && cycleAggr[cycle] && associateMetadata[associate] ?\r\n        <div className={styles.Wrapper}>\r\n          <Breadcrumbs path={url} />\r\n\r\n          <AssociateInfo cycle={cycle} associate={cycleMetrics[cycle].find(row => row[0].Person === associate)} />\r\n\r\n          <RadarGraph\r\n            title='Running Avg of Assesments'\r\n            subtitle='Compared to Cycle Averages'\r\n            keys={[associate, 'Cycle Average']}\r\n            index='avg'\r\n            data={[\r\n              {\r\n                avg: 'Projects',\r\n                [associate]: cycleAggr[cycle][associate].projectAvg,\r\n                'Cycle Average': cycleAggr[cycle][cycle].projectAvg\r\n              },\r\n              {\r\n                avg: 'Quizzes',\r\n                [associate]: cycleAggr[cycle][associate].quizAvg,\r\n                'Cycle Average': cycleAggr[cycle][cycle].quizAvg,\r\n\r\n              },\r\n              {\r\n                avg: 'Soft Skills',\r\n                [associate]: cycleAggr[cycle][associate].softSkillsAvg,\r\n                'Cycle Average': cycleAggr[cycle][cycle].softSkillsAvg,\r\n              },\r\n              {\r\n                avg: 'Attempt/Pass',\r\n                [associate]: cycleAggr[cycle][associate].attemptPass,\r\n                'Cycle Average': cycleAggr[cycle][cycle].attemptAvg\r\n              }\r\n            ]}\r\n          />\r\n\r\n          <BulletGraph\r\n            title='Cycle Progress'\r\n            subtitle={tradCycle ? null : 'Overall & Per Module'}\r\n            metadata={associateMetadata[associate]}\r\n            traditional={tradCycle}\r\n          />\r\n\r\n          <Calendar metrics={cycleMetrics[cycle].find(row => row[0].Person === associate)} />\r\n\r\n          <div className={styles.Paper}>\r\n            <MaterialTable\r\n              title=\"Associate Metrics\"\r\n              columns={[\r\n                { title: 'Interaction', field: 'Interaction' },\r\n                { title: 'Interaction Type', field: 'Interaction Type' },\r\n                { title: 'Score', field: 'Score' },\r\n                { title: 'Date', field: 'Date', type: 'date' }\r\n              ]}\r\n              data={cycleMetrics[cycle].find(row => row[0].Person === associate)}\r\n              options={{\r\n                sorting: true,\r\n                pageSize: 10,\r\n                pageSizeOptions: [10, 20, 50]\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        : <Spinner />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  associateMetadata: state.cycles.associateMetadata,\r\n  cycleAggr: state.cycles.cycleAggr,\r\n  cycleMetrics: state.cycles.cycleMetrics,\r\n  loading: state.cycles.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCycle: (cycleName) => dispatch(fetchCycleMetrics(cycleName))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Associate);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchAllCyclesMetrics } from '../../redux/actions';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport Toggle from '../../components/toggle/Toggle';\r\nimport Spinner from '../../components/spinner/Spinner';\r\nimport AssociateInfo from '../../components/associate-info/AssociateInfo';\r\nimport { getAssessmentTableData } from '../../shared/dataService';\r\nimport styles from './Associates.module.css';\r\n\r\nclass Associates extends Component {\r\n  state = {\r\n    showInactive: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!Object.keys(this.props.allCycleAggr).length) {\r\n      this.props.fetchAllCycles();\r\n    }\r\n  }\r\n\r\n  createTableData(cycleAggr, allCycleAggr, cycleMetadata, showInactive) {\r\n    const associateScores = [];\r\n    for (const cycle in cycleAggr) {\r\n      let leftCycle = [];\r\n      if (cycleMetadata[cycle]['Associate Leave']) {\r\n        leftCycle = cycleMetadata[cycle]['Associate Leave'].map(associate => associate.name);\r\n      }\r\n      Object.entries(cycleAggr[cycle]).forEach(([name, values]) => {\r\n        if (showInactive && leftCycle.includes(name)) {\r\n          associateScores.push(getAssessmentTableData(name, values, allCycleAggr));\r\n        }\r\n        if (!showInactive && !leftCycle.includes(name)) {\r\n          associateScores.push(getAssessmentTableData(name, values, allCycleAggr));\r\n        }\r\n      });\r\n    }\r\n    return associateScores;\r\n  }\r\n\r\n  toggleHandler = () => {\r\n    this.setState(prevState => ({ showInactive: !prevState.showInactive }));\r\n  }\r\n\r\n\r\n  render() {\r\n    const { allCycleAggr, cycleAggr, cycleMetadata, cycleMetrics, loading } = this.props;\r\n    const { showInactive } = this.state;\r\n    let table = <Spinner />;\r\n\r\n    if (!loading && Object.keys(cycleAggr).length && Object.keys(cycleMetrics).length && Object.keys(allCycleAggr).length && Object.keys(cycleMetadata).length) {\r\n      table = (\r\n        <div className={styles.Paper}>\r\n          <MaterialTable\r\n            title=\"Associate Assessment Average & Percentile\"\r\n            columns={[\r\n              { title: 'Associate', field: 'name' },\r\n              { title: 'Projects', field: 'projectAvg' },\r\n              { title: 'Quizzes', field: 'quizAvg' },\r\n              { title: 'Soft Skills', field: 'softSkillsAvg' },\r\n              { title: 'Attempt/Pass', field: 'attemptPass' }\r\n            ]}\r\n            data={this.createTableData(cycleAggr, allCycleAggr, cycleMetadata, showInactive)}\r\n            options={{\r\n              sorting: true,\r\n              pageSize: 10,\r\n              pageSizeOptions: [10, 20, 50]\r\n            }}\r\n            detailPanel={[\r\n              {\r\n                tooltip: 'Show Name',\r\n                render: rowData => {\r\n                  let cycleName = 'mlPortland2019';\r\n                  for (const cycle in cycleAggr) {\r\n                    if (cycleAggr[cycle][rowData.name]) {\r\n                      cycleName = cycle;\r\n                    }\r\n                  }\r\n                  return <AssociateInfo bodyOnly cycle={cycleName} associate={cycleMetrics[cycleName].find(row => row[0].Person === rowData.name)} />;\r\n                },\r\n              }\r\n            ]}\r\n            components={{\r\n              Toolbar: props => (\r\n                <>\r\n                  <MTableToolbar {...props} />\r\n                  <Toggle\r\n                    checked={showInactive}\r\n                    onChange={this.toggleHandler}\r\n                    leftLabel='Active'\r\n                    rightLabel='Inactive'\r\n                  />\r\n                </>\r\n              )\r\n            }}\r\n            actions={[\r\n              {\r\n                icon: 'search',\r\n                tooltip: 'View Associate',\r\n                onClick: (event, rowData) => {\r\n                  let cycleName = 'mlPortland2019';\r\n                  for (const cycle in cycleAggr) {\r\n                    if (cycleAggr[cycle][rowData.name]) {\r\n                      cycleName = cycle;\r\n                    }\r\n                  }\r\n                  this.props.history.push(`/cycle/${cycleName}/associate/${rowData.name.split(' ').join('-')}`)\r\n                }\r\n              }\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return table;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  allCycleAggr: state.cycles.allCycleAggr,\r\n  cycleAggr: state.cycles.cycleAggr,\r\n  cycleMetadata: state.cycles.cycleMetadata,\r\n  cycleMetrics: state.cycles.cycleMetrics,\r\n  loading: state.cycles.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchAllCycles: () => dispatch(fetchAllCyclesMetrics())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Associates);","import React from 'react';\r\nimport { Divider, Paper, Typography } from '@material-ui/core';\r\nimport styles from './CycleInfo.module.css';\r\n\r\nconst CycleInfo = props => {\r\n  const { bodyOnly, cycleName, metadata } = props;\r\n\r\n  const nameSplit = cycleName.split(' ');\r\n  const cycleType = nameSplit.splice(0, 2).join(' ');\r\n  const formattedName = nameSplit.splice(-3, 3).join(' ');\r\n  const trainers = metadata['Trainer Start'].reduce((acc, curr) => (acc + curr.name + ' | '), '').slice(0, -2);\r\n  const TAs = metadata['TA Start'].reduce((acc, curr) => (acc + curr.name + ' | '), '').slice(0, -2);\r\n  const startDates = metadata['Cycle Start Date'].join(' | ');\r\n  const endDate = metadata['Cycle End Date'];\r\n  const currentNumAssociates = metadata['Associate Leave'] ?\r\n    metadata['Associate Start'].length - metadata['Associate Leave'].length\r\n    : metadata['Associate Start'].length;\r\n\r\n  return (\r\n    !bodyOnly ? <Paper className={styles.Paper}>\r\n      <div className={styles.Header}>\r\n        <Typography variant='h3'>\r\n          {formattedName}\r\n        </Typography>\r\n\r\n        <Typography variant='h6' color='textSecondary'>\r\n          {cycleType}\r\n        </Typography>\r\n      </div>\r\n\r\n      <div className={styles.Divider}>\r\n        <Divider />\r\n      </div>\r\n\r\n      <div className={styles.Body}>\r\n        <div>\r\n          <Typography variant='body2'>\r\n            <strong>Trainer(s): </strong>{trainers}\r\n          </Typography>\r\n\r\n          <Typography variant='body2'>\r\n            <strong>TA(s): </strong>{TAs}\r\n          </Typography>\r\n\r\n          <Typography variant='body2'>\r\n            <strong>Total # Associates: </strong>{metadata['Associate Start'].length}\r\n          </Typography>\r\n        </div>\r\n\r\n        <div>\r\n          <Typography variant='body2'>\r\n            <strong>Start Date(s): </strong>{startDates}\r\n          </Typography>\r\n\r\n          <Typography variant='body2'>\r\n            <strong>End Date: </strong>{endDate}\r\n          </Typography>\r\n\r\n          <Typography variant='body2'>\r\n            <strong>Current # Associates: </strong>{currentNumAssociates}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n      : <div className={styles.BodyOnly}>\r\n        <div>\r\n          <Typography variant='body2'>\r\n            <strong>Trainer(s): </strong>{trainers}\r\n          </Typography>\r\n\r\n          <Typography variant='body2'>\r\n            <strong>TA(s): </strong>{TAs}\r\n          </Typography>\r\n\r\n          <Typography variant='body2'>\r\n            <strong>Total # Associates: </strong>{metadata['Associate Start'].length}\r\n          </Typography>\r\n        </div>\r\n\r\n        <div>\r\n          <Typography variant='body2'>\r\n            <strong>Start Date(s): </strong>{startDates}\r\n          </Typography>\r\n\r\n          <Typography variant='body2'>\r\n            <strong>End Date: </strong>{endDate}\r\n          </Typography>\r\n\r\n          <Typography variant='body2'>\r\n            <strong>Current # Associates: </strong>{currentNumAssociates}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default CycleInfo;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCycleMetrics } from '../../redux/actions';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport Breadcrumbs from '../../components/breadcrumbs/Breadcrumbs';\r\nimport CycleInfo from '../../components/cycle-info/CycleInfo';\r\nimport RadarGraph from '../../components/radar-graph/RadarGraph';\r\nimport Spinner from '../../components/spinner/Spinner';\r\nimport Toggle from '../../components/toggle/Toggle';\r\nimport AssociateInfo from '../../components/associate-info/AssociateInfo';\r\nimport { getUrlParams, getAssessmentTableData } from '../../shared/dataService';\r\nimport CONSTS from '../../shared/constants';\r\nimport styles from './Cycle.module.css';\r\n\r\nclass Cycle extends Component {\r\n  state = {\r\n    showInactive: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { cycle } = getUrlParams(this.props.history);\r\n    // only fetches if not already in memory\r\n    if (!Object.keys(this.props.cycleAggr).includes(cycle)) {\r\n      this.props.fetchCycle(cycle);\r\n    }\r\n  }\r\n\r\n  toggleHandler = () => {\r\n    this.setState(prevState => ({ showInactive: !prevState.showInactive }));\r\n  }\r\n\r\n  createTableData = (cycleAggr, allCycleAggr, cycleMetadata, cycle, showInactive) => {\r\n    const tableData = [];\r\n    let leftCycle = [];\r\n    if (cycleMetadata[cycle]['Associate Leave']) {\r\n      leftCycle = cycleMetadata[cycle]['Associate Leave'].map(associate => associate.name);\r\n    }\r\n    Object.entries(cycleAggr[cycle]).forEach(([name, values]) => {\r\n      if (showInactive && leftCycle.includes(name)) {\r\n        tableData.push(getAssessmentTableData(name, values, allCycleAggr));\r\n      }\r\n      if (!showInactive && !leftCycle.includes(name)) {\r\n        tableData.push(getAssessmentTableData(name, values, allCycleAggr));\r\n      }\r\n    });\r\n    return tableData;\r\n  }\r\n\r\n  handleChange = name => evt => {\r\n    this.setState({ [name]: evt.target.checked });\r\n  };\r\n\r\n  render() {\r\n    const { allCycleAggr, cycleAggr, cycleMetadata, cycleMetrics, history } = this.props;\r\n    const { showInactive } = this.state;\r\n    const { url, cycle } = getUrlParams(history);\r\n\r\n    return (\r\n      !this.props.loading && cycleAggr[cycle] && cycleMetadata[cycle] && cycleMetrics[cycle] && Object.keys(allCycleAggr).length ?\r\n        <div className={styles.Wrapper}>\r\n          <Breadcrumbs path={url} />\r\n\r\n          <CycleInfo cycleName={CONSTS[cycle]} metadata={cycleMetadata[cycle]} />\r\n\r\n          <RadarGraph\r\n            title='Running Averages of Assessments'\r\n            subtitle='Including the Max and Min Associate Running Average'\r\n            index='avg'\r\n            data={[\r\n              {\r\n                avg: 'Projects',\r\n                'Max': cycleAggr[cycle][cycle].projectMax,\r\n                'Min': cycleAggr[cycle][cycle].projectMin,\r\n                'Average': cycleAggr[cycle][cycle].projectAvg\r\n              },\r\n              {\r\n                avg: 'Quizzes',\r\n                'Max': cycleAggr[cycle][cycle].quizMax,\r\n                'Min': cycleAggr[cycle][cycle].quizMin,\r\n                'Average': cycleAggr[cycle][cycle].quizAvg\r\n              },\r\n              {\r\n                avg: 'Soft Skills',\r\n                'Max': cycleAggr[cycle][cycle].softSkillsMax,\r\n                'Min': cycleAggr[cycle][cycle].softSkillsMin,\r\n                'Average': cycleAggr[cycle][cycle].softSkillsAvg\r\n              },\r\n              {\r\n                avg: 'Attempt/Pass',\r\n                'Max': cycleAggr[cycle][cycle].attemptMax,\r\n                'Min': cycleAggr[cycle][cycle].attemptMin,\r\n                'Average': cycleAggr[cycle][cycle].attemptAvg\r\n              }\r\n            ]}\r\n            keys={['Average', 'Max', 'Min']}\r\n          />\r\n\r\n          <div className={styles.Paper}>\r\n            <MaterialTable\r\n              title=\"Associate Assessment Average & Percentile\"\r\n              columns={[\r\n                { title: 'Associate', field: 'name' },\r\n                { title: 'Projects', field: 'projectAvg' },\r\n                { title: 'Quizzes', field: 'quizAvg' },\r\n                { title: 'Soft Skills', field: 'softSkillsAvg' },\r\n                { title: 'Attempt/Pass', field: 'attemptPass' }\r\n              ]}\r\n              data={this.createTableData(cycleAggr, allCycleAggr, cycleMetadata, cycle, showInactive)}\r\n              options={{\r\n                sorting: true,\r\n                pageSize: 10,\r\n                pageSizeOptions: [10, 20, 50]\r\n              }}\r\n              components={{\r\n                Toolbar: props => (\r\n                  <>\r\n                    <MTableToolbar {...props} />\r\n                    <Toggle\r\n                      checked={showInactive}\r\n                      onChange={this.toggleHandler}\r\n                      leftLabel='Active'\r\n                      rightLabel='Inactive'\r\n                    />\r\n                  </>\r\n                )\r\n              }}\r\n              detailPanel={[\r\n                {\r\n                  tooltip: 'Show Details',\r\n                  render: rowData => {\r\n                    return <AssociateInfo bodyOnly cycle={cycle} associate={cycleMetrics[cycle].find(row => row[0].Person === rowData.name)} />;\r\n                  },\r\n                }\r\n              ]}\r\n              actions={[\r\n                {\r\n                  icon: 'search',\r\n                  tooltip: 'View Associate',\r\n                  onClick: (event, rowData) => {\r\n                    if (rowData.name !== cycle) {\r\n                      this.props.history.push(`/cycle/${cycle}/associate/${rowData.name.split(' ').join('-')}`)\r\n                    }\r\n                  }\r\n                }\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n        : <Spinner />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  allCycleAggr: state.cycles.allCycleAggr,\r\n  cycleAggr: state.cycles.cycleAggr,\r\n  cycleMetadata: state.cycles.cycleMetadata,\r\n  cycleMetrics: state.cycles.cycleMetrics,\r\n  loading: state.cycles.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCycle: (cycleName) => dispatch(fetchCycleMetrics(cycleName))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cycle);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport styles from './Cycles.module.css';\r\nimport { fetchAllCyclesMetrics } from '../../redux/actions';\r\nimport { calcPercentiles, formatPercentile } from '../../shared/dataService';\r\nimport CONSTS from '../../shared/constants';\r\nimport CycleInfo from '../../components/cycle-info/CycleInfo';\r\nimport Spinner from '../../components/spinner/Spinner';\r\n\r\nclass Cycles extends Component {\r\n  componentDidMount() {\r\n    if (!Object.keys(this.props.allCycleAggr).length) {\r\n      this.props.fetchAllCycles();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { allCycleAggr, cycleAggr, cycleMetadata, loading } = this.props;\r\n\r\n    return (\r\n      !loading ? <div className={styles.Paper}>\r\n        <MaterialTable\r\n          title=\"Cycle Assessment Average & Percentile\"\r\n          columns={[\r\n            { title: 'Cycle', field: 'name' },\r\n            { title: 'Projects', field: 'projectAvg' },\r\n            { title: 'Quizzes', field: 'quizAvg' },\r\n            { title: 'Soft Skills', field: 'softSkillsAvg' }\r\n          ]}\r\n          data={\r\n            Object.entries(cycleAggr).map(([name, values]) => ({\r\n              name: CONSTS[name],\r\n              projectAvg: `${values[name].projectAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.projectScores, values[name].projectAvg))}`,\r\n              quizAvg: `${values[name].quizAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.quizScores, values[name].quizAvg))}`,\r\n              softSkillsAvg: `${values[name].softSkillsAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.softSkillsScores, values[name].softSkillsAvg))}`\r\n            }))\r\n          }\r\n          options={{\r\n            sorting: true,\r\n            pageSize: 10,\r\n            pageSizeOptions: [10, 20, 50]\r\n          }}\r\n          detailPanel={[\r\n            {\r\n              tooltip: 'Show Details',\r\n              render: rowData => {\r\n                return <CycleInfo bodyOnly cycleName={CONSTS[rowData.name]} metadata={cycleMetadata[CONSTS[rowData.name]]} />;\r\n              },\r\n            }\r\n          ]}\r\n          actions={[\r\n            {\r\n              icon: 'search',\r\n              tooltip: 'View Cycle',\r\n              onClick: (event, rowData) => {\r\n                this.props.history.push(`/cycle/${CONSTS[rowData.name]}`)\r\n              }\r\n            }\r\n          ]}\r\n        />\r\n      </div> : <Spinner />\r\n    )\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  allCycleAggr: state.cycles.allCycleAggr,\r\n  cycleAggr: state.cycles.cycleAggr,\r\n  cycleMetadata: state.cycles.cycleMetadata,\r\n  loading: state.cycles.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchAllCycles: () => dispatch(fetchAllCyclesMetrics())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cycles);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchAllCyclesMetrics } from '../../redux/actions';\r\nimport RadarGraph from '../../components/radar-graph/RadarGraph';\r\nimport Spinner from '../../components/spinner/Spinner';\r\n\r\nclass Overview extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchAllCycles();\r\n  }\r\n\r\n  render() {\r\n    const { allCycleAggr } = this.props;\r\n    let graph = <Spinner />;\r\n\r\n    if (Object.keys(allCycleAggr).length) {\r\n      graph = (<RadarGraph\r\n        title='All Cycles Assesments'\r\n        subtitle='For the 10th, 25th, 50th, 75th and 90th Percentile'\r\n        keys={['10th', '25th', '50th', '75th', '90th']}\r\n        index='index'\r\n        tall\r\n        data={[\r\n          {\r\n            index: 'Projects',\r\n            '10th': allCycleAggr.projectPercentiles[0],\r\n            '25th': allCycleAggr.projectPercentiles[1],\r\n            '50th': allCycleAggr.projectPercentiles[2],\r\n            '75th': allCycleAggr.projectPercentiles[3],\r\n            '90th': allCycleAggr.projectPercentiles[4]\r\n          },\r\n          {\r\n            index: 'Quizzes',\r\n            '10th': allCycleAggr.quizPercentiles[0],\r\n            '25th': allCycleAggr.quizPercentiles[1],\r\n            '50th': allCycleAggr.quizPercentiles[2],\r\n            '75th': allCycleAggr.quizPercentiles[3],\r\n            '90th': allCycleAggr.quizPercentiles[4]\r\n          },\r\n          {\r\n            index: 'Soft Skills',\r\n            '10th': allCycleAggr.softSkillsPercentiles[0],\r\n            '25th': allCycleAggr.softSkillsPercentiles[1],\r\n            '50th': allCycleAggr.softSkillsPercentiles[2],\r\n            '75th': allCycleAggr.softSkillsPercentiles[3],\r\n            '90th': allCycleAggr.softSkillsPercentiles[4]\r\n          }\r\n        ]}\r\n      />);\r\n    }\r\n\r\n    return graph;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  allCycleAggr: state.cycles.allCycleAggr\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchAllCycles: () => dispatch(fetchAllCyclesMetrics())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Overview);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './NavBar.module.css';\r\nimport { AppBar, Drawer, IconButton, List, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\r\nimport { ArrowUpward, Autorenew, Home, Menu, Person } from '@material-ui/icons';\r\n\r\nclass NavBar extends Component {\r\n  state = {\r\n    sideDrawerOpen: false\r\n  }\r\n\r\n  clickHandler = () => {\r\n    this.setState(prevState => ({ sideDrawerOpen: !prevState.sideDrawerOpen }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div style={{ display: 'flex' }}>\r\n          <AppBar position='static' style={{ flexDirection: 'row' }}>\r\n            <IconButton edge='start'\r\n              color='inherit'\r\n              aria-label='Menu'\r\n              style={{ margin: '0 16px' }}\r\n              onClick={this.clickHandler}>\r\n              <Menu />\r\n            </IconButton>\r\n            <Typography variant='h6' style={{ paddingTop: '8px' }}>Training Team DataViz</Typography>\r\n          </AppBar>\r\n        </div>\r\n\r\n        <Drawer open={this.state.sideDrawerOpen} onClose={this.clickHandler}>\r\n          <div\r\n            style={{ width: '250px' }}\r\n            role=\"presentation\"\r\n            onClick={this.clickHandler}\r\n            onKeyDown={this.clickHandler}\r\n          >\r\n            <List>\r\n              <Link to='/' className={styles.Link}>\r\n                <ListItem button>\r\n                  <ListItemIcon>\r\n                    <Home />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary='Overview' />\r\n                </ListItem>\r\n              </Link>\r\n\r\n              <Link to='/cycle' className={styles.Link}>\r\n                <ListItem button>\r\n                  <ListItemIcon>\r\n                    <Autorenew />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary='Cycles' />\r\n                </ListItem>\r\n              </Link>\r\n\r\n              <Link to='/associate' className={styles.Link}>\r\n                <ListItem button>\r\n                  <ListItemIcon>\r\n                    <Person />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary='Associates' />\r\n                </ListItem>\r\n              </Link>\r\n\r\n              <Link to='/upload' className={styles.Link}>\r\n                <ListItem button>\r\n                  <ListItemIcon>\r\n                    <ArrowUpward />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary='Upload' />\r\n                </ListItem>\r\n              </Link>\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { postCycleMetrics } from '../../redux/actions';\r\nimport { Button, Card, CardContent, CardActions, CardHeader, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport Spinner from '../spinner/Spinner';\r\nimport styles from './Upload.module.css';\r\nimport Metadata from '../../shared/metadata';\r\nimport CONSTS from '../../shared/constants';\r\n\r\nclass Upload extends Component {\r\n  state = {\r\n    selectedCycle: ''\r\n  }\r\n\r\n  uploadFileHandler = () => {\r\n    const formData = new FormData();\r\n    formData.append('file', this.uploadInput.files[0]);\r\n\r\n    this.props.postCycle(formData, this.state.selectedCycle, this.props.history);\r\n  }\r\n\r\n  selectHandler = evt => {\r\n    this.setState({ selectedCycle: evt.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { selectedCycle } = this.state;\r\n    const { error, loading } = this.props;\r\n\r\n    const cycleList = Metadata.cycles.map((cycle, index) => {\r\n      return <MenuItem key={index} value={cycle}>{CONSTS[cycle]}</MenuItem>\r\n    });\r\n\r\n    return !loading ?\r\n      <Card className={styles.Card}>\r\n        <CardHeader title='Upload a CSV File:' />\r\n        {error ? <p className={styles.Error}>{error}</p> : null}\r\n\r\n        <div className={styles.Container}>\r\n          <FormControl className={styles.Select}>\r\n            <InputLabel htmlFor='cycles'>Select Cycle</InputLabel>\r\n            <Select\r\n              value={selectedCycle}\r\n              onChange={this.selectHandler}\r\n              inputProps={{\r\n                id: 'cycles',\r\n              }}\r\n            >\r\n              {cycleList}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n\r\n        <CardContent>\r\n          <input accept='.csv'\r\n            ref={(ref) => { this.uploadInput = ref; }}\r\n            type='file' />\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={this.uploadFileHandler}\r\n            disabled={selectedCycle === ''}>\r\n            Upload\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      : <Spinner />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  error: state.cycles.error,\r\n  loading: state.cycles.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postCycle: (formData, cycleName, history) => dispatch(postCycleMetrics(formData, cycleName, history))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Upload);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { resetError } from './redux/actions';\r\nimport styles from './App.module.css';\r\nimport { Button, Modal } from '@material-ui/core';\r\nimport Associate from './containers/associate/Associate';\r\nimport Associates from './containers/associates/Associates';\r\nimport Cycle from './containers/cycle/Cycle';\r\nimport Cycles from './containers/cycles/Cycles';\r\nimport Overview from './containers/overview/Overview';\r\nimport NavBar from './components/nav-bar/NavBar';\r\nimport Upload from './components/upload/Upload';\r\n\r\nclass App extends Component {\r\n\r\n  toggleModal = () => {\r\n    this.props.resetError();\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <NavBar />\r\n        <main className={styles.Main}>\r\n          <Switch>\r\n            <Route path='/cycle' exact component={Cycles} />\r\n            <Route path='/cycle/:cycle' exact component={Cycle} />\r\n            <Route path='/associate' exact component={Associates} />\r\n            <Route path='/cycle/:cycle/associate/:associateName' exact component={Associate} />\r\n            <Route path='/upload' exact component={Upload} />\r\n            <Route path='/' component={Overview} />\r\n          </Switch>\r\n        </main>\r\n\r\n        {error ? <Modal\r\n          aria-labelledby='simple-modal-title'\r\n          aria-describedby='simple-modal-description'\r\n          open={!!error}\r\n          onClose={this.toggleModal}\r\n        >\r\n          <div className={styles.Modal}>\r\n            <h2 id='modal-title'>Oops, something went wrong!</h2>\r\n            <p id='simple-modal-description'>\r\n              {error.message}\r\n            </p>\r\n            <p id='simple-modal-description'>\r\n              {error.response.data}\r\n            </p>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={styles.Button}\r\n              onClick={this.toggleModal}>\r\n              Close\r\n            </Button>\r\n          </div>\r\n        </Modal> : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  error: state.cycles.error\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  resetError: () => dispatch(resetError())\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport configureStore from './redux/store';\r\nimport rootSaga from './redux/sagas/rootSaga'\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst store = configureStore();\r\n\r\nstore.runSagas(rootSaga);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n/* #######################################################################\r\n#  Disclaimer:                                                            #\r\n#  Most of this app was built as a fever dream, stream of consciousness   #\r\n#  venture in the wee hours of the morning while suffering from insomnia. #\r\n#  If you find something that doesn't makes sense or makes you think      #\r\n#  why in God's name would anyone do this, it's probably because it       #\r\n#  doesn't and no one in their right mind would.                          #\r\n#########################################################################*/","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nexport default function configureStore() {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  return {\r\n    ...createStore(rootReducer, applyMiddleware(sagaMiddleware)),\r\n    runSagas: sagaMiddleware.run\r\n  }\r\n}"],"sourceRoot":""}