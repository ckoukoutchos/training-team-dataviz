{"version":3,"sources":["components/bullet-graph/BulletGraph.module.css","components/associate-info/AssociateInfo.module.css","components/breadcrumbs/Breadcrumbs.module.css","components/radar-graph/RadarGraph.module.css","components/cycle-info/CycleInfo.module.css","components/calendar/Calendar.module.css","components/nav-bar/NavBar.module.css","components/upload/Upload.module.css","App.module.css","components/legend/Legend.module.css","containers/associate/Associate.module.css","containers/cycle/Cycle.module.css","components/toggle/Toggle.module.css","components/spinner/Spinner.module.css","containers/associates/Associates.module.css","containers/cycles/Cycles.module.css","redux/actionTypes.js","redux/reducers/cyclesReducer.js","redux/reducers/rootReducer.js","redux/actions.js","shared/metadata.js","shared/constants.js","shared/dataService.js","redux/sagas/cyclesSagas.js","redux/sagas/rootSaga.js","components/associate-info/AssociateInfo.js","components/breadcrumbs/Breadcrumbs.js","components/legend/Legend.js","components/calendar/Calendar.js","components/radar-graph/RadarGraph.js","components/toggle/Toggle.js","components/bullet-graph/BulletGraph.js","components/spinner/Spinner.js","containers/associate/Associate.js","containers/associates/Associates.js","components/cycle-info/CycleInfo.js","containers/cycle/Cycle.js","containers/cycles/Cycles.js","containers/overview/Overview.js","components/nav-bar/NavBar.js","components/upload/Upload.js","App.js","index.js","redux/store.js"],"names":["module","exports","Divider","Graph","Graph2","Graph3","Header","Paper","Body","BodyOnly","BreadcrumbsLong","BreadcrumbsShort","Link","TallGraph","Card","Container","Error","Select","Button","Main","Modal","Label","Legend","Wrapper","Switch","loader","load1","FETCH_ALL_CYCLES_METRICS","FETCH_CYCLE_METRICS","POST_CYCLE_METRICS","initialState","allCycleAggr","associateMetadata","cycleAggr","cycleMetadata","cycleMetrics","error","loading","newAssociateMetadata","state","action","_i","_Object$entries","Object","entries","length","_ref5","_ref2","slicedToArray","key","value","_i2","_Object$entries2","_ref6","_ref4","newCycleAggr","_i3","_Object$entries3","_ref9","_ref8","cycleName","newCycleMetadata","_i4","_Object$entries4","_ref12","_ref11","newCycleMetrics","_i5","_Object$entries5","_ref15","_ref14","combineReducers","cycles","arguments","undefined","type","objectSpread","fetchAllCyclesMetrics","fetchAllCyclesMetricsSuccess","fetchCycleMetrics","fetchCycleMetricsSuccess","fetchCycleMetricsFail","postCycleMetricsSuccess","postCycleMetricsFail","shared_metadata","attendance","Excused Absence","Unexcused Absence","Excused Late Arrival","Unexcused Late Arrival","Optional Attendance","Interaction Type","quiz","projectScore","softSkills","cycleMetadate","modules","Project (Score)","HTML_CSS_Page_Match_Project_v2","Max Score","Module","JavaScript_Form_Validation_Project_v2","MongoDB_Database_Project_v3","PostgreSQL_Database_Project_v3","Garden_Center_API_Project_v4","Catalyte_Pet_Emporium_API_Project_v2","Garden_Center_Front_End_Project_v2","Redux_Garden_Center_Front_End_Project_v2","E_Commerce_Group_Project_v1","Final_Health_Project_v3","Garden_Center_API_Project_v5","Quiz","Quiz_Introductory_v1","Quiz_HTML_and_CSS_v1","Quiz_JavaScript_v1","Quiz_Intro_to_Java_v1","Quiz_Relational_Databases_v1","Quiz_Document_Databases_v1","Quiz_Java_Unit_Testing_And_OOP_v1","Quiz_React_js_v1","Quiz_React_js_v2","Quiz_Redux_v1","Quiz_Redux_v2","Quiz_Spring_With_Java_v2","Quiz_Document_Databases_v2","Quiz_Relational_Databases_v2","Quiz_Intro_to_Java_v2","Quiz_Java_Unit_Testing_And_OOP_v2","Quiz_JavaScript_v2","Quiz_Introductory_v2","Soft Skill Assessment","Problem Solving","Self Awareness and Self Improvement","Project Execution","Professionalism","Communication","staff","constants","attendanceColors","Mastery Learning Portland 2019","mlPortland2019","moduleColors","moduleLengthColors","percentiles","tradChicagoApril2019","Traditional Cycle Chicago April 2019","tradDenverJune2019","Traditional Cycle Denver June 2019","tradBostonJune2019","Traditional Cycle Boston June 2019","tradBaltimoreJuly2019","Traditional Cycle Baltimore July 2019","calcDaysSince","startDate","endDate","startDateSplit","split","startDateObj","Date","endDateSplit","cycleLength","Math","round","daysSinceStart","now","calcDateMarkers","metadata","Metadata","map","start","calcMetricAvg","associate","metric","maxScores","metrics","filter","event","metricAvg","reduce","acc","curr","Number","Score","Interaction","calcAttemptPassRatio","attempt","pass","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","calcPercentiles","scores","avg","index","indexOf","formatPercentile","percentile","getUrlParams","urlHistory","url","location","pathname","join","cycle","watchCycle","postCycleMetrics","regenerator_default","a","wrap","_context","prev","all","takeEvery","stop","_marked","res","_res$data","data","_context2","axios","get","sent","put","apply","toConsumableArray","formatAllCycleData","t0","_marked2","_ref","_res","_context3","formatCycleData","_marked3","formData","history","_res2","_context4","post","push","_marked4","sortedMetrics","associates","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","item","includes","Person","values","sortMetircsByAssociate","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","person","Development Basics and Front End","end","Databases","Logic Layer (Java)","Front End Frameworks (React)","Group Project","Final Project","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","RegExp","test","getAssociateMetadata","associateAggr","avgs","forEach","attemptPass","projectAvg","CONSTS","quizAvg","softSkillsAvg","calcAssociateAggr","attemptAvg","attemptMax","attemptMin","projectMax","projectMin","quizMax","quizMin","softSkillsMax","softSkillsMin","numAttempts","keys","numProjects","numQuizzes","numSoftSkills","calcCycleAggr","field","name","date","getCycleMetadata","i","_formatCycleData","_formatCycleData2","associateMeta","projectScores","quizScores","softSkillsScores","sort","b","projectPercentiles","perc","quizPercentiles","softSkillsPercentiles","calcAllCyclesPercentiles","rootSage","cyclesSagas","rootSaga_marked","AssociateInfo","props","_props$associate$find","find","exitRegex","bodyOnly","react_default","createElement","className","styles","Typography","variant","Fragment","display","color","breadcrumbs","path","Breadcrumbs","separator","aria-label","react_router_dom","to","items","colors","style","background","height","width","margin","splice","Calendar","events","newDateFormat","dateSplit","formatCalendarDate","day","toISOString","sortAttendanceEvents","nivo_calendar_esm","from","emptyColor","top","right","bottom","left","yearSpacing","monthBorderColor","dayBorderWidth","dayBorderColor","minValue","maxValue","tooltip","legend_Legend","RadarGraph","tall","title","subtitle","nivo_radar_esm","indexBy","curve","borderWidth","borderColor","gridLevels","gridShape","gridLabelOffset","enableDots","dotSize","dotColor","theme","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabel","dotLabelYOffset","scheme","fillOpacity","blendMode","legends","anchor","direction","translateX","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","effects","on","Toggle","checked","onChange","leftLabel","rightLabel","component","Grid","container","alignItems","spacing","BulletGraph","showModules","toggleHandler","_this","setState","prevState","prevTotal","moduleLengths","ranges","days","range","calcModuleLength","nivo_bullet_esm","id","measures","markers","titleAlign","titleOffsetX","measureSize","rangeColors","measureColors","concat","markerColors","markerSize","_this$props","this","traditional","toggle_Toggle","createTradCycleGraph","createMLCycleGraphs","Component","Spinner","Associate","fetchCycle","_ref3","_getUrlParams2","tradCycle","breadcrumbs_Breadcrumbs","associate_info_AssociateInfo","row","radar_graph_RadarGraph","defineProperty","bullet_graph_BulletGraph","calendar_Calendar","dist_default","columns","options","sorting","spinner_Spinner","connect","dispatch","Associates","fetchAllCycles","associateScores","table","createTableData","detailPanel","render","rowData","actions","icon","onClick","CycleInfo","nameSplit","cycleType","formattedName","trainers","slice","TAs","startDates","currentNumAssociates","Cycle","cycle_info_CycleInfo","Max","Min","Average","Cycles","Overview","graph","10th","25th","50th","75th","90th","NavBar","sideDrawerOpen","clickHandler","AppBar","position","flexDirection","IconButton","edge","Menu","paddingTop","Drawer","open","onClose","role","onKeyDown","List","ListItem","button","ListItemIcon","Home","ListItemText","primary","Autorenew","esm_Person","ArrowUpward","Upload","selectedCycle","uploadFileHandler","FormData","append","uploadInput","files","postCycle","selectHandler","evt","target","_this2","cycleList","MenuItem","CardHeader","FormControl","InputLabel","htmlFor","inputProps","CardContent","accept","ref","CardActions","disabled","App","toggleModal","resetError","nav_bar_NavBar","react_router","exact","aria-labelledby","aria-describedby","message","response","store","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","applyMiddleware","runSagas","run","configureStore","rootSaga","ReactDOM","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.cf246e7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Divider\":\"BulletGraph_Divider__1Lt9q\",\"Graph\":\"BulletGraph_Graph__2twxI\",\"Graph2\":\"BulletGraph_Graph2__1KGx1\",\"Graph3\":\"BulletGraph_Graph3__2juOi\",\"Header\":\"BulletGraph_Header__1-AvP\",\"Paper\":\"BulletGraph_Paper__3RQJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Body\":\"AssociateInfo_Body__1Amn5\",\"BodyOnly\":\"AssociateInfo_BodyOnly__1hnG8\",\"Divider\":\"AssociateInfo_Divider__2giC_\",\"Header\":\"AssociateInfo_Header__fDohW\",\"Paper\":\"AssociateInfo_Paper__7kmRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadcrumbsLong\":\"Breadcrumbs_BreadcrumbsLong__8s6Lb\",\"BreadcrumbsShort\":\"Breadcrumbs_BreadcrumbsShort__2aE41\",\"Link\":\"Breadcrumbs_Link__3XnHM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Divider\":\"RadarGraph_Divider__su1au\",\"Graph\":\"RadarGraph_Graph__1Fujf\",\"Header\":\"RadarGraph_Header__2A8Wj\",\"Paper\":\"RadarGraph_Paper__EtRk4\",\"TallGraph\":\"RadarGraph_TallGraph__2Coj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Body\":\"CycleInfo_Body__1-DjS\",\"BodyOnly\":\"CycleInfo_BodyOnly__-nksY\",\"Divider\":\"CycleInfo_Divider__mU5EQ\",\"Header\":\"CycleInfo_Header__3nFYB\",\"Paper\":\"CycleInfo_Paper__lCS0H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Divider\":\"Calendar_Divider__oUUth\",\"Graph\":\"Calendar_Graph__2giCu\",\"Header\":\"Calendar_Header__2chVD\",\"Paper\":\"Calendar_Paper__1tvj2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Link\":\"NavBar_Link__9NP2W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Upload_Card__1DIyV\",\"Container\":\"Upload_Container__3WUYy\",\"Error\":\"Upload_Error__3Qcgp\",\"Select\":\"Upload_Select__sqkGM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"App_Button__1gK1e\",\"Main\":\"App_Main__lg996\",\"Modal\":\"App_Modal__2SRWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Legend_Label__v6ai1\",\"Legend\":\"Legend_Legend__20kP-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paper\":\"Associate_Paper__Sy8Hq\",\"Wrapper\":\"Associate_Wrapper__2osse\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paper\":\"Cycle_Paper__2Zs-R\",\"Wrapper\":\"Cycle_Wrapper__wq_xU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Switch\":\"Toggle_Switch__3vSQT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__2r4Ff\",\"load1\":\"Spinner_load1__-A6Rw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paper\":\"Associates_Paper__1ROWZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Cycles_Container__-2FDk\",\"Link\":\"Cycles_Link__SpMVp\",\"Paper\":\"Cycles_Paper__1fbk2\"};","export const FETCH_ALL_CYCLES_METRICS = 'FETCH_ALL_CYCLES_METRICS';\r\nexport const FETCH_ALL_CYCLES_METRICS_SUCCESS = 'FETCH_ALL_CYCLES_METRICS_SUCCESS';\r\nexport const FETCH_ALL_CYCLES_METRICS_FAIL = 'FETCH_ALL_CYCLES_METRICS_FAIL';\r\n\r\nexport const FETCH_CYCLE_METRICS = 'FETCH_CYCLE_METRICS';\r\nexport const FETCH_CYCLE_METRICS_SUCCESS = 'FETCH_CYCLE_METRICS_SUCCESS';\r\nexport const FETCH_CYCLE_METRICS_FAIL = 'FETCH_CYCLE_METRICS_FAIL';\r\n\r\nexport const POST_CYCLE_METRICS = 'POST_CYCLE_METRICS';\r\nexport const POST_CYCLE_METRICS_SUCCESS = 'POST_CYCLE_METRICS_SUCCESS';\r\nexport const POST_CYCLE_METRICS_FAIL = 'POST_CYCLE_METRICS_FAIL';\r\n\r\nexport const RESET_ERROR = 'RESET_ERROR;'","import { FETCH_ALL_CYCLES_METRICS, FETCH_ALL_CYCLES_METRICS_SUCCESS, FETCH_ALL_CYCLES_METRICS_FAIL, FETCH_CYCLE_METRICS, FETCH_CYCLE_METRICS_SUCCESS, FETCH_CYCLE_METRICS_FAIL, POST_CYCLE_METRICS, POST_CYCLE_METRICS_SUCCESS, POST_CYCLE_METRICS_FAIL, RESET_ERROR } from '../actionTypes';\r\n\r\nconst initialState = {\r\n  allCycleAggr: {},\r\n  associateMetadata: {},\r\n  cycleAggr: {},\r\n  cycleMetadata: [],\r\n  cycleMetrics: [],\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_ALL_CYCLES_METRICS: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: true\r\n      };\r\n    }\r\n    case FETCH_ALL_CYCLES_METRICS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        allCycleAggr: action.allCycleAggr,\r\n        associateMetadata: action.associateMetadata,\r\n        cycleAggr: action.cycleAggr,\r\n        cycleMetadata: action.cycleMetadata,\r\n        cycleMetrics: action.cycleMetrics,\r\n        loading: false,\r\n      };\r\n    }\r\n    case FETCH_ALL_CYCLES_METRICS_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false\r\n      }\r\n    }\r\n    case FETCH_CYCLE_METRICS: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: true\r\n      };\r\n    }\r\n    case FETCH_CYCLE_METRICS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        associateMetadata: newAssociateMetadata(state, action),\r\n        cycleAggr: newCycleAggr(state, action),\r\n        cycleMetadata: newCycleMetadata(state, action),\r\n        cycleMetrics: newCycleMetrics(state, action),\r\n        loading: false,\r\n      };\r\n    }\r\n    case FETCH_CYCLE_METRICS_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false\r\n      }\r\n    }\r\n    case POST_CYCLE_METRICS: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: true\r\n      };\r\n    }\r\n    case POST_CYCLE_METRICS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        associateMetadata: newAssociateMetadata(state, action),\r\n        cycleAggr: newCycleAggr(state, action),\r\n        cycleMetadata: newCycleMetadata(state, action),\r\n        cycleMetrics: newCycleMetrics(state, action),\r\n        loading: false,\r\n      };\r\n    }\r\n    case POST_CYCLE_METRICS_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false\r\n      }\r\n    }\r\n    case RESET_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst newAssociateMetadata = (state, action) => {\r\n  const newAssociateMetadata = {};\r\n  for (let [key, value] of Object.entries(state.associateMetadata)) {\r\n    newAssociateMetadata[key] = value;\r\n  }\r\n  for (let [key, value] of Object.entries(action.associateMetadata)) {\r\n    newAssociateMetadata[key] = value;\r\n  }\r\n  return newAssociateMetadata;\r\n}\r\n\r\nconst newCycleAggr = (state, action) => {\r\n  const newCycleAggr = {};\r\n  for (let [key, value] of Object.entries(state.cycleAggr)) {\r\n    newCycleAggr[key] = value;\r\n  }\r\n  newCycleAggr[action.cycleName] = action.cycleAggr\r\n  return newCycleAggr;\r\n}\r\n\r\nconst newCycleMetadata = (state, action) => {\r\n  const newCycleMetadata = {};\r\n  for (let [key, value] of Object.entries(state.cycleMetadata)) {\r\n    newCycleMetadata[key] = value;\r\n  }\r\n  newCycleMetadata[action.cycleName] = action.cycleMetadata\r\n  return newCycleMetadata;\r\n}\r\n\r\nconst newCycleMetrics = (state, action) => {\r\n  const newCycleMetrics = {};\r\n  for (let [key, value] of Object.entries(state.cycleMetrics)) {\r\n    newCycleMetrics[key] = value;\r\n  }\r\n  newCycleMetrics[action.cycleName] = action.cycleMetrics\r\n  return newCycleMetrics;\r\n}","import { combineReducers } from 'redux';\r\nimport cyclesReducer from './cyclesReducer';\r\n\r\nexport default combineReducers({ cycles: cyclesReducer });","import { FETCH_ALL_CYCLES_METRICS, FETCH_ALL_CYCLES_METRICS_SUCCESS, FETCH_ALL_CYCLES_METRICS_FAIL, FETCH_CYCLE_METRICS, FETCH_CYCLE_METRICS_SUCCESS, FETCH_CYCLE_METRICS_FAIL, POST_CYCLE_METRICS, POST_CYCLE_METRICS_SUCCESS, POST_CYCLE_METRICS_FAIL, RESET_ERROR } from './actionTypes';\r\n\r\nexport const fetchAllCyclesMetrics = () => ({\r\n    type: FETCH_ALL_CYCLES_METRICS,\r\n});\r\n\r\nexport const fetchAllCyclesMetricsSuccess = (cycleAggr, cycleMetadata, associateMetadata, cycleMetrics, allCycleAggr) => ({\r\n    type: FETCH_ALL_CYCLES_METRICS_SUCCESS,\r\n    cycleAggr,\r\n    cycleMetadata,\r\n    associateMetadata,\r\n    cycleMetrics,\r\n    allCycleAggr\r\n});\r\n\r\nexport const fetchAllCyclesMetricsFail = error => ({\r\n    type: FETCH_ALL_CYCLES_METRICS_FAIL,\r\n    error\r\n});\r\n\r\nexport const fetchCycleMetrics = cycleName => ({\r\n    type: FETCH_CYCLE_METRICS,\r\n    cycleName\r\n});\r\n\r\nexport const fetchCycleMetricsSuccess = (cycleAggr, cycleMetadata, associateMetadata, cycleMetrics, cycleName) => ({\r\n    type: FETCH_CYCLE_METRICS_SUCCESS,\r\n    cycleAggr,\r\n    cycleMetadata,\r\n    associateMetadata,\r\n    cycleMetrics,\r\n    cycleName\r\n});\r\n\r\nexport const fetchCycleMetricsFail = error => ({\r\n    type: FETCH_CYCLE_METRICS_FAIL,\r\n    error\r\n});\r\n\r\nexport const postCycleMetrics = (formData, cycleName, history) => ({\r\n    type: POST_CYCLE_METRICS,\r\n    formData,\r\n    cycleName,\r\n    history\r\n});\r\n\r\nexport const postCycleMetricsSuccess = (cycleAggr, cycleMetadata, associateMetadata, cycleMetrics, cycleName) => ({\r\n    type: POST_CYCLE_METRICS_SUCCESS,\r\n    cycleAggr,\r\n    cycleMetadata,\r\n    associateMetadata,\r\n    cycleMetrics,\r\n    cycleName\r\n});\r\n\r\nexport const postCycleMetricsFail = error => ({\r\n    type: POST_CYCLE_METRICS_FAIL,\r\n    error\r\n});\r\n\r\nexport const resetError = () => ({\r\n    type: RESET_ERROR\r\n});","// eventually to be moved to config file/DB\r\n\r\nexport default {\r\n  attendance: {\r\n    'Excused Absence': 0,\r\n    'Unexcused Absence': 1,\r\n    'Excused Late Arrival': 2,\r\n    'Unexcused Late Arrival': 3,\r\n    'Optional Attendance': 4\r\n  },\r\n  cycles: [\r\n    'mlPortland2019',\r\n    'tradChicagoApril2019',\r\n    'tradDenverJune2019',\r\n    'tradBostonJune2019',\r\n    'tradBaltimoreJuly2019'\r\n  ],\r\n  'Interaction Type': {\r\n    quiz: 'Quiz',\r\n    projectScore: 'Project (Score)',\r\n    softSkills: 'Soft Skill Assesment'\r\n  },\r\n  cycleMetadate: [\r\n    'Staff change',\r\n    'Cycle End Date',\r\n    'Cycle Start Date',\r\n    'Associate Start'\r\n  ],\r\n  modules: [\r\n    'Development Basics and Front End',\r\n    'Databases',\r\n    'Logic Layer (Java)',\r\n    'Front End Frameworks (React)',\r\n    'Group Project',\r\n    'Final Project'\r\n  ],\r\n  'Project (Score)': {\r\n    HTML_CSS_Page_Match_Project_v2: {\r\n      'Max Score': 30,\r\n      Module: 'Development Basics & Frontend'\r\n    },\r\n    JavaScript_Form_Validation_Project_v2: {\r\n      'Max Score': 30,\r\n      Module: 'Development Basics & Frontend'\r\n    },\r\n    MongoDB_Database_Project_v3: {\r\n      'Max Score': 30,\r\n      Module: 'Databases'\r\n    },\r\n    PostgreSQL_Database_Project_v3: {\r\n      'Max Score': 30,\r\n      Module: 'Databases'\r\n    },\r\n    Garden_Center_API_Project_v4: {\r\n      'Max Score': 30,\r\n      Module: 'Logic Layer (Java)'\r\n    },\r\n    Catalyte_Pet_Emporium_API_Project_v2: {\r\n      'Max Score': 30,\r\n      Module: 'Logic Layer (Java)'\r\n    },\r\n    Garden_Center_Front_End_Project_v2: {\r\n      'Max Score': 30,\r\n      Module: 'Frontend Frameworks (React)'\r\n    },\r\n    Redux_Garden_Center_Front_End_Project_v2: {\r\n      'Max Score': 30,\r\n      Module: 'Frontend Frameworks (React)'\r\n    },\r\n    E_Commerce_Group_Project_v1: {\r\n      'Max Score': 81,\r\n      Module: 'Group Project'\r\n    },\r\n    Final_Health_Project_v3: {\r\n      'Max Score': 30,\r\n      Module: 'Final Project'\r\n    },\r\n    Garden_Center_API_Project_v5: {\r\n      'Max Score': 30,\r\n      Module: 'Logic Layer (Java)'\r\n    }\r\n  },\r\n  'Quiz': {\r\n    Quiz_Introductory_v1: {\r\n      'Max Score': 17,\r\n      Module: 'Development Basics & Frontend',\r\n    },\r\n    Quiz_HTML_and_CSS_v1: {\r\n      'Max Score': 12,\r\n      Module: 'Development Basics & Frontend',\r\n    },\r\n    Quiz_JavaScript_v1: {\r\n      'Max Score': 49,\r\n      Module: 'Development Basics & Frontend',\r\n    },\r\n    Quiz_Intro_to_Java_v1: {\r\n      'Max Score': 19,\r\n      Module: 'Logic Layer (Java)',\r\n    },\r\n    Quiz_Relational_Databases_v1: {\r\n      'Max Score': 30,\r\n      Module: 'Databases',\r\n    },\r\n    Quiz_Document_Databases_v1: {\r\n      'Max Score': 16,\r\n      Module: 'Databases',\r\n    },\r\n    Quiz_Java_Unit_Testing_And_OOP_v1: {\r\n      'Max Score': 37,\r\n      Module: 'Logic Layer (Java)',\r\n    },\r\n    Quiz_React_js_v1: {\r\n      'Max Score': 34,\r\n      Module: 'Frontend Frameworks (React)',\r\n    },\r\n    Quiz_React_js_v2: {\r\n      'Max Score': 14,\r\n      Module: 'Frontend Frameworks (React)',\r\n    },\r\n    Quiz_Redux_v1: {\r\n      'Max Score': 27,\r\n      Module: 'Frontend Frameworks (React)',\r\n    },\r\n    Quiz_Redux_v2: {\r\n      'Max Score': 10,\r\n      Module: 'Frontend Frameworks (React)',\r\n    },\r\n    Quiz_Spring_With_Java_v2: {\r\n      'Max Score': 14,\r\n      Module: 'Logic Layer (Java)',\r\n    },\r\n    Quiz_Document_Databases_v2: {\r\n      'Max Score': 10,\r\n      Module: 'Databases',\r\n    },\r\n    Quiz_Relational_Databases_v2: {\r\n      'Max Score': 16,\r\n      Module: 'Databases',\r\n    },\r\n    Quiz_Intro_to_Java_v2: {\r\n      'Max Score': 14,\r\n      Module: 'Logic Layer (Java)',\r\n    },\r\n    Quiz_Java_Unit_Testing_And_OOP_v2: {\r\n      'Max Score': 22,\r\n      Module: 'Logic Layer (Java)',\r\n    },\r\n    Quiz_JavaScript_v2: {\r\n      'Max Score': 26,\r\n      Module: 'Development Basics & Frontend',\r\n    },\r\n    Quiz_Introductory_v2: {\r\n      'Max Score': 14,\r\n      Module: 'Development Basics & Frontend',\r\n    }\r\n  },\r\n  'Soft Skill Assessment': {\r\n    'Problem Solving': { 'Max Score': 5 },\r\n    'Self Awareness and Self Improvement': { 'Max Score': 5 },\r\n    'Project Execution': { 'Max Score': 5 },\r\n    'Professionalism': { 'Max Score': 5 },\r\n    'Communication': { 'Max Score': 5 },\r\n  },\r\n  staff: ['Eric Queen', 'Corbin Koukoutchos', 'Dan Reuther', 'Katlyn Beck', 'Greg Fisher', 'Taylor Elam', 'Tony Richards', 'Dan Lawless', 'William Newman', 'Hayes McCardell', 'Josh Tucker']\r\n}","export default {\r\n  attendance: [\r\n    'Excused Absence',\r\n    'Unexcused Absence',\r\n    'Excused Late Arrival',\r\n    'Unexcused Late Arrival',\r\n    'Optional Attendance'\r\n  ],\r\n  attendanceColors: ['gold', 'darkred', 'yellow', 'red', 'green'],\r\n  'Mastery Learning Portland 2019': 'mlPortland2019',\r\n  mlPortland2019: 'Mastery Learning Portland 2019',\r\n  moduleColors: [\r\n    '#a50026',\r\n    '#d73027',\r\n    '#f46d43',\r\n    '#fdae61',\r\n    '#fee090',\r\n    '#ffffbf'\r\n  ],\r\n  moduleLengthColors: ['#a50026', '#e6e6e6'],\r\n  modules: [\r\n    'Development Basics and Front End',\r\n    'Databases',\r\n    'Logic Layer (Java)',\r\n    'Front End Frameworks (React)',\r\n    'Group Project',\r\n    'Final Project'\r\n  ],\r\n  quiz: 'Quiz',\r\n  percentiles: [0.1, 0.25, 0.5, 0.75, 0.9],\r\n  projectScore: 'Project (Score)',\r\n  softSkills: 'Soft Skill Assessment',\r\n  tradChicagoApril2019: 'Traditional Cycle Chicago April 2019',\r\n  'Traditional Cycle Chicago April 2019': 'tradChicagoApril2019',\r\n  tradDenverJune2019: 'Traditional Cycle Denver June 2019',\r\n  'Traditional Cycle Denver June 2019': 'tradDenverJune2019',\r\n  tradBostonJune2019: 'Traditional Cycle Boston June 2019',\r\n  'Traditional Cycle Boston June 2019': 'tradBostonJune2019',\r\n  tradBaltimoreJuly2019: 'Traditional Cycle Baltimore July 2019',\r\n  'Traditional Cycle Baltimore July 2019': 'tradBaltimoreJuly2019'\r\n}","import Metadata from './metadata';\r\nimport CONSTS from './constants';\r\n\r\nexport const calcAllCyclesPercentiles = cycleAggr => {\r\n  const projectScores = [];\r\n  const quizScores = [];\r\n  const softSkillsScores = [];\r\n  for (const cycle in cycleAggr) {\r\n    for (const associate in cycleAggr[cycle]) {\r\n      projectScores.push(cycleAggr[cycle][associate].projectAvg);\r\n      quizScores.push(cycleAggr[cycle][associate].quizAvg);\r\n      softSkillsScores.push(cycleAggr[cycle][associate].softSkillsAvg);\r\n    }\r\n  }\r\n  // sort in ascending order\r\n  projectScores.sort((a, b) => a - b);\r\n  quizScores.sort((a, b) => a - b);\r\n  softSkillsScores.sort((a, b) => a - b);\r\n  // calc percentiles for each\r\n  const projectPercentiles = CONSTS.percentiles.map(perc =>\r\n    projectScores[Math.round(projectScores.length * perc)]\r\n  );\r\n  const quizPercentiles = CONSTS.percentiles.map(perc =>\r\n    quizScores[Math.round(quizScores.length * perc)]\r\n  );\r\n  const softSkillsPercentiles = CONSTS.percentiles.map(perc =>\r\n    softSkillsScores[Math.round(softSkillsScores.length * perc)]\r\n  );\r\n  return { projectPercentiles, projectScores, quizPercentiles, quizScores, softSkillsPercentiles, softSkillsScores };\r\n}\r\n\r\nexport const calcAssociateAggr = associates => {\r\n  const avgs = {};\r\n  associates.forEach(associate => {\r\n    avgs[associate[0].Person] = {\r\n      attemptPass: calcAttemptPassRatio(associate),\r\n      projectAvg: calcMetricAvg(associate, CONSTS.projectScore, Metadata['Project (Score)']),\r\n      quizAvg: calcMetricAvg(associate, CONSTS.quiz, Metadata.Quiz),\r\n      softSkillsAvg: calcMetricAvg(associate, CONSTS.softSkills, Metadata['Soft Skill Assessment'])\r\n    };\r\n  });\r\n  return avgs;\r\n}\r\n\r\nexport const calcCycleAggr = associates => {\r\n  let attemptAvg = 0;\r\n  let attemptMax = 0;\r\n  let attemptMin = 100;\r\n  let projectAvg = 0;\r\n  let projectMax = 0;\r\n  let projectMin = 100;\r\n  let quizAvg = 0;\r\n  let quizMax = 0;\r\n  let quizMin = 100;\r\n  let softSkillsAvg = 0;\r\n  let softSkillsMax = 0;\r\n  let softSkillsMin = 100;\r\n  let numAttempts = Object.keys(associates).length;\r\n  let numProjects = Object.keys(associates).length;\r\n  let numQuizzes = Object.keys(associates).length;\r\n  let numSoftSkills = Object.keys(associates).length;\r\n\r\n  for (const associate in associates) {\r\n    // attempts/pass avg\r\n    attemptAvg += associates[associate].attemptPass;\r\n    if (associates[associate].attemptPass === 0) {\r\n      numAttempts--;\r\n    }\r\n    // project avg\r\n    projectAvg += associates[associate].projectAvg;\r\n    if (associates[associate].projectAvg === 0) {\r\n      numProjects--;\r\n    }\r\n    // quiz avg\r\n    quizAvg += associates[associate].quizAvg;\r\n    if (associates[associate].quizAvg === 0) {\r\n      numQuizzes--;\r\n    }\r\n    // soft skills avg\r\n    softSkillsAvg += associates[associate].softSkillsAvg;\r\n    if (associates[associate].softSkillsAvg === 0) {\r\n      numSoftSkills--;\r\n    }\r\n    // attempt/pass max/min\r\n    if (associates[associate].attemptPass > attemptMax) {\r\n      attemptMax = associates[associate].attemptPass;\r\n    }\r\n    if (associates[associate].attemptPass < attemptMin && associates[associate].attemptPass !== 0) {\r\n      attemptMin = associates[associate].attemptPass;\r\n    }\r\n    //project max/min\r\n    if (associates[associate].projectAvg > projectMax) {\r\n      projectMax = associates[associate].projectAvg;\r\n    }\r\n    if (associates[associate].projectAvg < projectMin && associates[associate].projectAvg !== 0) {\r\n      projectMin = associates[associate].projectAvg;\r\n    }\r\n    // quiz max/min\r\n    if (associates[associate].quizAvg > quizMax) {\r\n      quizMax = associates[associate].quizAvg;\r\n    }\r\n    if (associates[associate].quizAvg < quizMin && associates[associate].quizAvg !== 0) {\r\n      quizMin = associates[associate].quizAvg;\r\n    }\r\n    // soft skills max/min\r\n    if (associates[associate].softSkillsAvg > softSkillsMax) {\r\n      softSkillsMax = associates[associate].softSkillsAvg;\r\n    }\r\n    if (associates[associate].softSkillsAvg < softSkillsMin && associates[associate].softSkillsAvg !== 0) {\r\n      softSkillsMin = associates[associate].softSkillsAvg;\r\n    }\r\n  };\r\n\r\n  return {\r\n    attemptAvg: numAttempts === 0 ? 0 : Math.round(attemptAvg / numAttempts),\r\n    attemptMax,\r\n    attemptMin,\r\n    projectAvg: numProjects === 0 ? 0 : Math.round(projectAvg / numProjects),\r\n    projectMax,\r\n    projectMin,\r\n    quizAvg: numQuizzes === 0 ? 0 : Math.round(quizAvg / numQuizzes),\r\n    quizMax,\r\n    quizMin,\r\n    softSkillsMax,\r\n    softSkillsMin,\r\n    softSkillsAvg: numSoftSkills === 0 ? 0 : Math.round(softSkillsAvg / numSoftSkills)\r\n  }\r\n}\r\n\r\nexport const calcDaysSince = (startDate, endDate) => {\r\n  // format as Date object\r\n  const startDateSplit = startDate.split('/');\r\n  const startDateObj = new Date('20' + startDateSplit[2], startDateSplit[0] - 1, startDateSplit[1]);\r\n\r\n  if (endDate) {\r\n    // if end date provided, format as Date object and calc time btw start and end\r\n    const endDateSplit = endDate.split('/');\r\n    const endDateObj = new Date('20' + endDateSplit[2], endDateSplit[0] - 1, endDateSplit[1]);\r\n    const cycleLength = (endDateObj - startDateObj) / 86400000;\r\n    return Math.round(cycleLength);\r\n  } else {\r\n    // if no end date, calc time btw now and start\r\n    const daysSinceStart = (Date.now() - startDateObj) / 86400000;\r\n    return Math.round(daysSinceStart);\r\n  }\r\n}\r\n\r\nexport const calcDateMarkers = metadata => {\r\n  const startDate = metadata['Associate Start'];\r\n  return Metadata.modules.map(modules => {\r\n    if (metadata[modules].start) {\r\n      return Math.round(calcDaysSince(startDate, metadata[modules].start));\r\n    }\r\n    return 0;\r\n  });\r\n}\r\n\r\nexport const calcModuleLength = metadata => {\r\n  let prevTotal = 0;\r\n  const moduleLengths = [];\r\n  const ranges = Metadata.modules.map(modules => {\r\n    if (metadata[modules].start && metadata[modules].end) {\r\n      const days = Math.round(calcDaysSince(metadata[modules].start, metadata[modules].end));\r\n      moduleLengths.push(days);\r\n      const range = days + prevTotal;\r\n      prevTotal = range;\r\n      return range;\r\n    } else if (metadata[modules].start) {\r\n      if (metadata['Cycle Exit']) {\r\n        const days = Math.round(calcDaysSince(metadata[modules].start, metadata['Cycle Exit']));\r\n        moduleLengths.push(days);\r\n        const range = days + prevTotal;\r\n        return range;\r\n      } else {\r\n        const days = Math.round(calcDaysSince(metadata[modules].start));\r\n        moduleLengths.push(days);\r\n        const range = days + prevTotal;\r\n        return range;\r\n      }\r\n    } else {\r\n      moduleLengths.push(0);\r\n      return 0;\r\n    }\r\n  });\r\n  return { moduleLengths, ranges };\r\n}\r\n\r\nexport const calcMetricAvg = (associate, metric, maxScores) => {\r\n  const metrics = associate.filter(event => event['Interaction Type'] === metric);\r\n\r\n  // return 0 if no metrics were taken\r\n  if (!metrics.length) {\r\n    return 0;\r\n  }\r\n\r\n  // adds up scores of all associate metrics and Max Scores for those metrics\r\n  const metricAvg = metrics.reduce((acc, curr) => {\r\n    return [acc[0] + Number(curr.Score), acc[1] + maxScores[curr.Interaction]['Max Score']];\r\n  }, [0, 0]);\r\n\r\n  // convert to percent and round to nearest int\r\n  return Math.round((metricAvg[0] / metricAvg[1]) * 100);\r\n}\r\n\r\nexport const calcAttemptPassRatio = metrics => {\r\n  let attempt = 0;\r\n  let pass = 0;\r\n  for (const metric of metrics) {\r\n    if (metric['Interaction Type'] === 'Exercise') {\r\n      attempt++;\r\n      if (metric.Score === 'Completed' || metric.Score === 'Pass') {\r\n        pass++;\r\n      }\r\n    } else if (metric['Interaction Type'] === 'Project (Score)') {\r\n      attempt++;\r\n      if ((metric.Score / 30) >= 0.9) {\r\n        pass++;\r\n      }\r\n    }\r\n  }\r\n  return Math.round((pass / attempt) * 100);\r\n}\r\n\r\nexport const calcPercentiles = (scores, avg) => {\r\n  const index = scores.indexOf(avg);\r\n  return Math.round((index + 1) / scores.length * 100);\r\n}\r\n\r\nconst formatCalendarDate = date => {\r\n  const dateSplit = date.split('/');\r\n  if (dateSplit[0].length === 1) {\r\n    dateSplit[0] = '0' + dateSplit[0];\r\n  }\r\n  if (dateSplit[1].length === 1) {\r\n    dateSplit[1] = '0' + dateSplit[1];\r\n  }\r\n  return ['20' + dateSplit[2], dateSplit[0], dateSplit[1]].join('-');\r\n}\r\n\r\nexport const sortAttendanceEvents = metrics => {\r\n  const attendance = {\r\n    events: []\r\n  };\r\n  metrics.forEach(event => {\r\n    // convert to correct date format\r\n    const newDateFormat = formatCalendarDate(event.Date);\r\n\r\n    // set start date\r\n    if (event['Interaction Type'] === 'Associate Start') {\r\n      attendance[event['Interaction Type']] = newDateFormat;\r\n\r\n      // set cycle exit date\r\n    } else if (RegExp('Cycle Exit').test(event['Interaction Type'])) {\r\n      attendance['Cycle Exit'] = newDateFormat;\r\n\r\n      // set other attendace evts\r\n    } else if (event['Interaction Type'] === 'Attendance Event') {\r\n      attendance.events.push({\r\n        day: newDateFormat,\r\n        value: Metadata.attendance[event.Interaction]\r\n      })\r\n    }\r\n  });\r\n\r\n  // if no cycle exit date, use current\r\n  if (!attendance['Cycle Exit']) {\r\n    const date = new Date(Date.now());\r\n    attendance['Cycle Exit'] = date.toISOString();\r\n  }\r\n  return attendance;\r\n}\r\n\r\nexport const sortMetircsByAssociate = data => {\r\n  const associates = {};\r\n\r\n  for (const item of data) {\r\n    // ignore training staff and empty Person\r\n    if (!Metadata.staff.includes(item.Person) && item.Person !== '') {\r\n\r\n      // if associate already added, push item\r\n      if (associates[item.Person]) {\r\n        associates[item.Person].push(item);\r\n      } else {\r\n        // if field doesn't exist, add one\r\n        associates[item.Person] = [item];\r\n      }\r\n    }\r\n  }\r\n  return Object.values(associates);\r\n}\r\n\r\nexport const getAssociateMetadata = data => {\r\n  const metadata = {};\r\n  for (const associate of data) {\r\n    let person = {\r\n      'Development Basics and Front End': {\r\n        start: null,\r\n        end: null\r\n      },\r\n      Databases: {\r\n        start: null,\r\n        end: null\r\n      },\r\n      'Logic Layer (Java)': {\r\n        start: null,\r\n        end: null\r\n      },\r\n      'Front End Frameworks (React)': {\r\n        start: null,\r\n        end: null\r\n      },\r\n      'Group Project': {\r\n        start: null,\r\n        end: null\r\n      },\r\n      'Final Project': {\r\n        start: null,\r\n        end: null\r\n      }\r\n    };\r\n    for (const event of associate) {\r\n      if (event['Interaction Type'] === 'Module Completed') {\r\n        person[event.Interaction].end = event.Date;\r\n      } else if (event['Interaction Type'] === 'Module Started') {\r\n        person[event.Interaction].start = event.Date;\r\n      } else if (event['Interaction Type'] === 'Associate Start') {\r\n        person[event['Interaction Type']] = event.Date;\r\n      } else if (RegExp('Cycle Exit').test(event['Interaction Type'])) {\r\n        person['Cycle Exit'] = event.Date;\r\n      }\r\n    }\r\n    metadata[associate[0].Person] = person;\r\n  }\r\n  return metadata;\r\n}\r\n\r\nexport const getCycleMetadata = data => {\r\n  const metadata = {};\r\n  data.forEach(event => {\r\n    // check for interaction type\r\n    if (Metadata.cycleMetadate.includes(event['Interaction Type']) || RegExp('Cycle Exit').test(event['Interaction Type'])) {\r\n      // because our data entry is wonky\r\n      let field;\r\n      if (event.Interaction === '') {\r\n        field = event['Interaction Type'];\r\n      } else if (RegExp('Cycle Exit').test(event['Interaction Type'])) {\r\n        field = 'Associate Leave';\r\n      } else {\r\n        field = event.Interaction\r\n      }\r\n      // if not already a field, create one\r\n      if (!metadata[field]) {\r\n        // staff change need name and date\r\n        if (field !== 'Cycle Start Date' && field !== 'Cycle End Date') {\r\n          metadata[field] = [{ name: event.Person, date: event.Date }];\r\n        } else {\r\n          metadata[field] = [event.Date];\r\n        }\r\n        // otherwise, add to list\r\n      } else {\r\n        if (field !== 'Cycle Start Date' && field !== 'Cycle End Date') {\r\n          metadata[field].push({ name: event.Person, date: event.Date });\r\n        } else {\r\n          metadata[field].push(event.Date);\r\n        }\r\n      }\r\n    }\r\n  });\r\n  return metadata;\r\n}\r\n\r\nexport const formatPercentile = percentile => {\r\n  if (percentile % 10 === 1) {\r\n    return percentile + 'st';\r\n  } else if (percentile % 10 === 2) {\r\n    return percentile + 'nd';\r\n  } else if (percentile % 10 === 3) {\r\n    return percentile + 'rd';\r\n  } else {\r\n    return percentile + 'th';\r\n  }\r\n}\r\n\r\nexport const getUrlParams = urlHistory => {\r\n  const url = urlHistory.location.pathname.split('/');\r\n  // get associate name from url and format to use ' ' instead of '-'\r\n  const associate = url[url.length - 1].split('-').join(' ');\r\n  // get cycle name\r\n  const cycle = url[2];\r\n\r\n  return { url, cycle, associate };\r\n}","import { put, all, takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { FETCH_ALL_CYCLES_METRICS, FETCH_CYCLE_METRICS, POST_CYCLE_METRICS } from \"../actionTypes\";\r\nimport { fetchAllCyclesMetricsSuccess, fetchCycleMetricsSuccess, fetchCycleMetricsFail, postCycleMetricsSuccess, postCycleMetricsFail } from \"../actions\";\r\nimport { calcAllCyclesPercentiles, calcAssociateAggr, calcCycleAggr, getCycleMetadata, sortMetircsByAssociate, getAssociateMetadata } from '../../shared/dataService';\r\n\r\nexport default function* watchCycle() {\r\n  yield all([\r\n    takeEvery(FETCH_ALL_CYCLES_METRICS, fetchAllCyclesMetrics),\r\n    takeEvery(FETCH_CYCLE_METRICS, fetchCycleMetrics),\r\n    takeEvery(POST_CYCLE_METRICS, postCycleMetrics)\r\n  ])\r\n}\r\n\r\nfunction* fetchAllCyclesMetrics() {\r\n  try {\r\n    const res = yield axios.get('/api');\r\n    const { cycles, data } = res.data;\r\n    yield put(fetchAllCyclesMetricsSuccess(...formatAllCycleData(data, cycles)));\r\n  } catch (err) {\r\n    yield put(fetchCycleMetricsFail(err));\r\n  }\r\n}\r\n\r\nfunction* fetchCycleMetrics({ cycleName }) {\r\n  try {\r\n    const res = yield axios.get('/api/' + cycleName);\r\n    yield put(fetchCycleMetricsSuccess(...formatCycleData(res.data, cycleName)));\r\n  } catch (err) {\r\n    yield put(fetchCycleMetricsFail(err));\r\n  }\r\n}\r\n\r\nfunction* postCycleMetrics({ formData, cycleName, history }) {\r\n  try {\r\n    const res = yield axios.post('/api/' + cycleName, formData);\r\n    yield put(postCycleMetricsSuccess(...formatCycleData(res.data, cycleName)));\r\n    history.push('/cycle')\r\n  } catch (err) {\r\n    yield put(postCycleMetricsFail(err));\r\n  }\r\n}\r\n\r\nconst formatCycleData = (data, cycleName) => {\r\n  // sort by associate\r\n  const sortedMetrics = sortMetircsByAssociate(data);\r\n  // collect associate module metadata\r\n  const associateMetadata = getAssociateMetadata(sortedMetrics);\r\n  // calculate avg for projects, quizzes, soft skills\r\n  const associateAggr = calcAssociateAggr(sortedMetrics);\r\n  // calculate avgs for whole cycle\r\n  const cycleAggr = calcCycleAggr(associateAggr);\r\n  // combine into one object\r\n  associateAggr[cycleName] = cycleAggr;\r\n  // collect cycle metadata\r\n  const metadata = getCycleMetadata(data);\r\n\r\n  return [associateAggr, metadata, associateMetadata, sortedMetrics, cycleName];\r\n}\r\n\r\nconst formatAllCycleData = (data, cycles) => {\r\n  const associateMetadata = {};\r\n  const cycleAggr = {};\r\n  const cycleMetadata = {};\r\n  const cycleMetrics = {};\r\n  // for each cycle, collect data\r\n  for (let i = 0; i < data.length; i++) {\r\n    let [associateAggr, metadata, associateMeta, sortedMetrics, cycleName] = formatCycleData(data[i], cycles[i]);\r\n\r\n    for (let [key, value] of Object.entries(associateMeta)) {\r\n      associateMetadata[key] = value;\r\n    }\r\n    cycleAggr[cycleName] = associateAggr;\r\n    cycleMetadata[cycleName] = metadata;\r\n    cycleMetrics[cycleName] = sortedMetrics;\r\n  }\r\n  // all cycle aggregations\r\n  const allCycleAggr = calcAllCyclesPercentiles(cycleAggr);\r\n\r\n  return [cycleAggr, cycleMetadata, associateMetadata, cycleMetrics, allCycleAggr];\r\n}","import { all } from 'redux-saga/effects';\r\nimport cyclesSagas from './cyclesSagas';\r\n\r\nexport default function* rootSage() {\r\n  yield all([\r\n    cyclesSagas()\r\n  ]);\r\n}\r\n\r\n","import React from 'react';\r\nimport { Divider, Paper, Typography } from '@material-ui/core';\r\nimport styles from './AssociateInfo.module.css';\r\nimport { calcDaysSince } from '../../shared/dataService';\r\nimport CONSTS from '../../shared/constants';\r\n\r\nconst AssociateInfo = (props) => {\r\n  const { Date: startDate, Person } = props.associate.find(item => item['Interaction Type'] === 'Associate Start');\r\n  const exitRegex = RegExp('Cycle Exit');\r\n  const endDate = props.associate.find(item => exitRegex.test(item['Interaction Type']));\r\n\r\n  return (\r\n    !props.bodyOnly ? <Paper className={styles.Paper}>\r\n      <div className={styles.Header}>\r\n        <Typography variant='h3'>\r\n          {Person}\r\n        </Typography>\r\n        <Typography variant='h6' color='textSecondary'>\r\n          {CONSTS[props.cycle]}\r\n        </Typography>\r\n      </div>\r\n\r\n      <div className={styles.Divider}>\r\n        <Divider />\r\n      </div>\r\n\r\n      <div className={styles.Body}>\r\n        <div>\r\n          <Typography variant='body2'>\r\n            <strong>Start Date:</strong> {startDate}\r\n          </Typography>\r\n          {endDate ?\r\n            <>\r\n              <Typography variant='body2'>\r\n                <strong>End Date: </strong>{endDate.Date}\r\n              </Typography>\r\n            </>\r\n            : null}\r\n        </div>\r\n\r\n        <div>\r\n          <Typography variant='body2'>\r\n            <strong>Days in Cycle:</strong> {endDate ? calcDaysSince(startDate, endDate.Date) : calcDaysSince(startDate)}\r\n          </Typography>\r\n          {endDate ?\r\n            <Typography variant=\"button\" display=\"block\">\r\n              {endDate['Interaction Type']}\r\n            </Typography> : null}\r\n        </div>\r\n      </div>\r\n    </Paper >\r\n      : <div className={styles.BodyOnly}>\r\n        <div>\r\n          <Typography variant='body2'>\r\n            <strong>Start Date:</strong> {startDate}\r\n          </Typography>\r\n          {endDate ?\r\n            <>\r\n              <Typography variant='body2'>\r\n                <strong>End Date: </strong>{endDate.Date}\r\n              </Typography>\r\n            </>\r\n            : null}\r\n        </div>\r\n\r\n        <div>\r\n          <Typography variant='body2'>\r\n            <strong>Days in Cycle:</strong> {endDate ? calcDaysSince(startDate, endDate.Date) : calcDaysSince(startDate)}\r\n          </Typography>\r\n          {endDate ?\r\n            <Typography variant=\"button\" display=\"block\">\r\n              {endDate['Interaction Type']}\r\n            </Typography> : null}\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default AssociateInfo;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumbs, Paper, Typography } from '@material-ui/core';\r\nimport CONSTS from '../../shared/constants';\r\nimport styles from './Breadcrumbs.module.css';\r\n\r\nconst breadcrumbs = props => {\r\n  const { path } = props;\r\n\r\n  return (\r\n    <Paper className={path.length === 5 ? styles.BreadcrumbsLong : styles.BreadcrumbsShort}>\r\n      {path.length === 5 ?\r\n        <Breadcrumbs separator='›' aria-label='Breadcrumb'>\r\n          <Link to='/cycle' className={styles.Link}>\r\n            Cycles\r\n          </Link>\r\n          <Link to={'/cycle/' + path[2]} className={styles.Link}>\r\n            {CONSTS[path[2]]}\r\n          </Link>\r\n          <Typography color='textPrimary'>{path[4]}</Typography>\r\n        </Breadcrumbs>\r\n        : <Breadcrumbs separator='›' aria-label='Breadcrumb'>\r\n          <Link to='/cycle' className={styles.Link}>\r\n            Cycles\r\n            </Link>\r\n          <Typography color='textPrimary'>{CONSTS[path[2]]}</Typography>\r\n        </Breadcrumbs>}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default breadcrumbs;","import React from 'react';\r\nimport CONSTS from '../../shared/constants';\r\nimport styles from './Legend.module.css';\r\n\r\nconst Legend = props => {\r\n  const { items, colors } = props;\r\n\r\n  return (\r\n    <div className={styles.Legend}>\r\n      {items.map((item, index) => (\r\n        <div key={index} className={styles.Legend}>\r\n          <div style={{ background: CONSTS[colors][index], height: '15px', width: '15px', margin: '0 4px' }}></div>\r\n          <p className={styles.Label}>{item.split(' ').splice(0, 2).join(' ')}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Legend;","import React from 'react';\r\nimport { ResponsiveCalendar } from '@nivo/calendar';\r\nimport { Divider, Paper, Typography } from '@material-ui/core';\r\nimport Legend from '../legend/Legend';\r\nimport { sortAttendanceEvents } from '../../shared/dataService';\r\nimport CONSTS from '../../shared/constants';\r\nimport styles from './Calendar.module.css';\r\n\r\nconst Calendar = props => {\r\n  const attendance = sortAttendanceEvents(props.metrics);\r\n\r\n  return (\r\n    <Paper className={styles.Paper}>\r\n      <div className={styles.Header}>\r\n        <Typography variant='h4'>\r\n          Attendance\r\n        </Typography>\r\n        {true ? <Typography variant='subtitle1' color='textSecondary'>\r\n          Absences & Late Arrivals\r\n        </Typography> : null}\r\n      </div>\r\n\r\n      <div className={styles.Divider}>\r\n        <Divider />\r\n      </div>\r\n\r\n      <div className={styles.Graph}>\r\n        <ResponsiveCalendar\r\n          data={attendance.events}\r\n          from={attendance['Associate Start']}\r\n          to={attendance['Cycle Exit']}\r\n          emptyColor=\"#eeeeee\"\r\n          colors={CONSTS.attendanceColors}\r\n          margin={{ top: 40, right: 40, bottom: 40, left: 40 }}\r\n          yearSpacing={40}\r\n          monthBorderColor=\"#0c0314\"\r\n          dayBorderWidth={2}\r\n          dayBorderColor=\"#ffffff\"\r\n          minValue={0}\r\n          maxValue={4}\r\n          tooltip={({ day, value }) => (\r\n            <strong>\r\n              {day}: {CONSTS.attendance[value]}\r\n            </strong>\r\n          )}\r\n        />\r\n      </div>\r\n      <Legend items={CONSTS.attendance} colors={'attendanceColors'} />\r\n    </Paper >\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import React from 'react';\r\nimport { Divider, Paper, Typography } from '@material-ui/core';\r\nimport { ResponsiveRadar } from '@nivo/radar'\r\nimport styles from './RadarGraph.module.css';\r\n\r\nconst RadarGraph = props => {\r\n  const { data, index, keys, tall, title, subtitle } = props;\r\n\r\n  return (\r\n    <Paper className={styles.Paper}>\r\n      <div className={styles.Header}>\r\n        <Typography variant='h4'>\r\n          {title}\r\n        </Typography>\r\n        {subtitle ? <Typography variant='subtitle1' color='textSecondary'>\r\n          {subtitle}\r\n        </Typography> : null}\r\n      </div>\r\n\r\n      <div className={styles.Divider}>\r\n        <Divider />\r\n      </div>\r\n\r\n      <div className={tall ? styles.TallGraph : styles.Graph}>\r\n        <ResponsiveRadar\r\n          data={data}\r\n          keys={keys}\r\n          indexBy={index}\r\n          maxValue={100}\r\n          margin={{ top: 35, right: 20, bottom: 35, left: 20 }}\r\n          curve='catmullRomClosed'\r\n          borderWidth={2}\r\n          borderColor={{ from: 'color' }}\r\n          gridLevels={3}\r\n          gridShape='circular'\r\n          gridLabelOffset={20}\r\n          enableDots={true}\r\n          dotSize={10}\r\n          dotColor={{ theme: 'background' }}\r\n          dotBorderWidth={3}\r\n          dotBorderColor={{ from: 'color' }}\r\n          enableDotLabel={false}\r\n          dotLabel='value'\r\n          dotLabelYOffset={-12}\r\n          colors={{ scheme: 'category10' }}\r\n          fillOpacity={0.1}\r\n          blendMode='multiply'\r\n          legends={[\r\n            {\r\n              anchor: 'top-left',\r\n              direction: 'column',\r\n              translateX: 120,\r\n              translateY: 0,\r\n              itemWidth: 60,\r\n              itemHeight: 20,\r\n              itemTextColor: '#555',\r\n              symbolSize: 12,\r\n              symbolShape: 'circle',\r\n              effects: [\r\n                {\r\n                  on: 'hover',\r\n                  style: {\r\n                    itemTextColor: '#000'\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          ]}\r\n        />\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default RadarGraph;","import React from 'react';\r\nimport { Grid, Switch, Typography } from '@material-ui/core';\r\nimport styles from './Toggle.module.css';\r\n\r\nconst Toggle = props => {\r\n  const { checked, onChange, leftLabel, rightLabel } = props;\r\n\r\n  return (\r\n    <div className={styles.Switch}>\r\n      <Typography component=\"div\">\r\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n          <Grid item>{leftLabel}</Grid>\r\n          <Grid item>\r\n            <Switch\r\n              color='primary'\r\n              checked={checked}\r\n              onChange={onChange}\r\n              value=\"checkedC\"\r\n            />\r\n          </Grid>\r\n          <Grid item>{rightLabel}</Grid>\r\n        </Grid>\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Toggle;","import React, { Component } from 'react';\r\nimport { Divider, Paper, Typography } from '@material-ui/core';\r\nimport { ResponsiveBullet } from '@nivo/bullet'\r\nimport Legend from '../legend/Legend';\r\nimport Toggle from '../toggle/Toggle';\r\nimport { calcDateMarkers, calcDaysSince, calcModuleLength } from '../../shared/dataService';\r\nimport Metadata from '../../shared/metadata';\r\nimport styles from './BulletGraph.module.css';\r\n\r\nclass BulletGraph extends Component {\r\n  state = {\r\n    showModules: false\r\n  };\r\n\r\n  createMLCycleGraphs(showModules, metadata) {\r\n    const modules = calcModuleLength(metadata);\r\n\r\n    if (showModules) {\r\n      return (\r\n        <div className={styles.Graph}>\r\n          <ResponsiveBullet\r\n            data={[\r\n              {\r\n                id: 'Basics',\r\n                ranges: [42, 98],\r\n                measures: [modules.moduleLengths[0]],\r\n                markers: []\r\n              },\r\n              {\r\n                id: 'Databases',\r\n                ranges: [28, 98],\r\n                measures: [modules.moduleLengths[1]],\r\n                markers: []\r\n              },\r\n              {\r\n                id: 'Java',\r\n                ranges: [70, 98],\r\n                measures: [modules.moduleLengths[2]],\r\n                markers: []\r\n              },\r\n              {\r\n                id: 'React',\r\n                ranges: [56, 98],\r\n                measures: [modules.moduleLengths[3]],\r\n                markers: []\r\n              }\r\n            ]}\r\n            margin={{ top: 50, right: 90, bottom: 50, left: 90 }}\r\n            spacing={46}\r\n            titleAlign='start'\r\n            titleOffsetX={-70}\r\n            measureSize={0.4}\r\n            rangeColors={['#a50026', '#ffffff']}\r\n            measureColors='#e6e6e6'\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className={styles.Graph2}>\r\n          <ResponsiveBullet\r\n            data={[\r\n              {\r\n                id: 'Associate',\r\n                ranges: modules.ranges,\r\n                measures: [],\r\n                markers: [...calcDateMarkers(metadata), 238]\r\n              },\r\n              {\r\n                id: 'Max Time',\r\n                ranges: [42, 70, 140, 196, 224, 238],\r\n                measures: [],\r\n                markers: []\r\n              }\r\n            ]}\r\n            margin={{ top: 50, right: 90, bottom: 50, left: 90 }}\r\n            spacing={46}\r\n            titleAlign='start'\r\n            titleOffsetX={-70}\r\n            measureSize={0.4}\r\n            rangeColors='red_yellow_blue'\r\n            measureColors='#e6e6e6'\r\n            markerColors='black'\r\n            markerSize={1}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  createTradCycleGraph(metadata) {\r\n    let daysSinceStart = 0;\r\n    if (metadata['Cycle Exit']) {\r\n      daysSinceStart = Math.round(calcDaysSince(metadata['Associate Start'], metadata['Cycle Exit']));\r\n    } else {\r\n      daysSinceStart = Math.round(calcDaysSince(metadata['Associate Start']));\r\n    }\r\n\r\n    return (\r\n      <div className={styles.Graph3}>\r\n        <ResponsiveBullet\r\n          data={[\r\n            {\r\n              id: 'Associate',\r\n              ranges: [21, 28, 70, 105, 126, 140],\r\n              measures: [daysSinceStart],\r\n              markers: []\r\n            }\r\n          ]}\r\n          margin={{ top: 50, right: 90, bottom: 50, left: 90 }}\r\n          spacing={46}\r\n          titleAlign='start'\r\n          titleOffsetX={-70}\r\n          measureSize={0.4}\r\n          rangeColors='red_yellow_blue'\r\n          measureColors='#e6e6e6'\r\n          markerColors='black'\r\n          markerSize={1}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toggleHandler = () => {\r\n    this.setState(prevState => ({ showModules: !prevState.showModules }));\r\n  }\r\n\r\n  render() {\r\n    const { metadata, title, subtitle, traditional } = this.props;\r\n    const { showModules } = this.state;\r\n\r\n    return (\r\n      <Paper className={styles.Paper}>\r\n        <div className={styles.Header}>\r\n          <Typography variant='h4'>\r\n            {title}\r\n          </Typography>\r\n          {subtitle ? <Typography variant='subtitle1' color='textSecondary'>\r\n            {subtitle}\r\n          </Typography> : null}\r\n        </div>\r\n\r\n        <div className={styles.Divider}>\r\n          <Divider />\r\n        </div>\r\n\r\n        {!traditional ? <Toggle\r\n          checked={showModules}\r\n          onChange={this.toggleHandler}\r\n          leftLabel='Overview'\r\n          rightLabel='Per Module'\r\n        /> : null}\r\n\r\n        {traditional ? this.createTradCycleGraph(metadata) : this.createMLCycleGraphs(showModules, metadata)}\r\n\r\n        {showModules ? <Legend items={['Max Time', 'Associate']} colors={'moduleLengthColors'} /> : <Legend items={Metadata.modules} colors={'moduleColors'} />}\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BulletGraph;","import React from 'react';\r\nimport styles from './Spinner.module.css';\r\n\r\nconst Spinner = props => {\r\n    return <div className={styles.loader}>Loading...</div>;\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCycleMetrics } from '../../redux/actions';\r\nimport MaterialTable from 'material-table';\r\nimport styles from './Associate.module.css';\r\nimport AssociateInfo from '../../components/associate-info/AssociateInfo';\r\nimport Breadcrumbs from '../../components/breadcrumbs/Breadcrumbs';\r\nimport Calendar from '../../components/calendar/Calendar';\r\nimport RadarGraph from '../../components/radar-graph/RadarGraph';\r\nimport { getUrlParams } from '../../shared/dataService';\r\nimport BulletGraph from '../../components/bullet-graph/BulletGraph';\r\nimport Spinner from '../../components/spinner/Spinner';\r\n\r\nclass Associate extends Component {\r\n  componentDidMount() {\r\n    const { cycle } = getUrlParams(this.props.history);\r\n    // only fetches if not already in memory\r\n    if (!Object.keys(this.props.cycleAggr).includes(cycle)) {\r\n      this.props.fetchCycle(cycle);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { associateMetadata, cycleAggr, cycleMetrics, history } = this.props;\r\n    const { url, cycle, associate } = getUrlParams(history);\r\n    const tradCycle = RegExp('trad').test(cycle);\r\n\r\n    return (\r\n      !this.props.loading && cycleMetrics[cycle] && cycleAggr[cycle] && associateMetadata[associate] ?\r\n        <div className={styles.Wrapper}>\r\n          <Breadcrumbs path={url} />\r\n\r\n          <AssociateInfo cycle={cycle} associate={cycleMetrics[cycle].find(row => row[0].Person === associate)} />\r\n\r\n          <RadarGraph\r\n            title='Running Avg of Assesments'\r\n            subtitle='Compared to Cycle Averages'\r\n            keys={[associate, 'Cycle Average']}\r\n            index='avg'\r\n            data={[\r\n              {\r\n                avg: 'Projects',\r\n                [associate]: cycleAggr[cycle][associate].projectAvg,\r\n                'Cycle Average': cycleAggr[cycle][cycle].projectAvg\r\n              },\r\n              {\r\n                avg: 'Quizzes',\r\n                [associate]: cycleAggr[cycle][associate].quizAvg,\r\n                'Cycle Average': cycleAggr[cycle][cycle].quizAvg,\r\n\r\n              },\r\n              {\r\n                avg: 'Soft Skills',\r\n                [associate]: cycleAggr[cycle][associate].softSkillsAvg,\r\n                'Cycle Average': cycleAggr[cycle][cycle].softSkillsAvg,\r\n              },\r\n              {\r\n                avg: 'Attempt/Pass',\r\n                [associate]: cycleAggr[cycle][associate].attemptPass,\r\n                'Cycle Average': cycleAggr[cycle][cycle].attemptAvg\r\n              }\r\n            ]}\r\n          />\r\n\r\n          <BulletGraph\r\n            title='Cycle Progress'\r\n            subtitle={tradCycle ? null : 'Overall & Per Module'}\r\n            metadata={associateMetadata[associate]}\r\n            traditional={tradCycle}\r\n          />\r\n\r\n          <Calendar metrics={cycleMetrics[cycle].find(row => row[0].Person === associate)} />\r\n\r\n          <div className={styles.Paper}>\r\n            <MaterialTable\r\n              title=\"Associate Metrics\"\r\n              columns={[\r\n                { title: 'Interaction', field: 'Interaction' },\r\n                { title: 'Interaction Type', field: 'Interaction Type' },\r\n                { title: 'Score', field: 'Score' },\r\n                { title: 'Date', field: 'Date', type: 'date' }\r\n              ]}\r\n              data={cycleMetrics[cycle].find(row => row[0].Person === associate)}\r\n              options={{\r\n                sorting: true\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        : <Spinner />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  associateMetadata: state.cycles.associateMetadata,\r\n  cycleAggr: state.cycles.cycleAggr,\r\n  cycleMetrics: state.cycles.cycleMetrics,\r\n  loading: state.cycles.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCycle: (cycleName) => dispatch(fetchCycleMetrics(cycleName))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Associate);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchAllCyclesMetrics } from '../../redux/actions';\r\nimport MaterialTable from 'material-table';\r\nimport Spinner from '../../components/spinner/Spinner';\r\nimport AssociateInfo from '../../components/associate-info/AssociateInfo';\r\nimport { calcPercentiles, formatPercentile } from '../../shared/dataService';\r\nimport styles from './Associates.module.css';\r\n\r\nclass Associates extends Component {\r\n  componentDidMount() {\r\n    if (!Object.keys(this.props.allCycleAggr).length) {\r\n      this.props.fetchAllCycles();\r\n    }\r\n  }\r\n\r\n  createTableData(cycleAggr, allCycleAggr) {\r\n    const associateScores = [];\r\n    for (const cycle in cycleAggr) {\r\n      associateScores.push(...Object.entries(cycleAggr[cycle]).map(([name, values]) => ({\r\n        name,\r\n        projectAvg: `${values.projectAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.projectScores, values.projectAvg))}`,\r\n        quizAvg: `${values.quizAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.quizScores, values.quizAvg))}`,\r\n        softSkillsAvg: `${values.softSkillsAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.softSkillsScores, values.softSkillsAvg))}`,\r\n        attemptPass: values.attemptPass + '%'\r\n      })))\r\n    }\r\n    return associateScores;\r\n  }\r\n\r\n  render() {\r\n    const { allCycleAggr, cycleAggr, cycleMetrics, loading } = this.props;\r\n    let table = <Spinner />;\r\n\r\n    if (!loading && Object.keys(cycleAggr).length && Object.keys(cycleMetrics).length && Object.keys(allCycleAggr).length) {\r\n      table = (\r\n        <div className={styles.Paper}>\r\n          <MaterialTable\r\n            title=\"Associate Assessment Average & Percentile\"\r\n            columns={[\r\n              { title: 'Associate', field: 'name' },\r\n              { title: 'Projects', field: 'projectAvg' },\r\n              { title: 'Quizzes', field: 'quizAvg' },\r\n              { title: 'Soft Skills', field: 'softSkillsAvg' },\r\n              { title: 'Attempt/Pass', field: 'attemptPass' }\r\n            ]}\r\n            data={this.createTableData(cycleAggr, allCycleAggr)}\r\n            options={{\r\n              sorting: true\r\n            }}\r\n            detailPanel={[\r\n              {\r\n                tooltip: 'Show Name',\r\n                render: rowData => {\r\n                  let cycleName = 'mlPortland2019';\r\n                  for (const cycle in cycleAggr) {\r\n                    if (cycleAggr[cycle][rowData.name]) {\r\n                      cycleName = cycle;\r\n                    }\r\n                  }\r\n                  return <AssociateInfo bodyOnly cycle={cycleName} associate={cycleMetrics[cycleName].find(row => row[0].Person === rowData.name)} />;\r\n                },\r\n              }\r\n            ]}\r\n            actions={[\r\n              {\r\n                icon: 'search',\r\n                tooltip: 'View Associate',\r\n                onClick: (event, rowData) => {\r\n                  let cycleName = 'mlPortland2019';\r\n                  for (const cycle in cycleAggr) {\r\n                    if (cycleAggr[cycle][rowData.name]) {\r\n                      cycleName = cycle;\r\n                    }\r\n                  }\r\n                  this.props.history.push(`/cycle/${cycleName}/associate/${rowData.name.split(' ').join('-')}`)\r\n                }\r\n              }\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return table;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  allCycleAggr: state.cycles.allCycleAggr,\r\n  cycleAggr: state.cycles.cycleAggr,\r\n  cycleMetrics: state.cycles.cycleMetrics,\r\n  loading: state.cycles.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchAllCycles: () => dispatch(fetchAllCyclesMetrics())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Associates);","import React from 'react';\r\nimport { Divider, Paper, Typography } from '@material-ui/core';\r\nimport styles from './CycleInfo.module.css';\r\n\r\nconst CycleInfo = props => {\r\n  const { bodyOnly, cycleName, metadata } = props;\r\n\r\n  const nameSplit = cycleName.split(' ');\r\n  const cycleType = nameSplit.splice(0, 2).join(' ');\r\n  const formattedName = nameSplit.splice(-3, 3).join(' ');\r\n  const trainers = metadata['Trainer Start'].reduce((acc, curr) => (acc + curr.name + ' | '), '').slice(0, -2);\r\n  const TAs = metadata['TA Start'].reduce((acc, curr) => (acc + curr.name + ' | '), '').slice(0, -2);\r\n  const startDates = metadata['Cycle Start Date'].join(' | ');\r\n  const endDate = metadata['Cycle End Date'];\r\n  const currentNumAssociates = metadata['Associate Leave'] ?\r\n    metadata['Associate Start'].length - metadata['Associate Leave'].length\r\n    : metadata['Associate Start'].length;\r\n\r\n  return (\r\n    !bodyOnly ? <Paper className={styles.Paper}>\r\n      <div className={styles.Header}>\r\n        <Typography variant='h3'>\r\n          {formattedName}\r\n        </Typography>\r\n\r\n        <Typography variant='h6' color='textSecondary'>\r\n          {cycleType}\r\n        </Typography>\r\n      </div>\r\n\r\n      <div className={styles.Divider}>\r\n        <Divider />\r\n      </div>\r\n\r\n      <div className={styles.Body}>\r\n        <div>\r\n          <Typography variant='body2'>\r\n            <strong>Trainer(s): </strong>{trainers}\r\n          </Typography>\r\n\r\n          <Typography variant='body2'>\r\n            <strong>TA(s): </strong>{TAs}\r\n          </Typography>\r\n\r\n          <Typography variant='body2'>\r\n            <strong>Total # Associates: </strong>{metadata['Associate Start'].length}\r\n          </Typography>\r\n        </div>\r\n\r\n        <div>\r\n          <Typography variant='body2'>\r\n            <strong>Start Date(s): </strong>{startDates}\r\n          </Typography>\r\n\r\n          <Typography variant='body2'>\r\n            <strong>End Date: </strong>{endDate}\r\n          </Typography>\r\n\r\n          <Typography variant='body2'>\r\n            <strong>Current # Associates: </strong>{currentNumAssociates}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n      : <div className={styles.BodyOnly}>\r\n        <div>\r\n          <Typography variant='body2'>\r\n            <strong>Trainer(s): </strong>{trainers}\r\n          </Typography>\r\n\r\n          <Typography variant='body2'>\r\n            <strong>TA(s): </strong>{TAs}\r\n          </Typography>\r\n\r\n          <Typography variant='body2'>\r\n            <strong>Total # Associates: </strong>{metadata['Associate Start'].length}\r\n          </Typography>\r\n        </div>\r\n\r\n        <div>\r\n          <Typography variant='body2'>\r\n            <strong>Start Date(s): </strong>{startDates}\r\n          </Typography>\r\n\r\n          <Typography variant='body2'>\r\n            <strong>End Date: </strong>{endDate}\r\n          </Typography>\r\n\r\n          <Typography variant='body2'>\r\n            <strong>Current # Associates: </strong>{currentNumAssociates}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default CycleInfo;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCycleMetrics } from '../../redux/actions';\r\nimport MaterialTable from 'material-table';\r\nimport Breadcrumbs from '../../components/breadcrumbs/Breadcrumbs';\r\nimport CycleInfo from '../../components/cycle-info/CycleInfo';\r\nimport RadarGraph from '../../components/radar-graph/RadarGraph';\r\nimport Spinner from '../../components/spinner/Spinner';\r\nimport AssociateInfo from '../../components/associate-info/AssociateInfo';\r\nimport { getUrlParams, calcPercentiles, formatPercentile } from '../../shared/dataService';\r\nimport CONSTS from '../../shared/constants';\r\nimport styles from './Cycle.module.css';\r\n\r\nclass Cycle extends Component {\r\n  componentDidMount() {\r\n    const { cycle } = getUrlParams(this.props.history);\r\n    // only fetches if not already in memory\r\n    if (!Object.keys(this.props.cycleAggr).includes(cycle)) {\r\n      this.props.fetchCycle(cycle);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { allCycleAggr, cycleAggr, cycleMetadata, cycleMetrics, history } = this.props;\r\n    const { url, cycle } = getUrlParams(history);\r\n\r\n    return (\r\n      !this.props.loading && cycleAggr[cycle] && cycleMetadata[cycle] && cycleMetrics[cycle] && Object.keys(allCycleAggr).length ?\r\n        <div className={styles.Wrapper}>\r\n          <Breadcrumbs path={url} />\r\n\r\n          <CycleInfo cycleName={CONSTS[cycle]} metadata={cycleMetadata[cycle]} />\r\n\r\n          <RadarGraph\r\n            title='Running Averages of Assessments'\r\n            subtitle='Including the Max and Min Associate Running Average'\r\n            index='avg'\r\n            data={[\r\n              {\r\n                avg: 'Projects',\r\n                'Max': cycleAggr[cycle][cycle].projectMax,\r\n                'Min': cycleAggr[cycle][cycle].projectMin,\r\n                'Average': cycleAggr[cycle][cycle].projectAvg\r\n              },\r\n              {\r\n                avg: 'Quizzes',\r\n                'Max': cycleAggr[cycle][cycle].quizMax,\r\n                'Min': cycleAggr[cycle][cycle].quizMin,\r\n                'Average': cycleAggr[cycle][cycle].quizAvg\r\n              },\r\n              {\r\n                avg: 'Soft Skills',\r\n                'Max': cycleAggr[cycle][cycle].softSkillsMax,\r\n                'Min': cycleAggr[cycle][cycle].softSkillsMin,\r\n                'Average': cycleAggr[cycle][cycle].softSkillsAvg\r\n              },\r\n              {\r\n                avg: 'Attempt/Pass',\r\n                'Max': cycleAggr[cycle][cycle].attemptMax,\r\n                'Min': cycleAggr[cycle][cycle].attemptMin,\r\n                'Average': cycleAggr[cycle][cycle].attemptAvg\r\n              }\r\n            ]}\r\n            keys={['Average', 'Max', 'Min']}\r\n          />\r\n\r\n          <div className={styles.Paper}>\r\n            <MaterialTable\r\n              title=\"Associate Assessment Average & Percentile\"\r\n              columns={[\r\n                { title: 'Associate', field: 'name' },\r\n                { title: 'Projects', field: 'projectAvg' },\r\n                { title: 'Quizzes', field: 'quizAvg' },\r\n                { title: 'Soft Skills', field: 'softSkillsAvg' },\r\n                { title: 'Attempt/Pass', field: 'attemptPass' }\r\n              ]}\r\n              data={\r\n                Object.entries(cycleAggr[cycle]).map(([name, values]) => ({\r\n                  name,\r\n                  projectAvg: `${values.projectAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.projectScores, values.projectAvg))}`,\r\n                  quizAvg: `${values.quizAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.quizScores, values.quizAvg))}`,\r\n                  softSkillsAvg: `${values.softSkillsAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.softSkillsScores, values.softSkillsAvg))}`,\r\n                  attemptPass: values.attemptPass + '%'\r\n                }))\r\n              }\r\n              options={{\r\n                sorting: true\r\n              }}\r\n              detailPanel={[\r\n                {\r\n                  tooltip: 'Show Name',\r\n                  render: rowData => {\r\n                    return <AssociateInfo bodyOnly cycle={cycle} associate={cycleMetrics[cycle].find(row => row[0].Person === rowData.name)} />;\r\n                  },\r\n                }\r\n              ]}\r\n              actions={[\r\n                {\r\n                  icon: 'search',\r\n                  tooltip: 'View Associate',\r\n                  onClick: (event, rowData) => {\r\n                    if (rowData.name !== cycle) {\r\n                      this.props.history.push(`/cycle/${cycle}/associate/${rowData.name.split(' ').join('-')}`)\r\n                    }\r\n                  }\r\n                }\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n        : <Spinner />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  allCycleAggr: state.cycles.allCycleAggr,\r\n  cycleAggr: state.cycles.cycleAggr,\r\n  cycleMetadata: state.cycles.cycleMetadata,\r\n  cycleMetrics: state.cycles.cycleMetrics,\r\n  loading: state.cycles.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCycle: (cycleName) => dispatch(fetchCycleMetrics(cycleName))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cycle);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\nimport styles from './Cycles.module.css';\r\nimport { fetchAllCyclesMetrics } from '../../redux/actions';\r\nimport { calcPercentiles, formatPercentile } from '../../shared/dataService';\r\nimport CONSTS from '../../shared/constants';\r\nimport CycleInfo from '../../components/cycle-info/CycleInfo';\r\nimport Spinner from '../../components/spinner/Spinner';\r\n\r\nclass Cycles extends Component {\r\n  componentDidMount() {\r\n    if (!Object.keys(this.props.allCycleAggr).length) {\r\n      this.props.fetchAllCycles();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { allCycleAggr, cycleAggr, cycleMetadata, loading } = this.props;\r\n\r\n    return (\r\n      !loading ? <div className={styles.Paper}>\r\n        <MaterialTable\r\n          title=\"Cycle Assessment Average & Percentile\"\r\n          columns={[\r\n            { title: 'Cycle', field: 'name' },\r\n            { title: 'Projects', field: 'projectAvg' },\r\n            { title: 'Quizzes', field: 'quizAvg' },\r\n            { title: 'Soft Skills', field: 'softSkillsAvg' }\r\n          ]}\r\n          data={\r\n            Object.entries(cycleAggr).map(([name, values]) => ({\r\n              name: CONSTS[name],\r\n              projectAvg: `${values[name].projectAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.projectScores, values[name].projectAvg))}`,\r\n              quizAvg: `${values[name].quizAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.quizScores, values[name].quizAvg))}`,\r\n              softSkillsAvg: `${values[name].softSkillsAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.softSkillsScores, values[name].softSkillsAvg))}`\r\n            }))\r\n          }\r\n          options={{\r\n            sorting: true\r\n          }}\r\n          detailPanel={[\r\n            {\r\n              tooltip: 'Show Name',\r\n              render: rowData => {\r\n                return <CycleInfo bodyOnly cycleName={CONSTS[rowData.name]} metadata={cycleMetadata[CONSTS[rowData.name]]} />;\r\n              },\r\n            }\r\n          ]}\r\n          actions={[\r\n            {\r\n              icon: 'search',\r\n              tooltip: 'View Cycle',\r\n              onClick: (event, rowData) => {\r\n                this.props.history.push(`/cycle/${CONSTS[rowData.name]}`)\r\n              }\r\n            }\r\n          ]}\r\n        />\r\n      </div> : <Spinner />\r\n    )\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  allCycleAggr: state.cycles.allCycleAggr,\r\n  cycleAggr: state.cycles.cycleAggr,\r\n  cycleMetadata: state.cycles.cycleMetadata,\r\n  loading: state.cycles.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchAllCycles: () => dispatch(fetchAllCyclesMetrics())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cycles);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchAllCyclesMetrics } from '../../redux/actions';\r\nimport RadarGraph from '../../components/radar-graph/RadarGraph';\r\nimport Spinner from '../../components/spinner/Spinner';\r\n\r\nclass Overview extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchAllCycles();\r\n  }\r\n\r\n  render() {\r\n    const { allCycleAggr } = this.props;\r\n    let graph = <Spinner />;\r\n\r\n    if (Object.keys(allCycleAggr).length) {\r\n      graph = (<RadarGraph\r\n        title='All Cycles Assesments'\r\n        subtitle='For the 10th, 25th, 50th, 75th and 90th Percentile'\r\n        keys={['10th', '25th', '50th', '75th', '90th']}\r\n        index='index'\r\n        tall\r\n        data={[\r\n          {\r\n            index: 'Projects',\r\n            '10th': allCycleAggr.projectPercentiles[0],\r\n            '25th': allCycleAggr.projectPercentiles[1],\r\n            '50th': allCycleAggr.projectPercentiles[2],\r\n            '75th': allCycleAggr.projectPercentiles[3],\r\n            '90th': allCycleAggr.projectPercentiles[4]\r\n          },\r\n          {\r\n            index: 'Quizzes',\r\n            '10th': allCycleAggr.quizPercentiles[0],\r\n            '25th': allCycleAggr.quizPercentiles[1],\r\n            '50th': allCycleAggr.quizPercentiles[2],\r\n            '75th': allCycleAggr.quizPercentiles[3],\r\n            '90th': allCycleAggr.quizPercentiles[4]\r\n          },\r\n          {\r\n            index: 'Soft Skills',\r\n            '10th': allCycleAggr.softSkillsPercentiles[0],\r\n            '25th': allCycleAggr.softSkillsPercentiles[1],\r\n            '50th': allCycleAggr.softSkillsPercentiles[2],\r\n            '75th': allCycleAggr.softSkillsPercentiles[3],\r\n            '90th': allCycleAggr.softSkillsPercentiles[4]\r\n          }\r\n        ]}\r\n      />);\r\n    }\r\n\r\n    return graph;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  allCycleAggr: state.cycles.allCycleAggr\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchAllCycles: () => dispatch(fetchAllCyclesMetrics())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Overview);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './NavBar.module.css';\r\nimport { AppBar, Drawer, IconButton, List, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\r\nimport { ArrowUpward, Autorenew, Home, Menu, Person } from '@material-ui/icons';\r\n\r\nclass NavBar extends Component {\r\n  state = {\r\n    sideDrawerOpen: false\r\n  }\r\n\r\n  clickHandler = () => {\r\n    this.setState(prevState => ({ sideDrawerOpen: !prevState.sideDrawerOpen }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div style={{ display: 'flex' }}>\r\n          <AppBar position='static' style={{ flexDirection: 'row' }}>\r\n            <IconButton edge='start'\r\n              color='inherit'\r\n              aria-label='Menu'\r\n              style={{ margin: '0 16px' }}\r\n              onClick={this.clickHandler}>\r\n              <Menu />\r\n            </IconButton>\r\n            <Typography variant='h6' style={{ paddingTop: '8px' }}>Training Team DataViz</Typography>\r\n          </AppBar>\r\n        </div>\r\n\r\n        <Drawer open={this.state.sideDrawerOpen} onClose={this.clickHandler}>\r\n          <div\r\n            style={{ width: '250px' }}\r\n            role=\"presentation\"\r\n            onClick={this.clickHandler}\r\n            onKeyDown={this.clickHandler}\r\n          >\r\n            <List>\r\n              <Link to='/' className={styles.Link}>\r\n                <ListItem button>\r\n                  <ListItemIcon>\r\n                    <Home />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary='Overview' />\r\n                </ListItem>\r\n              </Link>\r\n\r\n              <Link to='/cycle' className={styles.Link}>\r\n                <ListItem button>\r\n                  <ListItemIcon>\r\n                    <Autorenew />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary='Cycles' />\r\n                </ListItem>\r\n              </Link>\r\n\r\n              <Link to='/associate' className={styles.Link}>\r\n                <ListItem button>\r\n                  <ListItemIcon>\r\n                    <Person />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary='Associates' />\r\n                </ListItem>\r\n              </Link>\r\n\r\n              <Link to='/upload' className={styles.Link}>\r\n                <ListItem button>\r\n                  <ListItemIcon>\r\n                    <ArrowUpward />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary='Upload' />\r\n                </ListItem>\r\n              </Link>\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { postCycleMetrics } from '../../redux/actions';\r\nimport { Button, Card, CardContent, CardActions, CardHeader, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport Spinner from '../spinner/Spinner';\r\nimport styles from './Upload.module.css';\r\nimport Metadata from '../../shared/metadata';\r\nimport CONSTS from '../../shared/constants';\r\n\r\nclass Upload extends Component {\r\n  state = {\r\n    selectedCycle: ''\r\n  }\r\n\r\n  uploadFileHandler = () => {\r\n    const formData = new FormData();\r\n    formData.append('file', this.uploadInput.files[0]);\r\n\r\n    this.props.postCycle(formData, this.state.selectedCycle, this.props.history);\r\n  }\r\n\r\n  selectHandler = evt => {\r\n    this.setState({ selectedCycle: evt.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { selectedCycle } = this.state;\r\n    const { error, loading } = this.props;\r\n\r\n    const cycleList = Metadata.cycles.map((cycle, index) => {\r\n      return <MenuItem key={index} value={cycle}>{CONSTS[cycle]}</MenuItem>\r\n    });\r\n\r\n    return !loading ?\r\n      <Card className={styles.Card}>\r\n        <CardHeader title='Upload a CSV File:' />\r\n        {error ? <p className={styles.Error}>{error}</p> : null}\r\n\r\n        <div className={styles.Container}>\r\n          <FormControl className={styles.Select}>\r\n            <InputLabel htmlFor='cycles'>Select Cycle</InputLabel>\r\n            <Select\r\n              value={selectedCycle}\r\n              onChange={this.selectHandler}\r\n              inputProps={{\r\n                id: 'cycles',\r\n              }}\r\n            >\r\n              {cycleList}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n\r\n        <CardContent>\r\n          <input accept='.csv'\r\n            ref={(ref) => { this.uploadInput = ref; }}\r\n            type='file' />\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={this.uploadFileHandler}\r\n            disabled={selectedCycle === ''}>\r\n            Upload\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      : <Spinner />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  error: state.cycles.error,\r\n  loading: state.cycles.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postCycle: (formData, cycleName, history) => dispatch(postCycleMetrics(formData, cycleName, history))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Upload);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { resetError } from './redux/actions';\r\nimport styles from './App.module.css';\r\nimport { Button, Modal } from '@material-ui/core';\r\nimport Associate from './containers/associate/Associate';\r\nimport Associates from './containers/associates/Associates';\r\nimport Cycle from './containers/cycle/Cycle';\r\nimport Cycles from './containers/cycles/Cycles';\r\nimport Overview from './containers/overview/Overview';\r\nimport NavBar from './components/nav-bar/NavBar';\r\nimport Upload from './components/upload/Upload';\r\n\r\nclass App extends Component {\r\n\r\n  toggleModal = () => {\r\n    this.props.resetError();\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <NavBar />\r\n        <main className={styles.Main}>\r\n          <Switch>\r\n            <Route path='/cycle' exact component={Cycles} />\r\n            <Route path='/cycle/:cycle' exact component={Cycle} />\r\n            <Route path='/associate' exact component={Associates} />\r\n            <Route path='/cycle/:cycle/associate/:associateName' exact component={Associate} />\r\n            <Route path='/upload' exact component={Upload} />\r\n            <Route path='/' component={Overview} />\r\n          </Switch>\r\n        </main>\r\n\r\n        {error ? <Modal\r\n          aria-labelledby='simple-modal-title'\r\n          aria-describedby='simple-modal-description'\r\n          open={!!error}\r\n          onClose={this.toggleModal}\r\n        >\r\n          <div className={styles.Modal}>\r\n            <h2 id='modal-title'>Oops, something went wrong!</h2>\r\n            <p id='simple-modal-description'>\r\n              {error.message}\r\n            </p>\r\n            <p id='simple-modal-description'>\r\n              {error.response.data}\r\n            </p>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={styles.Button}\r\n              onClick={this.toggleModal}>\r\n              Close\r\n            </Button>\r\n          </div>\r\n        </Modal> : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  error: state.cycles.error\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  resetError: () => dispatch(resetError())\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport configureStore from './redux/store';\r\nimport rootSaga from './redux/sagas/rootSaga'\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst store = configureStore();\r\n\r\nstore.runSagas(rootSaga);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nexport default function configureStore() {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  return {\r\n    ...createStore(rootReducer, applyMiddleware(sagaMiddleware)),\r\n    runSagas: sagaMiddleware.run\r\n  }\r\n}"],"sourceRoot":""}