{"version":3,"sources":["components/bullet-graph/BulletGraph.module.css","components/breadcrumbs/Breadcrumbs.module.css","components/radar-graph/RadarGraph.module.css","components/associate-info/AssociateInfo.module.css","components/calendar/Calendar.module.css","components/cycle-info/CycleInfo.module.css","components/NavBar/NavBar.module.css","components/upload/Upload.module.css","App.module.css","components/legend/Legend.module.css","containers/cycles/Cycles.module.css","containers/associate/Associate.module.css","containers/cycle/Cycle.module.css","components/toggle/Toggle.module.css","components/spinner/Spinner.module.css","redux/actionTypes.js","redux/reducers/cyclesReducer.js","redux/reducers/rootReducer.js","redux/actions.js","shared/metadata.js","shared/constants.js","shared/dataService.js","redux/sagas/cyclesSagas.js","redux/sagas/rootSaga.js","components/associate-info/AssociateInfo.js","components/breadcrumbs/Breadcrumbs.js","components/legend/Legend.js","components/calendar/Calendar.js","components/radar-graph/RadarGraph.js","components/toggle/Toggle.js","components/bullet-graph/BulletGraph.js","components/spinner/Spinner.js","containers/associate/Associate.js","components/cycle-info/CycleInfo.js","containers/cycle/Cycle.js","containers/cycles/Cycles.js","containers/overview/Overview.js","components/NavBar/NavBar.js","components/upload/Upload.js","App.js","index.js","redux/store.js"],"names":["module","exports","Divider","Graph","Graph2","Graph3","Header","Paper","BreadcrumbsLong","BreadcrumbsShort","Link","TallGraph","Body","Card","Container","Error","Select","Button","Main","Modal","Label","Legend","Wrapper","Switch","loader","load1","FETCH_ALL_CYCLES_METRICS","FETCH_CYCLE_METRICS","POST_CYCLE_METRICS","initialState","allCycleAggr","associateMetadata","cycleAggr","cycleMetadata","cycleMetrics","error","loading","newAssociateMetadata","state","action","_i","_Object$entries","Object","entries","length","_ref5","_ref2","slicedToArray","key","value","_i2","_Object$entries2","_ref6","_ref4","newCycleAggr","_i3","_Object$entries3","_ref9","_ref8","cycleName","newCycleMetadata","_i4","_Object$entries4","_ref12","_ref11","newCycleMetrics","_i5","_Object$entries5","_ref15","_ref14","combineReducers","cycles","arguments","undefined","type","objectSpread","fetchAllCyclesMetricsSuccess","fetchCycleMetrics","fetchCycleMetricsSuccess","fetchCycleMetricsFail","postCycleMetricsSuccess","postCycleMetricsFail","shared_metadata","attendance","Excused Absence","Unexcused Absence","Excused Late Arrival","Unexcused Late Arrival","Optional Attendance","Interaction Type","quiz","projectScore","softSkills","cycleMetadate","modules","Project (Score)","HTML_CSS_Page_Match_Project_v2","Max Score","Module","JavaScript_Form_Validation_Project_v2","MongoDB_Database_Project_v3","PostgreSQL_Database_Project_v3","Garden_Center_API_Project_v4","Catalyte_Pet_Emporium_API_Project_v2","Garden_Center_Front_End_Project_v2","Redux_Garden_Center_Front_End_Project_v2","E_Commerce_Group_Project_v1","Final_Health_Project_v3","Garden_Center_API_Project_v5","Quiz","Quiz_Introductory_v1","Quiz_HTML_and_CSS_v1","Quiz_JavaScript_v1","Quiz_Intro_to_Java_v1","Quiz_Relational_Databases_v1","Quiz_Document_Databases_v1","Quiz_Java_Unit_Testing_And_OOP_v1","Quiz_React_js_v1","Quiz_React_js_v2","Quiz_Redux_v1","Quiz_Redux_v2","Quiz_Spring_With_Java_v2","Quiz_Document_Databases_v2","Quiz_Relational_Databases_v2","Quiz_Intro_to_Java_v2","Quiz_Java_Unit_Testing_And_OOP_v2","Quiz_JavaScript_v2","Quiz_Introductory_v2","Soft Skill Assessment","Problem Solving","Self Awareness and Self Improvement","Project Execution","Professionalism","Communication","staff","constants","attendanceColors","mlPortland2019","moduleColors","moduleLengthColors","percentiles","tradChicagoApril2019","tradDenverJune2019","tradBostonJune2019","tradBaltimoreJuly2019","calcDaysSince","startDate","endDate","startDateSplit","split","startDateObj","Date","endDateSplit","cycleLength","Math","round","daysSinceStart","now","calcDateMarkers","metadata","Metadata","map","start","calcMetricAvg","associate","metric","maxScores","metrics","filter","event","metricAvg","reduce","acc","curr","Number","Score","Interaction","calcAttemptPassRatio","attempt","pass","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","calcPercentiles","scores","avg","index","indexOf","formatPercentile","percentile","getUrlParams","urlHistory","url","location","pathname","join","cycle","watchCycle","fetchAllCyclesMetrics","postCycleMetrics","regenerator_default","a","wrap","_context","prev","all","takeEvery","stop","_marked","res","_res$data","data","_context2","axios","get","sent","put","apply","toConsumableArray","formatAllCycleData","t0","_marked2","_ref","_res","_context3","formatCycleData","_marked3","formData","history","_res2","_context4","post","push","_marked4","sortedMetrics","associates","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","item","includes","Person","values","sortMetircsByAssociate","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","person","Development Basics and Front End","end","Databases","Logic Layer (Java)","Front End Frameworks (React)","Group Project","Final Project","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","RegExp","test","getAssociateMetadata","associateAggr","avgs","forEach","attemptPass","projectAvg","CONSTS","quizAvg","softSkillsAvg","calcAssociateAggr","attemptAvg","attemptMax","attemptMin","projectMax","projectMin","quizMax","quizMin","softSkillsMax","softSkillsMin","numAttempts","keys","numProjects","numQuizzes","numSoftSkills","calcCycleAggr","field","name","date","getCycleMetadata","i","_formatCycleData","_formatCycleData2","associateMeta","projectScores","quizScores","softSkillsScores","sort","b","projectPercentiles","perc","quizPercentiles","softSkillsPercentiles","calcAllCyclesPercentiles","rootSage","cyclesSagas","rootSaga_marked","AssociateInfo","props","_props$associate$find","find","exitRegex","react_default","createElement","className","styles","Typography","variant","color","Fragment","display","breadcrumbs","path","Breadcrumbs","separator","aria-label","react_router_dom","to","items","colors","style","background","height","width","margin","splice","Calendar","events","newDateFormat","dateSplit","formatCalendarDate","day","toISOString","sortAttendanceEvents","nivo_calendar_esm","from","emptyColor","top","right","bottom","left","yearSpacing","monthBorderColor","dayBorderWidth","dayBorderColor","minValue","maxValue","tooltip","legend_Legend","RadarGraph","tall","title","subtitle","nivo_radar_esm","indexBy","curve","borderWidth","borderColor","gridLevels","gridShape","gridLabelOffset","enableDots","dotSize","dotColor","theme","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabel","dotLabelYOffset","scheme","fillOpacity","blendMode","legends","anchor","direction","translateX","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","effects","on","Toggle","checked","onChange","leftLabel","rightLabel","component","Grid","container","alignItems","spacing","BulletGraph","showModules","toggleHandler","_this","setState","prevState","prevTotal","moduleLengths","ranges","days","range","calcModuleLength","nivo_bullet_esm","id","measures","markers","titleAlign","titleOffsetX","measureSize","rangeColors","measureColors","concat","markerColors","markerSize","_this$props","this","traditional","toggle_Toggle","createTradCycleGraph","createMLCycleGraphs","Component","Spinner","Associate","fetchCycle","_ref3","_getUrlParams2","tradCycle","breadcrumbs_Breadcrumbs","associate_info_AssociateInfo","row","radar_graph_RadarGraph","defineProperty","bullet_graph_BulletGraph","calendar_Calendar","dist_default","columns","options","sorting","spinner_Spinner","connect","dispatch","CycleInfo","nameSplit","cycleType","formattedName","trainers","slice","TAs","startDates","currentNumAssociates","Cycle","cycle_info_CycleInfo","Max","Min","Average","actions","icon","onClick","rowData","Cycles","cycleList","Overview","fetchAllCycles","graph","10th","25th","50th","75th","90th","NavBar","sideDrawerOpen","clickHandler","AppBar","position","flexDirection","IconButton","edge","Menu","paddingTop","Drawer","open","onClose","role","onKeyDown","List","ListItem","button","ListItemIcon","Home","ListItemText","primary","Autorenew","esm_Person","ArrowUpward","Upload","selectedCycle","uploadFileHandler","FormData","append","uploadInput","files","postCycle","selectHandler","evt","target","_this2","MenuItem","CardHeader","FormControl","InputLabel","htmlFor","inputProps","CardContent","accept","ref","CardActions","disabled","App","toggleModal","resetError","components_NavBar_NavBar","react_router","exact","aria-labelledby","aria-describedby","message","response","store","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","applyMiddleware","runSagas","run","configureStore","rootSaga","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.215128e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Divider\":\"BulletGraph_Divider__2bQLF\",\"Graph\":\"BulletGraph_Graph__3wjrt\",\"Graph2\":\"BulletGraph_Graph2__2ZcjL\",\"Graph3\":\"BulletGraph_Graph3__12REj\",\"Header\":\"BulletGraph_Header__1SIQE\",\"Paper\":\"BulletGraph_Paper__3t9QD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadcrumbsLong\":\"Breadcrumbs_BreadcrumbsLong__2KhVj\",\"BreadcrumbsShort\":\"Breadcrumbs_BreadcrumbsShort__1WiT3\",\"Link\":\"Breadcrumbs_Link__3jafs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Divider\":\"RadarGraph_Divider__3R4Dk\",\"Graph\":\"RadarGraph_Graph__2MYKN\",\"Header\":\"RadarGraph_Header__3ZJ39\",\"Paper\":\"RadarGraph_Paper__3E3vU\",\"TallGraph\":\"RadarGraph_TallGraph__3QuIZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Body\":\"AssociateInfo_Body__32R6R\",\"Divider\":\"AssociateInfo_Divider__wktxg\",\"Header\":\"AssociateInfo_Header__1m6PT\",\"Paper\":\"AssociateInfo_Paper__32gtU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Divider\":\"Calendar_Divider__2ieCc\",\"Graph\":\"Calendar_Graph__1D0EB\",\"Header\":\"Calendar_Header__2itZ5\",\"Paper\":\"Calendar_Paper__1QwYW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Body\":\"CycleInfo_Body__12_Cg\",\"Divider\":\"CycleInfo_Divider__2DCAV\",\"Header\":\"CycleInfo_Header__1koqK\",\"Paper\":\"CycleInfo_Paper__2A_UU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Link\":\"NavBar_Link__156EQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Upload_Card__3nMj3\",\"Container\":\"Upload_Container__mdbvY\",\"Error\":\"Upload_Error___RPKc\",\"Select\":\"Upload_Select__2lptZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"App_Button__3SFOE\",\"Main\":\"App_Main__HQkvd\",\"Modal\":\"App_Modal__3TBj2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Legend_Label__2fag-\",\"Legend\":\"Legend_Legend__31jqa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Cycles_Container__224Rk\",\"Link\":\"Cycles_Link__3bc81\",\"Paper\":\"Cycles_Paper__2vonm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paper\":\"Associate_Paper__fE7jb\",\"Wrapper\":\"Associate_Wrapper__3-sv1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Paper\":\"Cycle_Paper__3Wa8L\",\"Wrapper\":\"Cycle_Wrapper__2hbZ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Switch\":\"Toggle_Switch__3TxVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__gw0iB\",\"load1\":\"Spinner_load1__3x6jY\"};","export const FETCH_ALL_CYCLES_METRICS = 'FETCH_ALL_CYCLES_METRICS';\nexport const FETCH_ALL_CYCLES_METRICS_SUCCESS = 'FETCH_ALL_CYCLES_METRICS_SUCCESS';\nexport const FETCH_ALL_CYCLES_METRICS_FAIL = 'FETCH_ALL_CYCLES_METRICS_FAIL';\n\nexport const FETCH_CYCLE_METRICS = 'FETCH_CYCLE_METRICS';\nexport const FETCH_CYCLE_METRICS_SUCCESS = 'FETCH_CYCLE_METRICS_SUCCESS';\nexport const FETCH_CYCLE_METRICS_FAIL = 'FETCH_CYCLE_METRICS_FAIL';\n\nexport const POST_CYCLE_METRICS = 'POST_CYCLE_METRICS';\nexport const POST_CYCLE_METRICS_SUCCESS = 'POST_CYCLE_METRICS_SUCCESS';\nexport const POST_CYCLE_METRICS_FAIL = 'POST_CYCLE_METRICS_FAIL';\n\nexport const RESET_ERROR = 'RESET_ERROR;'","import { FETCH_ALL_CYCLES_METRICS, FETCH_ALL_CYCLES_METRICS_SUCCESS, FETCH_ALL_CYCLES_METRICS_FAIL, FETCH_CYCLE_METRICS, FETCH_CYCLE_METRICS_SUCCESS, FETCH_CYCLE_METRICS_FAIL, POST_CYCLE_METRICS, POST_CYCLE_METRICS_SUCCESS, POST_CYCLE_METRICS_FAIL, RESET_ERROR } from '../actionTypes';\n\nconst initialState = {\n  allCycleAggr: {},\n  associateMetadata: {},\n  cycleAggr: {},\n  cycleMetadata: [],\n  cycleMetrics: [],\n  error: null,\n  loading: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ALL_CYCLES_METRICS: {\n      return {\n        ...state,\n        error: false,\n        loading: true\n      };\n    }\n    case FETCH_ALL_CYCLES_METRICS_SUCCESS: {\n      return {\n        ...state,\n        allCycleAggr: action.allCycleAggr,\n        associateMetadata: action.associateMetadata,\n        cycleAggr: action.cycleAggr,\n        cycleMetadata: action.cycleMetadata,\n        cycleMetrics: action.cycleMetrics,\n        loading: false,\n      };\n    }\n    case FETCH_ALL_CYCLES_METRICS_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false\n      }\n    }\n    case FETCH_CYCLE_METRICS: {\n      return {\n        ...state,\n        error: false,\n        loading: true\n      };\n    }\n    case FETCH_CYCLE_METRICS_SUCCESS: {\n      return {\n        ...state,\n        associateMetadata: newAssociateMetadata(state, action),\n        cycleAggr: newCycleAggr(state, action),\n        cycleMetadata: newCycleMetadata(state, action),\n        cycleMetrics: newCycleMetrics(state, action),\n        loading: false,\n      };\n    }\n    case FETCH_CYCLE_METRICS_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false\n      }\n    }\n    case POST_CYCLE_METRICS: {\n      return {\n        ...state,\n        error: false,\n        loading: true\n      };\n    }\n    case POST_CYCLE_METRICS_SUCCESS: {\n      return {\n        ...state,\n        associateMetadata: newAssociateMetadata(state, action),\n        cycleAggr: newCycleAggr(state, action),\n        cycleMetadata: newCycleMetadata(state, action),\n        cycleMetrics: newCycleMetrics(state, action),\n        loading: false,\n      };\n    }\n    case POST_CYCLE_METRICS_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false\n      }\n    }\n    case RESET_ERROR: {\n      return {\n        ...state,\n        error: null,\n        loading: false\n      }\n    }\n    default:\n      return state;\n  }\n}\n\nconst newAssociateMetadata = (state, action) => {\n  const newAssociateMetadata = {};\n  for (let [key, value] of Object.entries(state.associateMetadata)) {\n    newAssociateMetadata[key] = value;\n  }\n  for (let [key, value] of Object.entries(action.associateMetadata)) {\n    newAssociateMetadata[key] = value;\n  }\n  return newAssociateMetadata;\n}\n\nconst newCycleAggr = (state, action) => {\n  const newCycleAggr = {};\n  for (let [key, value] of Object.entries(state.cycleAggr)) {\n    newCycleAggr[key] = value;\n  }\n  newCycleAggr[action.cycleName] = action.cycleAggr\n  return newCycleAggr;\n}\n\nconst newCycleMetadata = (state, action) => {\n  const newCycleMetadata = {};\n  for (let [key, value] of Object.entries(state.cycleMetadata)) {\n    newCycleMetadata[key] = value;\n  }\n  newCycleMetadata[action.cycleName] = action.cycleMetadata\n  return newCycleMetadata;\n}\n\nconst newCycleMetrics = (state, action) => {\n  const newCycleMetrics = {};\n  for (let [key, value] of Object.entries(state.cycleMetrics)) {\n    newCycleMetrics[key] = value;\n  }\n  newCycleMetrics[action.cycleName] = action.cycleMetrics\n  return newCycleMetrics;\n}","import { combineReducers } from 'redux';\nimport cyclesReducer from './cyclesReducer';\n\nexport default combineReducers({ cycles: cyclesReducer });","import { FETCH_ALL_CYCLES_METRICS, FETCH_ALL_CYCLES_METRICS_SUCCESS, FETCH_ALL_CYCLES_METRICS_FAIL, FETCH_CYCLE_METRICS, FETCH_CYCLE_METRICS_SUCCESS, FETCH_CYCLE_METRICS_FAIL, POST_CYCLE_METRICS, POST_CYCLE_METRICS_SUCCESS, POST_CYCLE_METRICS_FAIL, RESET_ERROR } from './actionTypes';\n\nexport const fetchAllCyclesMetrics = () => ({\n    type: FETCH_ALL_CYCLES_METRICS,\n});\n\nexport const fetchAllCyclesMetricsSuccess = (cycleAggr, cycleMetadata, associateMetadata, cycleMetrics, allCycleAggr) => ({\n    type: FETCH_ALL_CYCLES_METRICS_SUCCESS,\n    cycleAggr,\n    cycleMetadata,\n    associateMetadata,\n    cycleMetrics,\n    allCycleAggr\n});\n\nexport const fetchAllCyclesMetricsFail = error => ({\n    type: FETCH_ALL_CYCLES_METRICS_FAIL,\n    error\n});\n\nexport const fetchCycleMetrics = cycleName => ({\n    type: FETCH_CYCLE_METRICS,\n    cycleName\n});\n\nexport const fetchCycleMetricsSuccess = (cycleAggr, cycleMetadata, associateMetadata, cycleMetrics, cycleName) => ({\n    type: FETCH_CYCLE_METRICS_SUCCESS,\n    cycleAggr,\n    cycleMetadata,\n    associateMetadata,\n    cycleMetrics,\n    cycleName\n});\n\nexport const fetchCycleMetricsFail = error => ({\n    type: FETCH_CYCLE_METRICS_FAIL,\n    error\n});\n\nexport const postCycleMetrics = (formData, cycleName, history) => ({\n    type: POST_CYCLE_METRICS,\n    formData,\n    cycleName,\n    history\n});\n\nexport const postCycleMetricsSuccess = (cycleAggr, cycleMetadata, associateMetadata, cycleMetrics, cycleName) => ({\n    type: POST_CYCLE_METRICS_SUCCESS,\n    cycleAggr,\n    cycleMetadata,\n    associateMetadata,\n    cycleMetrics,\n    cycleName\n});\n\nexport const postCycleMetricsFail = error => ({\n    type: POST_CYCLE_METRICS_FAIL,\n    error\n});\n\nexport const resetError = () => ({\n    type: RESET_ERROR\n});","// eventually to be moved to config file/DB\n\nexport default {\n  attendance: {\n    'Excused Absence': 0,\n    'Unexcused Absence': 1,\n    'Excused Late Arrival': 2,\n    'Unexcused Late Arrival': 3,\n    'Optional Attendance': 4\n  },\n  cycles: [\n    'mlPortland2019',\n    'tradChicagoApril2019',\n    'tradDenverJune2019',\n    'tradBostonJune2019',\n    'tradBaltimoreJuly2019'\n  ],\n  'Interaction Type': {\n    quiz: 'Quiz',\n    projectScore: 'Project (Score)',\n    softSkills: 'Soft Skill Assesment'\n  },\n  cycleMetadate: [\n    'Staff change',\n    'Cycle End Date',\n    'Cycle Start Date',\n    'Associate Start'\n  ],\n  modules: [\n    'Development Basics and Front End',\n    'Databases',\n    'Logic Layer (Java)',\n    'Front End Frameworks (React)',\n    'Group Project',\n    'Final Project'\n  ],\n  'Project (Score)': {\n    HTML_CSS_Page_Match_Project_v2: {\n      'Max Score': 30,\n      Module: 'Development Basics & Frontend'\n    },\n    JavaScript_Form_Validation_Project_v2: {\n      'Max Score': 30,\n      Module: 'Development Basics & Frontend'\n    },\n    MongoDB_Database_Project_v3: {\n      'Max Score': 30,\n      Module: 'Databases'\n    },\n    PostgreSQL_Database_Project_v3: {\n      'Max Score': 30,\n      Module: 'Databases'\n    },\n    Garden_Center_API_Project_v4: {\n      'Max Score': 30,\n      Module: 'Logic Layer (Java)'\n    },\n    Catalyte_Pet_Emporium_API_Project_v2: {\n      'Max Score': 30,\n      Module: 'Logic Layer (Java)'\n    },\n    Garden_Center_Front_End_Project_v2: {\n      'Max Score': 30,\n      Module: 'Frontend Frameworks (React)'\n    },\n    Redux_Garden_Center_Front_End_Project_v2: {\n      'Max Score': 30,\n      Module: 'Frontend Frameworks (React)'\n    },\n    E_Commerce_Group_Project_v1: {\n      'Max Score': 81,\n      Module: 'Group Project'\n    },\n    Final_Health_Project_v3: {\n      'Max Score': 30,\n      Module: 'Final Project'\n    },\n    Garden_Center_API_Project_v5: {\n      'Max Score': 30,\n      Module: 'Logic Layer (Java)'\n    }\n  },\n  'Quiz': {\n    Quiz_Introductory_v1: {\n      'Max Score': 17,\n      Module: 'Development Basics & Frontend',\n    },\n    Quiz_HTML_and_CSS_v1: {\n      'Max Score': 12,\n      Module: 'Development Basics & Frontend',\n    },\n    Quiz_JavaScript_v1: {\n      'Max Score': 49,\n      Module: 'Development Basics & Frontend',\n    },\n    Quiz_Intro_to_Java_v1: {\n      'Max Score': 19,\n      Module: 'Logic Layer (Java)',\n    },\n    Quiz_Relational_Databases_v1: {\n      'Max Score': 30,\n      Module: 'Databases',\n    },\n    Quiz_Document_Databases_v1: {\n      'Max Score': 16,\n      Module: 'Databases',\n    },\n    Quiz_Java_Unit_Testing_And_OOP_v1: {\n      'Max Score': 37,\n      Module: 'Logic Layer (Java)',\n    },\n    Quiz_React_js_v1: {\n      'Max Score': 34,\n      Module: 'Frontend Frameworks (React)',\n    },\n    Quiz_React_js_v2: {\n      'Max Score': 14,\n      Module: 'Frontend Frameworks (React)',\n    },\n    Quiz_Redux_v1: {\n      'Max Score': 27,\n      Module: 'Frontend Frameworks (React)',\n    },\n    Quiz_Redux_v2: {\n      'Max Score': 10,\n      Module: 'Frontend Frameworks (React)',\n    },\n    Quiz_Spring_With_Java_v2: {\n      'Max Score': 14,\n      Module: 'Logic Layer (Java)',\n    },\n    Quiz_Document_Databases_v2: {\n      'Max Score': 10,\n      Module: 'Databases',\n    },\n    Quiz_Relational_Databases_v2: {\n      'Max Score': 16,\n      Module: 'Databases',\n    },\n    Quiz_Intro_to_Java_v2: {\n      'Max Score': 14,\n      Module: 'Logic Layer (Java)',\n    },\n    Quiz_Java_Unit_Testing_And_OOP_v2: {\n      'Max Score': 22,\n      Module: 'Logic Layer (Java)',\n    },\n    Quiz_JavaScript_v2: {\n      'Max Score': 26,\n      Module: 'Development Basics & Frontend',\n    },\n    Quiz_Introductory_v2: {\n      'Max Score': 14,\n      Module: 'Development Basics & Frontend',\n    }\n  },\n  'Soft Skill Assessment': {\n    'Problem Solving': { 'Max Score': 5 },\n    'Self Awareness and Self Improvement': { 'Max Score': 5 },\n    'Project Execution': { 'Max Score': 5 },\n    'Professionalism': { 'Max Score': 5 },\n    'Communication': { 'Max Score': 5 },\n  },\n  staff: ['Eric Queen', 'Corbin Koukoutchos', 'Dan Reuther', 'Katlyn Beck', 'Greg Fisher', 'Taylor Elam', 'Tony Richards', 'Dan Lawless', 'William Newman', 'Hayes McCardell', 'Josh Tucker']\n}","export default {\n  attendance: [\n    'Excused Absence',\n    'Unexcused Absence',\n    'Excused Late Arrival',\n    'Unexcused Late Arrival',\n    'Optional Attendance'\n  ],\n  attendanceColors: ['gold', 'darkred', 'yellow', 'red', 'green'],\n  mlPortland2019: 'Mastery Learning Portland 2019',\n  moduleColors: [\n    '#a50026',\n    '#d73027',\n    '#f46d43',\n    '#fdae61',\n    '#fee090',\n    '#ffffbf'\n  ],\n  moduleLengthColors: ['#a50026', '#e6e6e6'],\n  modules: [\n    'Development Basics and Front End',\n    'Databases',\n    'Logic Layer (Java)',\n    'Front End Frameworks (React)',\n    'Group Project',\n    'Final Project'\n  ],\n  quiz: 'Quiz',\n  percentiles: [0.1, 0.25, 0.5, 0.75, 0.9],\n  projectScore: 'Project (Score)',\n  softSkills: 'Soft Skill Assessment',\n  tradChicagoApril2019: 'Traditional Cycle Chicago April 2019',\n  tradDenverJune2019: 'Traditional Cycle Denver June 2019',\n  tradBostonJune2019: 'Traditional Cycle Boston June 2019',\n  tradBaltimoreJuly2019: 'Traditional Cycle Baltimore July 2019'\n}","import Metadata from './metadata';\nimport CONSTS from './constants';\n\nexport const calcAllCyclesPercentiles = cycleAggr => {\n  const projectScores = [];\n  const quizScores = [];\n  const softSkillsScores = [];\n  for (const cycle in cycleAggr) {\n    for (const associate in cycleAggr[cycle]) {\n      projectScores.push(cycleAggr[cycle][associate].projectAvg);\n      quizScores.push(cycleAggr[cycle][associate].quizAvg);\n      softSkillsScores.push(cycleAggr[cycle][associate].softSkillsAvg);\n    }\n  }\n  // sort in ascending order\n  projectScores.sort((a, b) => a - b);\n  quizScores.sort((a, b) => a - b);\n  softSkillsScores.sort((a, b) => a - b);\n  // calc percentiles for each\n  const projectPercentiles = CONSTS.percentiles.map(perc =>\n    projectScores[Math.round(projectScores.length * perc)]\n  );\n  const quizPercentiles = CONSTS.percentiles.map(perc =>\n    quizScores[Math.round(quizScores.length * perc)]\n  );\n  const softSkillsPercentiles = CONSTS.percentiles.map(perc =>\n    softSkillsScores[Math.round(softSkillsScores.length * perc)]\n  );\n  return { projectPercentiles, projectScores, quizPercentiles, quizScores, softSkillsPercentiles, softSkillsScores };\n}\n\nexport const calcAssociateAggr = associates => {\n  const avgs = {};\n  associates.forEach(associate => {\n    avgs[associate[0].Person] = {\n      attemptPass: calcAttemptPassRatio(associate),\n      projectAvg: calcMetricAvg(associate, CONSTS.projectScore, Metadata['Project (Score)']),\n      quizAvg: calcMetricAvg(associate, CONSTS.quiz, Metadata.Quiz),\n      softSkillsAvg: calcMetricAvg(associate, CONSTS.softSkills, Metadata['Soft Skill Assessment'])\n    };\n  });\n  return avgs;\n}\n\nexport const calcCycleAggr = associates => {\n  let attemptAvg = 0;\n  let attemptMax = 0;\n  let attemptMin = 100;\n  let projectAvg = 0;\n  let projectMax = 0;\n  let projectMin = 100;\n  let quizAvg = 0;\n  let quizMax = 0;\n  let quizMin = 100;\n  let softSkillsAvg = 0;\n  let softSkillsMax = 0;\n  let softSkillsMin = 100;\n  let numAttempts = Object.keys(associates).length;\n  let numProjects = Object.keys(associates).length;\n  let numQuizzes = Object.keys(associates).length;\n  let numSoftSkills = Object.keys(associates).length;\n\n  for (const associate in associates) {\n    // attempts/pass avg\n    attemptAvg += associates[associate].attemptPass;\n    if (associates[associate].attemptPass === 0) {\n      numAttempts--;\n    }\n    // project avg\n    projectAvg += associates[associate].projectAvg;\n    if (associates[associate].projectAvg === 0) {\n      numProjects--;\n    }\n    // quiz avg\n    quizAvg += associates[associate].quizAvg;\n    if (associates[associate].quizAvg === 0) {\n      numQuizzes--;\n    }\n    // soft skills avg\n    softSkillsAvg += associates[associate].softSkillsAvg;\n    if (associates[associate].softSkillsAvg === 0) {\n      numSoftSkills--;\n    }\n    // attempt/pass max/min\n    if (associates[associate].attemptPass > attemptMax) {\n      attemptMax = associates[associate].attemptPass;\n    }\n    if (associates[associate].attemptPass < attemptMin && associates[associate].attemptPass !== 0) {\n      attemptMin = associates[associate].attemptPass;\n    }\n    //project max/min\n    if (associates[associate].projectAvg > projectMax) {\n      projectMax = associates[associate].projectAvg;\n    }\n    if (associates[associate].projectAvg < projectMin && associates[associate].projectAvg !== 0) {\n      projectMin = associates[associate].projectAvg;\n    }\n    // quiz max/min\n    if (associates[associate].quizAvg > quizMax) {\n      quizMax = associates[associate].quizAvg;\n    }\n    if (associates[associate].quizAvg < quizMin && associates[associate].quizAvg !== 0) {\n      quizMin = associates[associate].quizAvg;\n    }\n    // soft skills max/min\n    if (associates[associate].softSkillsAvg > softSkillsMax) {\n      softSkillsMax = associates[associate].softSkillsAvg;\n    }\n    if (associates[associate].softSkillsAvg < softSkillsMin && associates[associate].softSkillsAvg !== 0) {\n      softSkillsMin = associates[associate].softSkillsAvg;\n    }\n  };\n\n  return {\n    attemptAvg: numAttempts === 0 ? 0 : Math.round(attemptAvg / numAttempts),\n    attemptMax,\n    attemptMin,\n    projectAvg: numProjects === 0 ? 0 : Math.round(projectAvg / numProjects),\n    projectMax,\n    projectMin,\n    quizAvg: numQuizzes === 0 ? 0 : Math.round(quizAvg / numQuizzes),\n    quizMax,\n    quizMin,\n    softSkillsMax,\n    softSkillsMin,\n    softSkillsAvg: numSoftSkills === 0 ? 0 : Math.round(softSkillsAvg / numSoftSkills)\n  }\n}\n\nexport const calcDaysSince = (startDate, endDate) => {\n  // format as Date object\n  const startDateSplit = startDate.split('/');\n  const startDateObj = new Date('20' + startDateSplit[2], startDateSplit[0] - 1, startDateSplit[1]);\n\n  if (endDate) {\n    // if end date provided, format as Date object and calc time btw start and end\n    const endDateSplit = endDate.split('/');\n    const endDateObj = new Date('20' + endDateSplit[2], endDateSplit[0] - 1, endDateSplit[1]);\n    const cycleLength = (endDateObj - startDateObj) / 86400000;\n    return Math.round(cycleLength);\n  } else {\n    // if no end date, calc time btw now and start\n    const daysSinceStart = (Date.now() - startDateObj) / 86400000;\n    return Math.round(daysSinceStart);\n  }\n}\n\nexport const calcDateMarkers = metadata => {\n  const startDate = metadata['Associate Start'];\n  return Metadata.modules.map(modules => {\n    if (metadata[modules].start) {\n      return Math.round(calcDaysSince(startDate, metadata[modules].start));\n    }\n    return 0;\n  });\n}\n\nexport const calcModuleLength = metadata => {\n  let prevTotal = 0;\n  const moduleLengths = [];\n  const ranges = Metadata.modules.map(modules => {\n    if (metadata[modules].start && metadata[modules].end) {\n      const days = Math.round(calcDaysSince(metadata[modules].start, metadata[modules].end));\n      moduleLengths.push(days);\n      const range = days + prevTotal;\n      prevTotal = range;\n      return range;\n    } else if (metadata[modules].start) {\n      if (metadata['Cycle Exit']) {\n        const days = Math.round(calcDaysSince(metadata[modules].start, metadata['Cycle Exit']));\n        moduleLengths.push(days);\n        const range = days + prevTotal;\n        return range;\n      } else {\n        const days = Math.round(calcDaysSince(metadata[modules].start));\n        moduleLengths.push(days);\n        const range = days + prevTotal;\n        return range;\n      }\n    } else {\n      moduleLengths.push(0);\n      return 0;\n    }\n  });\n  return { moduleLengths, ranges };\n}\n\nexport const calcMetricAvg = (associate, metric, maxScores) => {\n  const metrics = associate.filter(event => event['Interaction Type'] === metric);\n\n  // return 0 if no metrics were taken\n  if (!metrics.length) {\n    return 0;\n  }\n\n  // adds up scores of all associate metrics and Max Scores for those metrics\n  const metricAvg = metrics.reduce((acc, curr) => {\n    return [acc[0] + Number(curr.Score), acc[1] + maxScores[curr.Interaction]['Max Score']];\n  }, [0, 0]);\n\n  // convert to percent and round to nearest int\n  return Math.round((metricAvg[0] / metricAvg[1]) * 100);\n}\n\nexport const calcAttemptPassRatio = metrics => {\n  let attempt = 0;\n  let pass = 0;\n  for (const metric of metrics) {\n    if (metric['Interaction Type'] === 'Exercise') {\n      attempt++;\n      if (metric.Score === 'Completed' || metric.Score === 'Pass') {\n        pass++;\n      }\n    } else if (metric['Interaction Type'] === 'Project (Score)') {\n      attempt++;\n      if ((metric.Score / 30) >= 0.9) {\n        pass++;\n      }\n    }\n  }\n  return Math.round((pass / attempt) * 100);\n}\n\nexport const calcPercentiles = (scores, avg) => {\n  const index = scores.indexOf(avg);\n  return Math.round((index + 1) / scores.length * 100);\n}\n\nconst formatCalendarDate = date => {\n  const dateSplit = date.split('/');\n  if (dateSplit[0].length === 1) {\n    dateSplit[0] = '0' + dateSplit[0];\n  }\n  if (dateSplit[1].length === 1) {\n    dateSplit[1] = '0' + dateSplit[1];\n  }\n  return ['20' + dateSplit[2], dateSplit[0], dateSplit[1]].join('-');\n}\n\nexport const sortAttendanceEvents = metrics => {\n  const attendance = {\n    events: []\n  };\n  metrics.forEach(event => {\n    // convert to correct date format\n    const newDateFormat = formatCalendarDate(event.Date);\n\n    // set start date\n    if (event['Interaction Type'] === 'Associate Start') {\n      attendance[event['Interaction Type']] = newDateFormat;\n\n      // set cycle exit date\n    } else if (RegExp('Cycle Exit').test(event['Interaction Type'])) {\n      attendance['Cycle Exit'] = newDateFormat;\n\n      // set other attendace evts\n    } else if (event['Interaction Type'] === 'Attendance Event') {\n      attendance.events.push({\n        day: newDateFormat,\n        value: Metadata.attendance[event.Interaction]\n      })\n    }\n  });\n\n  // if no cycle exit date, use current\n  if (!attendance['Cycle Exit']) {\n    const date = new Date(Date.now());\n    attendance['Cycle Exit'] = date.toISOString();\n  }\n  return attendance;\n}\n\nexport const sortMetircsByAssociate = data => {\n  const associates = {};\n\n  for (const item of data) {\n    // ignore training staff and empty Person\n    if (!Metadata.staff.includes(item.Person) && item.Person !== '') {\n\n      // if associate already added, push item\n      if (associates[item.Person]) {\n        associates[item.Person].push(item);\n      } else {\n        // if field doesn't exist, add one\n        associates[item.Person] = [item];\n      }\n    }\n  }\n  return Object.values(associates);\n}\n\nexport const getAssociateMetadata = data => {\n  const metadata = {};\n  for (const associate of data) {\n    let person = {\n      'Development Basics and Front End': {\n        start: null,\n        end: null\n      },\n      Databases: {\n        start: null,\n        end: null\n      },\n      'Logic Layer (Java)': {\n        start: null,\n        end: null\n      },\n      'Front End Frameworks (React)': {\n        start: null,\n        end: null\n      },\n      'Group Project': {\n        start: null,\n        end: null\n      },\n      'Final Project': {\n        start: null,\n        end: null\n      }\n    };\n    for (const event of associate) {\n      if (event['Interaction Type'] === 'Module Completed') {\n        person[event.Interaction].end = event.Date;\n      } else if (event['Interaction Type'] === 'Module Started') {\n        person[event.Interaction].start = event.Date;\n      } else if (event['Interaction Type'] === 'Associate Start') {\n        person[event['Interaction Type']] = event.Date;\n      } else if (RegExp('Cycle Exit').test(event['Interaction Type'])) {\n        person['Cycle Exit'] = event.Date;\n      }\n    }\n    metadata[associate[0].Person] = person;\n  }\n  return metadata;\n}\n\nexport const getCycleMetadata = data => {\n  const metadata = {};\n  data.forEach(event => {\n    // check for interaction type\n    if (Metadata.cycleMetadate.includes(event['Interaction Type']) || RegExp('Cycle Exit').test(event['Interaction Type'])) {\n      // because our data entry is wonky\n      let field;\n      if (event.Interaction === '') {\n        field = event['Interaction Type'];\n      } else if (RegExp('Cycle Exit').test(event['Interaction Type'])) {\n        field = 'Associate Leave';\n      } else {\n        field = event.Interaction\n      }\n      // if not already a field, create one\n      if (!metadata[field]) {\n        // staff change need name and date\n        if (field !== 'Cycle Start Date' && field !== 'Cycle End Date') {\n          metadata[field] = [{ name: event.Person, date: event.Date }];\n        } else {\n          metadata[field] = [event.Date];\n        }\n        // otherwise, add to list\n      } else {\n        if (field !== 'Cycle Start Date' && field !== 'Cycle End Date') {\n          metadata[field].push({ name: event.Person, date: event.Date });\n        } else {\n          metadata[field].push(event.Date);\n        }\n      }\n    }\n  });\n  return metadata;\n}\n\nexport const formatPercentile = percentile => {\n  if (percentile % 10 === 1) {\n    return percentile + 'st';\n  } else if (percentile % 10 === 2) {\n    return percentile + 'nd';\n  } else if (percentile % 10 === 3) {\n    return percentile + 'rd';\n  } else {\n    return percentile + 'th';\n  }\n}\n\nexport const getUrlParams = urlHistory => {\n  const url = urlHistory.location.pathname.split('/');\n  // get associate name from url and format to use ' ' instead of '-'\n  const associate = url[url.length - 1].split('-').join(' ');\n  // get cycle name\n  const cycle = url[2];\n\n  return { url, cycle, associate };\n}","import { put, all, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { FETCH_ALL_CYCLES_METRICS, FETCH_CYCLE_METRICS, POST_CYCLE_METRICS } from \"../actionTypes\";\nimport { fetchAllCyclesMetricsSuccess, fetchCycleMetricsSuccess, fetchCycleMetricsFail, postCycleMetricsSuccess, postCycleMetricsFail } from \"../actions\";\nimport { calcAllCyclesPercentiles, calcAssociateAggr, calcCycleAggr, getCycleMetadata, sortMetircsByAssociate, getAssociateMetadata } from '../../shared/dataService';\n\nexport default function* watchCycle() {\n  yield all([\n    takeEvery(FETCH_ALL_CYCLES_METRICS, fetchAllCyclesMetrics),\n    takeEvery(FETCH_CYCLE_METRICS, fetchCycleMetrics),\n    takeEvery(POST_CYCLE_METRICS, postCycleMetrics)\n  ])\n}\n\nfunction* fetchAllCyclesMetrics() {\n  try {\n    const res = yield axios.get('/api');\n    const { cycles, data } = res.data;\n    yield put(fetchAllCyclesMetricsSuccess(...formatAllCycleData(data, cycles)));\n  } catch (err) {\n    yield put(fetchCycleMetricsFail(err));\n  }\n}\n\nfunction* fetchCycleMetrics({ cycleName }) {\n  try {\n    const res = yield axios.get('/api/' + cycleName);\n    yield put(fetchCycleMetricsSuccess(...formatCycleData(res.data, cycleName)));\n  } catch (err) {\n    yield put(fetchCycleMetricsFail(err));\n  }\n}\n\nfunction* postCycleMetrics({ formData, cycleName, history }) {\n  try {\n    const res = yield axios.post('/api/' + cycleName, formData);\n    yield put(postCycleMetricsSuccess(...formatCycleData(res.data, cycleName)));\n    history.push('/cycle')\n  } catch (err) {\n    yield put(postCycleMetricsFail(err));\n  }\n}\n\nconst formatCycleData = (data, cycleName) => {\n  // sort by associate\n  const sortedMetrics = sortMetircsByAssociate(data);\n  // collect associate module metadata\n  const associateMetadata = getAssociateMetadata(sortedMetrics);\n  // calculate avg for projects, quizzes, soft skills\n  const associateAggr = calcAssociateAggr(sortedMetrics);\n  // calculate avgs for whole cycle\n  const cycleAggr = calcCycleAggr(associateAggr);\n  // combine into one object\n  associateAggr[cycleName] = cycleAggr;\n  // collect cycle metadata\n  const metadata = getCycleMetadata(data);\n\n  return [associateAggr, metadata, associateMetadata, sortedMetrics, cycleName];\n}\n\nconst formatAllCycleData = (data, cycles) => {\n  const associateMetadata = {};\n  const cycleAggr = {};\n  const cycleMetadata = {};\n  const cycleMetrics = {};\n  // for each cycle, collect data\n  for (let i = 0; i < data.length; i++) {\n    let [associateAggr, metadata, associateMeta, sortedMetrics, cycleName] = formatCycleData(data[i], cycles[i]);\n\n    for (let [key, value] of Object.entries(associateMeta)) {\n      associateMetadata[key] = value;\n    }\n    cycleAggr[cycleName] = associateAggr;\n    cycleMetadata[cycleName] = metadata;\n    cycleMetrics[cycleName] = sortedMetrics;\n  }\n  // all cycle aggregations\n  const allCycleAggr = calcAllCyclesPercentiles(cycleAggr);\n\n  return [cycleAggr, cycleMetadata, associateMetadata, cycleMetrics, allCycleAggr];\n}","import { all } from 'redux-saga/effects';\nimport cyclesSagas from './cyclesSagas';\n\nexport default function* rootSage() {\n  yield all([\n    cyclesSagas()\n  ]);\n}\n\n","import React from 'react';\nimport { Divider, Paper, Typography } from '@material-ui/core';\nimport styles from './AssociateInfo.module.css';\nimport { calcDaysSince } from '../../shared/dataService';\nimport CONSTS from '../../shared/constants';\n\nconst AssociateInfo = (props) => {\n  const { Date: startDate, Person } = props.associate.find(item => item['Interaction Type'] === 'Associate Start');\n  const exitRegex = RegExp('Cycle Exit');\n  const endDate = props.associate.find(item => exitRegex.test(item['Interaction Type']));\n\n  return (\n    <Paper className={styles.Paper}>\n      <div className={styles.Header}>\n        <Typography variant='h3'>\n          {Person}\n        </Typography>\n        <Typography variant='h6' color='textSecondary'>\n          {CONSTS[props.cycle]}\n        </Typography>\n      </div>\n\n      <div className={styles.Divider}>\n        <Divider />\n      </div>\n\n      <div className={styles.Body}>\n        <div>\n          <Typography variant='body2'>\n            <strong>Start Date:</strong> {startDate}\n          </Typography>\n          {endDate ?\n            <>\n              <Typography variant='body2'>\n                <strong>End Date: </strong>{endDate.Date}\n              </Typography>\n            </>\n            : null}\n        </div>\n\n        <div>\n          <Typography variant='body2'>\n            <strong>Days in Cycle:</strong> {endDate ? calcDaysSince(startDate, endDate.Date) : calcDaysSince(startDate)}\n          </Typography>\n          { endDate ? \n            <Typography variant=\"button\" display=\"block\">\n              {endDate['Interaction Type']}\n            </Typography> : null}\n        </div>\n      </div>\n    </Paper >\n  );\n}\n\nexport default AssociateInfo;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumbs, Paper, Typography } from '@material-ui/core';\nimport CONSTS from '../../shared/constants';\nimport styles from './Breadcrumbs.module.css';\n\nconst breadcrumbs = props => {\n  const { path } = props;\n\n  return (\n    <Paper className={path.length === 5 ? styles.BreadcrumbsLong : styles.BreadcrumbsShort}>\n      {path.length === 5 ?\n        <Breadcrumbs separator='›' aria-label='Breadcrumb'>\n          <Link to='/cycle' className={styles.Link}>\n            Cycles\n          </Link>\n          <Link to={'/cycle/' + path[2]} className={styles.Link}>\n            {CONSTS[path[2]]}\n          </Link>\n          <Typography color='textPrimary'>{path[4]}</Typography>\n        </Breadcrumbs>\n        : <Breadcrumbs separator='›' aria-label='Breadcrumb'>\n          <Link to='/cycle' className={styles.Link}>\n            Cycles\n            </Link>\n          <Typography color='textPrimary'>{CONSTS[path[2]]}</Typography>\n        </Breadcrumbs>}\n    </Paper>\n  );\n}\n\nexport default breadcrumbs;","import React from 'react';\nimport CONSTS from '../../shared/constants';\nimport styles from './Legend.module.css';\n\nconst Legend = props => {\n  const { items, colors } = props;\n\n  return (\n    <div className={styles.Legend}>\n      {items.map((item, index) => (\n        <div key={index} className={styles.Legend}>\n          <div style={{ background: CONSTS[colors][index], height: '15px', width: '15px', margin: '0 4px' }}></div>\n          <p className={styles.Label}>{item.split(' ').splice(0, 2).join(' ')}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Legend;","import React from 'react';\nimport { ResponsiveCalendar } from '@nivo/calendar';\nimport { Divider, Paper, Typography } from '@material-ui/core';\nimport Legend from '../legend/Legend';\nimport { sortAttendanceEvents } from '../../shared/dataService';\nimport CONSTS from '../../shared/constants';\nimport styles from './Calendar.module.css';\n\nconst Calendar = props => {\n  const attendance = sortAttendanceEvents(props.metrics);\n\n  return (\n    <Paper className={styles.Paper}>\n      <div className={styles.Header}>\n        <Typography variant='h4'>\n          Attendance\n        </Typography>\n        {true ? <Typography variant='subtitle1' color='textSecondary'>\n          Absences & Late Arrivals\n        </Typography> : null}\n      </div>\n\n      <div className={styles.Divider}>\n        <Divider />\n      </div>\n\n      <div className={styles.Graph}>\n        <ResponsiveCalendar\n          data={attendance.events}\n          from={attendance['Associate Start']}\n          to={attendance['Cycle Exit']}\n          emptyColor=\"#eeeeee\"\n          colors={CONSTS.attendanceColors}\n          margin={{ top: 40, right: 40, bottom: 40, left: 40 }}\n          yearSpacing={40}\n          monthBorderColor=\"#0c0314\"\n          dayBorderWidth={2}\n          dayBorderColor=\"#ffffff\"\n          minValue={0}\n          maxValue={4}\n          tooltip={({ day, value }) => (\n            <strong>\n              {day}: {CONSTS.attendance[value]}\n            </strong>\n          )}\n        />\n      </div>\n      <Legend items={CONSTS.attendance} colors={'attendanceColors'} />\n    </Paper >\n  );\n}\n\nexport default Calendar;\n","import React from 'react';\nimport { Divider, Paper, Typography } from '@material-ui/core';\nimport { ResponsiveRadar } from '@nivo/radar'\nimport styles from './RadarGraph.module.css';\n\nconst RadarGraph = props => {\n  const { data, index, keys, tall, title, subtitle } = props;\n\n  return (\n    <Paper className={styles.Paper}>\n      <div className={styles.Header}>\n        <Typography variant='h4'>\n          {title}\n        </Typography>\n        {subtitle ? <Typography variant='subtitle1' color='textSecondary'>\n          {subtitle}\n        </Typography> : null}\n      </div>\n\n      <div className={styles.Divider}>\n        <Divider />\n      </div>\n\n      <div className={tall ? styles.TallGraph : styles.Graph}>\n        <ResponsiveRadar\n          data={data}\n          keys={keys}\n          indexBy={index}\n          maxValue={100}\n          margin={{ top: 35, right: 20, bottom: 35, left: 20 }}\n          curve='catmullRomClosed'\n          borderWidth={2}\n          borderColor={{ from: 'color' }}\n          gridLevels={3}\n          gridShape='circular'\n          gridLabelOffset={20}\n          enableDots={true}\n          dotSize={10}\n          dotColor={{ theme: 'background' }}\n          dotBorderWidth={3}\n          dotBorderColor={{ from: 'color' }}\n          enableDotLabel={false}\n          dotLabel='value'\n          dotLabelYOffset={-12}\n          colors={{ scheme: 'category10' }}\n          fillOpacity={0.1}\n          blendMode='multiply'\n          legends={[\n            {\n              anchor: 'top-left',\n              direction: 'column',\n              translateX: 120,\n              translateY: 0,\n              itemWidth: 60,\n              itemHeight: 20,\n              itemTextColor: '#555',\n              symbolSize: 12,\n              symbolShape: 'circle',\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ]}\n        />\n      </div>\n    </Paper>\n  )\n}\n\nexport default RadarGraph;","import React from 'react';\nimport { Grid, Switch, Typography } from '@material-ui/core';\nimport styles from './Toggle.module.css';\n\nconst Toggle = props => {\n  const { checked, onChange, leftLabel, rightLabel } = props;\n\n  return (\n    <div className={styles.Switch}>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n          <Grid item>{leftLabel}</Grid>\n          <Grid item>\n            <Switch\n              color='primary'\n              checked={checked}\n              onChange={onChange}\n              value=\"checkedC\"\n            />\n          </Grid>\n          <Grid item>{rightLabel}</Grid>\n        </Grid>\n      </Typography>\n    </div>\n  )\n}\n\nexport default Toggle;","import React, { Component } from 'react';\nimport { Divider, Paper, Typography } from '@material-ui/core';\nimport { ResponsiveBullet } from '@nivo/bullet'\nimport Legend from '../legend/Legend';\nimport Toggle from '../toggle/Toggle';\nimport { calcDateMarkers, calcDaysSince, calcModuleLength } from '../../shared/dataService';\nimport Metadata from '../../shared/metadata';\nimport styles from './BulletGraph.module.css';\n\nclass BulletGraph extends Component {\n  state = {\n    showModules: false\n  };\n\n  createMLCycleGraphs(showModules, metadata) {\n    const modules = calcModuleLength(metadata);\n\n    if (showModules) {\n      return (\n        <div className={styles.Graph}>\n          <ResponsiveBullet\n            data={[\n              {\n                id: 'Basics',\n                ranges: [42, 98],\n                measures: [modules.moduleLengths[0]],\n                markers: []\n              },\n              {\n                id: 'Databases',\n                ranges: [28, 98],\n                measures: [modules.moduleLengths[1]],\n                markers: []\n              },\n              {\n                id: 'Java',\n                ranges: [70, 98],\n                measures: [modules.moduleLengths[2]],\n                markers: []\n              },\n              {\n                id: 'React',\n                ranges: [56, 98],\n                measures: [modules.moduleLengths[3]],\n                markers: []\n              }\n            ]}\n            margin={{ top: 50, right: 90, bottom: 50, left: 90 }}\n            spacing={46}\n            titleAlign='start'\n            titleOffsetX={-70}\n            measureSize={0.4}\n            rangeColors={['#a50026', '#ffffff']}\n            measureColors='#e6e6e6'\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div className={styles.Graph2}>\n          <ResponsiveBullet\n            data={[\n              {\n                id: 'Associate',\n                ranges: modules.ranges,\n                measures: [],\n                markers: [...calcDateMarkers(metadata), 238]\n              },\n              {\n                id: 'Max Time',\n                ranges: [42, 70, 140, 196, 224, 238],\n                measures: [],\n                markers: []\n              }\n            ]}\n            margin={{ top: 50, right: 90, bottom: 50, left: 90 }}\n            spacing={46}\n            titleAlign='start'\n            titleOffsetX={-70}\n            measureSize={0.4}\n            rangeColors='red_yellow_blue'\n            measureColors='#e6e6e6'\n            markerColors='black'\n            markerSize={1}\n          />\n        </div>\n      );\n    }\n  }\n\n  createTradCycleGraph(metadata) {\n    let daysSinceStart = 0;\n    if (metadata['Cycle Exit']) {\n      daysSinceStart = Math.round(calcDaysSince(metadata['Associate Start'], metadata['Cycle Exit']));\n    } else {\n      daysSinceStart = Math.round(calcDaysSince(metadata['Associate Start']));\n    }\n\n    return (\n      <div className={styles.Graph3}>\n        <ResponsiveBullet\n          data={[\n            {\n              id: 'Associate',\n              ranges: [21, 28, 70, 105, 126, 140],\n              measures: [daysSinceStart],\n              markers: []\n            }\n          ]}\n          margin={{ top: 50, right: 90, bottom: 50, left: 90 }}\n          spacing={46}\n          titleAlign='start'\n          titleOffsetX={-70}\n          measureSize={0.4}\n          rangeColors='red_yellow_blue'\n          measureColors='#e6e6e6'\n          markerColors='black'\n          markerSize={1}\n        />\n      </div>\n    );\n  }\n\n  toggleHandler = () => {\n    this.setState(prevState => ({ showModules: !prevState.showModules }));\n  }\n\n  render() {\n    const { metadata, title, subtitle, traditional } = this.props;\n    const { showModules } = this.state;\n\n    return (\n      <Paper className={styles.Paper}>\n        <div className={styles.Header}>\n          <Typography variant='h4'>\n            {title}\n          </Typography>\n          {subtitle ? <Typography variant='subtitle1' color='textSecondary'>\n            {subtitle}\n          </Typography> : null}\n        </div>\n\n        <div className={styles.Divider}>\n          <Divider />\n        </div>\n\n        {!traditional ? <Toggle\n          checked={showModules}\n          onChange={this.toggleHandler}\n          leftLabel='Overview'\n          rightLabel='Per Module'\n        /> : null}\n\n        {traditional ? this.createTradCycleGraph(metadata) : this.createMLCycleGraphs(showModules, metadata)}\n\n        {showModules ? <Legend items={['Max Time', 'Associate']} colors={'moduleLengthColors'} /> : <Legend items={Metadata.modules} colors={'moduleColors'} />}\n      </Paper>\n    );\n  }\n}\n\nexport default BulletGraph;","import React from 'react';\nimport styles from './Spinner.module.css';\n\nconst Spinner = props => {\n    return <div className={styles.loader}>Loading...</div>;\n}\n\nexport default Spinner;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCycleMetrics } from '../../redux/actions';\nimport MaterialTable from 'material-table';\nimport styles from './Associate.module.css';\nimport AssociateInfo from '../../components/associate-info/AssociateInfo';\nimport Breadcrumbs from '../../components/breadcrumbs/Breadcrumbs';\nimport Calendar from '../../components/calendar/Calendar';\nimport RadarGraph from '../../components/radar-graph/RadarGraph';\nimport { getUrlParams } from '../../shared/dataService';\nimport BulletGraph from '../../components/bullet-graph/BulletGraph';\nimport Spinner from '../../components/spinner/Spinner';\n\nclass Associate extends Component {\n  componentDidMount() {\n    const { cycle } = getUrlParams(this.props.history);\n    // only fetches if not already in memory\n    if (!Object.keys(this.props.cycleAggr).includes(cycle)) {\n      this.props.fetchCycle(cycle);\n    }\n  }\n\n  render() {\n    const { associateMetadata, cycleAggr, cycleMetrics, history } = this.props;\n    const { url, cycle, associate } = getUrlParams(history);\n    const tradCycle = RegExp('trad').test(cycle);\n\n    return (\n      !this.props.loading && cycleMetrics[cycle] && cycleAggr[cycle] && associateMetadata[associate] ?\n        <div className={styles.Wrapper}>\n          <Breadcrumbs path={url} />\n\n          <AssociateInfo cycle={cycle} associate={cycleMetrics[cycle].find(row => row[0].Person === associate)} />\n\n          <RadarGraph\n            title='Running Avg of Assesments'\n            subtitle='Compared to Cycle Averages'\n            keys={[associate, 'Cycle Average']}\n            index='avg'\n            data={[\n              {\n                avg: 'Projects',\n                [associate]: cycleAggr[cycle][associate].projectAvg,\n                'Cycle Average': cycleAggr[cycle][cycle].projectAvg\n              },\n              {\n                avg: 'Quizzes',\n                [associate]: cycleAggr[cycle][associate].quizAvg,\n                'Cycle Average': cycleAggr[cycle][cycle].quizAvg,\n\n              },\n              {\n                avg: 'Soft Skills',\n                [associate]: cycleAggr[cycle][associate].softSkillsAvg,\n                'Cycle Average': cycleAggr[cycle][cycle].softSkillsAvg,\n              },\n              {\n                avg: 'Attempt/Pass',\n                [associate]: cycleAggr[cycle][associate].attemptPass,\n                'Cycle Average': cycleAggr[cycle][cycle].attemptAvg\n              }\n            ]}\n          />\n\n          <BulletGraph\n            title='Cycle Progress'\n            subtitle={tradCycle ? null : 'Overall & Per Module'}\n            metadata={associateMetadata[associate]}\n            traditional={tradCycle}\n          />\n\n          <Calendar metrics={cycleMetrics[cycle].find(row => row[0].Person === associate)} />\n\n          <div className={styles.Paper}>\n            <MaterialTable\n              title=\"Associate Metrics\"\n              columns={[\n                { title: 'Interaction', field: 'Interaction' },\n                { title: 'Interaction Type', field: 'Interaction Type' },\n                { title: 'Score', field: 'Score' },\n                { title: 'Date', field: 'Date', type: 'date' }\n              ]}\n              data={cycleMetrics[cycle].find(row => row[0].Person === associate)}\n              options={{\n                sorting: true\n              }}\n            />\n          </div>\n        </div>\n        : <Spinner />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  associateMetadata: state.cycles.associateMetadata,\n  cycleAggr: state.cycles.cycleAggr,\n  cycleMetrics: state.cycles.cycleMetrics,\n  loading: state.cycles.loading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCycle: (cycleName) => dispatch(fetchCycleMetrics(cycleName))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Associate);","import React from 'react';\nimport { Divider, Paper, Typography } from '@material-ui/core';\nimport styles from './CycleInfo.module.css';\n\nconst CycleInfo = props => {\n  const { cycleName, metadata } = props;\n\n  const nameSplit = cycleName.split(' ');\n  const cycleType = nameSplit.splice(0, 2).join(' ');\n  const formattedName = nameSplit.splice(-3, 3).join(' ');\n  const trainers = metadata['Trainer Start'].reduce((acc, curr) => (acc + curr.name + ' | '), '').slice(0, -2);\n  const TAs = metadata['TA Start'].reduce((acc, curr) => (acc + curr.name + ' | '), '').slice(0, -2);\n  const startDates = metadata['Cycle Start Date'].join(' | ');\n  const endDate = metadata['Cycle End Date'];\n  const currentNumAssociates = metadata['Associate Leave'] ?\n    metadata['Associate Start'].length - metadata['Associate Leave'].length\n    : metadata['Associate Start'].length;\n\n  return (\n    <Paper className={styles.Paper}>\n      <div className={styles.Header}>\n        <Typography variant='h3'>\n          {formattedName}\n        </Typography>\n\n        <Typography variant='h6' color='textSecondary'>\n          {cycleType}\n        </Typography>\n      </div>\n\n      <div className={styles.Divider}>\n        <Divider />\n      </div>\n\n      <div className={styles.Body}>\n        <div>\n          <Typography variant='body2'>\n            <strong>Trainer(s): </strong>{trainers}\n          </Typography>\n\n          <Typography variant='body2'>\n            <strong>TA(s): </strong>{TAs}\n          </Typography>\n\n          <Typography variant='body2'>\n            <strong>Total # Associates: </strong>{metadata['Associate Start'].length}\n          </Typography>\n        </div>\n\n        <div>\n          <Typography variant='body2'>\n            <strong>Start Date(s): </strong>{startDates}\n          </Typography>\n\n          <Typography variant='body2'>\n            <strong>End Date: </strong>{endDate}\n          </Typography>\n\n          <Typography variant='body2'>\n            <strong>Current # Associates: </strong>{currentNumAssociates}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  );\n}\n\nexport default CycleInfo;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCycleMetrics } from '../../redux/actions';\nimport MaterialTable from 'material-table';\nimport Breadcrumbs from '../../components/breadcrumbs/Breadcrumbs';\nimport CycleInfo from '../../components/cycle-info/CycleInfo';\nimport RadarGraph from '../../components/radar-graph/RadarGraph';\nimport Spinner from '../../components/spinner/Spinner';\nimport { getUrlParams, calcPercentiles, formatPercentile } from '../../shared/dataService';\nimport CONSTS from '../../shared/constants';\nimport styles from './Cycle.module.css';\n\nclass Cycle extends Component {\n  componentDidMount() {\n    const { cycle } = getUrlParams(this.props.history);\n    // only fetches if not already in memory\n    if (!Object.keys(this.props.cycleAggr).includes(cycle)) {\n      this.props.fetchCycle(cycle);\n    }\n  }\n\n  render() {\n    const { allCycleAggr, cycleAggr, cycleMetadata, cycleMetrics, history } = this.props;\n    const { url, cycle } = getUrlParams(history);\n\n    return (\n      !this.props.loading && cycleAggr[cycle] && cycleMetadata[cycle] && cycleMetrics[cycle] && Object.keys(allCycleAggr).length ?\n        <div className={styles.Wrapper}>\n          <Breadcrumbs path={url} />\n\n          <CycleInfo cycleName={CONSTS[cycle]} metadata={cycleMetadata[cycle]} />\n\n          <RadarGraph\n            title='Running Averages of Assesments'\n            subtitle='Including the Max and Min Associate Running Average'\n            index='avg'\n            data={[\n              {\n                avg: 'Projects',\n                'Max': cycleAggr[cycle][cycle].projectMax,\n                'Min': cycleAggr[cycle][cycle].projectMin,\n                'Average': cycleAggr[cycle][cycle].projectAvg\n              },\n              {\n                avg: 'Quizzes',\n                'Max': cycleAggr[cycle][cycle].quizMax,\n                'Min': cycleAggr[cycle][cycle].quizMin,\n                'Average': cycleAggr[cycle][cycle].quizAvg\n              },\n              {\n                avg: 'Soft Skills',\n                'Max': cycleAggr[cycle][cycle].softSkillsMax,\n                'Min': cycleAggr[cycle][cycle].softSkillsMin,\n                'Average': cycleAggr[cycle][cycle].softSkillsAvg\n              },\n              {\n                avg: 'Attempt/Pass',\n                'Max': cycleAggr[cycle][cycle].attemptMax,\n                'Min': cycleAggr[cycle][cycle].attemptMin,\n                'Average': cycleAggr[cycle][cycle].attemptAvg\n              }\n            ]}\n            keys={['Average', 'Max', 'Min']}\n          />\n\n          <div className={styles.Paper}>\n            <MaterialTable\n              title=\"Associate Assessment Average & Percentile\"\n              columns={[\n                { title: 'Associate', field: 'name' },\n                { title: 'Projects', field: 'projectAvg' },\n                { title: 'Quizzes', field: 'quizAvg' },\n                { title: 'Soft Skills', field: 'softSkillsAvg' },\n                { title: 'Attempt/Pass', field: 'attemptPass' }\n              ]}\n              data={\n                Object.entries(cycleAggr[cycle]).map(([name, values]) => ({\n                  name,\n                  projectAvg: `${values.projectAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.projectScores, values.projectAvg))}`,\n                  quizAvg: `${values.quizAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.quizScores, values.quizAvg))}`,\n                  softSkillsAvg: `${values.softSkillsAvg}% / ${formatPercentile(calcPercentiles(allCycleAggr.softSkillsScores, values.softSkillsAvg))}`,\n                  attemptPass: values.attemptPass + '%'\n                }))\n              }\n              options={{\n                sorting: true\n              }}\n              actions={[\n                {\n                  icon: 'search',\n                  tooltip: 'View Associate',\n                  onClick: (event, rowData) => {\n                    if (rowData.name !== cycle) {\n                      this.props.history.push(`/cycle/${cycle}/associate/${rowData.name.split(' ').join('-')}`)\n                    }\n                  }\n                }\n              ]}\n            />\n          </div>\n        </div>\n        : <Spinner />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  allCycleAggr: state.cycles.allCycleAggr,\n  cycleAggr: state.cycles.cycleAggr,\n  cycleMetadata: state.cycles.cycleMetadata,\n  cycleMetrics: state.cycles.cycleMetrics,\n  loading: state.cycles.loading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCycle: (cycleName) => dispatch(fetchCycleMetrics(cycleName))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cycle);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Paper, Typography } from '@material-ui/core';\nimport styles from './Cycles.module.css';\nimport Metadata from '../../shared/metadata';\nimport CONSTS from '../../shared/constants';\n\nclass Cycles extends Component {\n  render() {\n    const cycleList = Metadata.cycles.map((cycle, index) => (\n      <Paper key={index} className={styles.Paper}>\n        <Typography variant=\"h5\" component=\"h3\">\n          <Link to={'/cycle/' + cycle} className={styles.Link}>{CONSTS[cycle]}</Link>\n        </Typography>\n      </Paper>\n    ));\n\n    return (\n      <div className={styles.Container}>\n        {cycleList}\n      </div>\n    )\n  };\n}\n\nexport default Cycles;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchAllCyclesMetrics } from '../../redux/actions';\nimport RadarGraph from '../../components/radar-graph/RadarGraph';\nimport Spinner from '../../components/spinner/Spinner';\n\nclass Overview extends Component {\n  componentDidMount() {\n    this.props.fetchAllCycles();\n  }\n\n  render() {\n    const { allCycleAggr } = this.props;\n    let graph = <Spinner />;\n\n    if (Object.keys(allCycleAggr).length) {\n      graph = (<RadarGraph\n        title='All Cycles Assesments'\n        subtitle='For the 10th, 25th, 50th, 75th and 90th Percentile'\n        keys={['10th', '25th', '50th', '75th', '90th']}\n        index='index'\n        tall\n        data={[\n          {\n            index: 'Projects',\n            '10th': allCycleAggr.projectPercentiles[0],\n            '25th': allCycleAggr.projectPercentiles[1],\n            '50th': allCycleAggr.projectPercentiles[2],\n            '75th': allCycleAggr.projectPercentiles[3],\n            '90th': allCycleAggr.projectPercentiles[4]\n          },\n          {\n            index: 'Quizzes',\n            '10th': allCycleAggr.quizPercentiles[0],\n            '25th': allCycleAggr.quizPercentiles[1],\n            '50th': allCycleAggr.quizPercentiles[2],\n            '75th': allCycleAggr.quizPercentiles[3],\n            '90th': allCycleAggr.quizPercentiles[4]\n          },\n          {\n            index: 'Soft Skills',\n            '10th': allCycleAggr.softSkillsPercentiles[0],\n            '25th': allCycleAggr.softSkillsPercentiles[1],\n            '50th': allCycleAggr.softSkillsPercentiles[2],\n            '75th': allCycleAggr.softSkillsPercentiles[3],\n            '90th': allCycleAggr.softSkillsPercentiles[4]\n          }\n        ]}\n      />);\n    }\n\n    return graph;\n  }\n}\n\nconst mapStateToProps = state => ({\n  allCycleAggr: state.cycles.allCycleAggr\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllCycles: () => dispatch(fetchAllCyclesMetrics())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Overview);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './NavBar.module.css';\nimport { AppBar, Drawer, IconButton, List, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\nimport { ArrowUpward, Autorenew, Home, Menu, Person } from '@material-ui/icons';\n\nclass NavBar extends Component {\n  state = {\n    sideDrawerOpen: false\n  }\n\n  clickHandler = () => {\n    this.setState(prevState => ({ sideDrawerOpen: !prevState.sideDrawerOpen }));\n  }\n\n  render() {\n    return (\n      <>\n        <div style={{ display: 'flex' }}>\n          <AppBar position='static' style={{ flexDirection: 'row' }}>\n            <IconButton edge='start'\n              color='inherit'\n              aria-label='Menu'\n              style={{ margin: '0 16px' }}\n              onClick={this.clickHandler}>\n              <Menu />\n            </IconButton>\n            <Typography variant='h6' style={{ paddingTop: '8px' }}>Training Team DataViz</Typography>\n          </AppBar>\n        </div>\n\n        <Drawer open={this.state.sideDrawerOpen} onClose={this.clickHandler}>\n          <div\n            style={{ width: '250px' }}\n            role=\"presentation\"\n            onClick={this.clickHandler}\n            onKeyDown={this.clickHandler}\n          >\n            <List>\n              <Link to='/' className={styles.Link}>\n                <ListItem button>\n                  <ListItemIcon>\n                    <Home />\n                  </ListItemIcon>\n                  <ListItemText primary='Overview' />\n                </ListItem>\n              </Link>\n\n              <Link to='/cycle' className={styles.Link}>\n                <ListItem button>\n                  <ListItemIcon>\n                    <Autorenew />\n                  </ListItemIcon>\n                  <ListItemText primary='Cycles' />\n                </ListItem>\n              </Link>\n\n              <Link to='/associate' className={styles.Link}>\n                <ListItem button>\n                  <ListItemIcon>\n                    <Person />\n                  </ListItemIcon>\n                  <ListItemText primary='Associates' />\n                </ListItem>\n              </Link>\n\n              <Link to='/upload' className={styles.Link}>\n                <ListItem button>\n                  <ListItemIcon>\n                    <ArrowUpward />\n                  </ListItemIcon>\n                  <ListItemText primary='Upload' />\n                </ListItem>\n              </Link>\n            </List>\n          </div>\n        </Drawer>\n      </>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { postCycleMetrics } from '../../redux/actions';\nimport { Button, Card, CardContent, CardActions, CardHeader, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport Spinner from '../spinner/Spinner';\nimport styles from './Upload.module.css';\nimport Metadata from '../../shared/metadata';\nimport CONSTS from '../../shared/constants';\n\nclass Upload extends Component {\n  state = {\n    selectedCycle: ''\n  }\n\n  uploadFileHandler = () => {\n    const formData = new FormData();\n    formData.append('file', this.uploadInput.files[0]);\n\n    this.props.postCycle(formData, this.state.selectedCycle, this.props.history);\n  }\n\n  selectHandler = evt => {\n    this.setState({ selectedCycle: evt.target.value });\n  }\n\n  render() {\n    const { selectedCycle } = this.state;\n    const { error, loading } = this.props;\n\n    const cycleList = Metadata.cycles.map((cycle, index) => {\n      return <MenuItem key={index} value={cycle}>{CONSTS[cycle]}</MenuItem>\n    });\n\n    return !loading ?\n      <Card className={styles.Card}>\n        <CardHeader title='Upload a CSV File:' />\n        {error ? <p className={styles.Error}>{error}</p> : null}\n\n        <div className={styles.Container}>\n          <FormControl className={styles.Select}>\n            <InputLabel htmlFor='cycles'>Select Cycle</InputLabel>\n            <Select\n              value={selectedCycle}\n              onChange={this.selectHandler}\n              inputProps={{\n                id: 'cycles',\n              }}\n            >\n              {cycleList}\n            </Select>\n          </FormControl>\n        </div>\n\n        <CardContent>\n          <input accept='.csv'\n            ref={(ref) => { this.uploadInput = ref; }}\n            type='file' />\n        </CardContent>\n\n        <CardActions>\n          <Button variant=\"contained\"\n            color=\"primary\"\n            onClick={this.uploadFileHandler}\n            disabled={selectedCycle === ''}>\n            Upload\n          </Button>\n        </CardActions>\n      </Card>\n      : <Spinner />;\n  }\n}\n\nconst mapStateToProps = state => ({\n  error: state.cycles.error,\n  loading: state.cycles.loading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  postCycle: (formData, cycleName, history) => dispatch(postCycleMetrics(formData, cycleName, history))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Upload);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { resetError } from './redux/actions';\nimport styles from './App.module.css';\nimport { Button, Modal } from '@material-ui/core';\nimport Associate from './containers/associate/Associate';\nimport Cycle from './containers/cycle/Cycle';\nimport Cycles from './containers/cycles/Cycles';\nimport Overview from './containers/overview/Overview';\nimport NavBar from './components/NavBar/NavBar';\nimport Upload from './components/upload/Upload';\n\nclass App extends Component {\n\n  toggleModal = () => {\n    this.props.resetError();\n  }\n\n  render() {\n    const { error } = this.props;\n\n    return (\n      <>\n        <NavBar />\n        <main className={styles.Main}>\n          <Switch>\n            <Route path='/cycle' exact component={Cycles} />\n            <Route path='/cycle/:cycle' exact component={Cycle} />\n            {/* <Route path='/cycle/:cycle/associate' exact component={Associates} /> */}\n            <Route path='/cycle/:cycle/associate/:associateName' exact component={Associate} />\n            <Route path='/upload' exact component={Upload} />\n            <Route path='/' component={Overview} />\n          </Switch>\n        </main>\n\n        {error ? <Modal\n          aria-labelledby='simple-modal-title'\n          aria-describedby='simple-modal-description'\n          open={!!error}\n          onClose={this.toggleModal}\n        >\n          <div className={styles.Modal}>\n            <h2 id='modal-title'>Oops, something went wrong!</h2>\n            <p id='simple-modal-description'>\n              {error.message}\n            </p>\n            <p id='simple-modal-description'>\n              {error.response.data}\n            </p>\n            <Button\n              variant=\"contained\"\n              className={styles.Button}\n              onClick={this.toggleModal}>\n              Close\n            </Button>\n          </div>\n        </Modal> : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  error: state.cycles.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetError: () => dispatch(resetError())\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport configureStore from './redux/store';\nimport rootSaga from './redux/sagas/rootSaga'\nimport './index.css';\nimport App from './App';\n\nconst store = configureStore();\n\nstore.runSagas(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers/rootReducer';\n\nexport default function configureStore() {\n  const sagaMiddleware = createSagaMiddleware();\n\n  return {\n    ...createStore(rootReducer, applyMiddleware(sagaMiddleware)),\n    runSagas: sagaMiddleware.run\n  }\n}"],"sourceRoot":""}